!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/public/assets/",n(n.s=209)}([function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n=e.exports={version:"2.5.5"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(44)("wks"),o=n(22),i=n(5).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,t,n){(function(r){function o(){var e;try{e=t.storage.debug}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=r.env.DEBUG),e}(t=e.exports=n(103)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),!n)return;var r="color: "+this.color;e.splice(1,0,r,"color: inherit");var o=0,i=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&"%c"===e&&(i=++o)}),e.splice(i,0,r)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=o,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(o())}).call(this,n(104))},function(e,t,n){var r=n(14),o=n(76),i=n(42),a=Object.defineProperty;t.f=n(6)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){e.exports=!n(18)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(5),o=n(1),i=n(43),a=n(15),s=n(8),l=function(e,t,n){var u,c,f,p=e&l.F,d=e&l.G,h=e&l.S,m=e&l.P,y=e&l.B,g=e&l.W,v=d?o:o[t]||(o[t]={}),b=v.prototype,k=d?r:h?r[t]:(r[t]||{}).prototype;for(u in d&&(n=t),n)(c=!p&&k&&void 0!==k[u])&&s(v,u)||(f=c?k[u]:n[u],v[u]=d&&"function"!=typeof k[u]?n[u]:y&&c?i(f,r):g&&k[u]==f?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):m&&"function"==typeof f?i(Function.call,f):f,m&&((v.virtual||(v.virtual={}))[u]=f,e&l.R&&b&&!b[u]&&a(b,u,f)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){(function(e){var r,o=n(96),i=n(53),a=n(95),s=n(94),l=n(93);e&&e.ArrayBuffer&&(r=n(92));var u="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),c="undefined"!=typeof navigator&&/PhantomJS/i.test(navigator.userAgent),f=u||c;t.protocol=3;var p=t.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6},d=o(p),h={type:"error",data:"parser error"},m=n(91);function y(e,t,n){for(var r=new Array(e.length),o=s(e.length,n),i=function(e,n,o){t(n,function(t,n){r[e]=n,o(t,r)})},a=0;a<e.length;a++)i(a,e[a],o)}t.encodePacket=function(n,r,o,i){"function"==typeof r&&(i=r,r=!1),"function"==typeof o&&(i=o,o=null);var a=void 0===n.data?void 0:n.data.buffer||n.data;if(e.ArrayBuffer&&a instanceof ArrayBuffer)return function(e,n,r){if(!n)return t.encodeBase64Packet(e,r);var o=e.data,i=new Uint8Array(o),a=new Uint8Array(1+o.byteLength);a[0]=p[e.type];for(var s=0;s<i.length;s++)a[s+1]=i[s];return r(a.buffer)}(n,r,i);if(m&&a instanceof e.Blob)return function(e,n,r){if(!n)return t.encodeBase64Packet(e,r);if(f)return function(e,n,r){if(!n)return t.encodeBase64Packet(e,r);var o=new FileReader;return o.onload=function(){e.data=o.result,t.encodePacket(e,n,!0,r)},o.readAsArrayBuffer(e.data)}(e,n,r);var o=new Uint8Array(1);o[0]=p[e.type];var i=new m([o.buffer,e.data]);return r(i)}(n,r,i);if(a&&a.base64)return function(e,n){var r="b"+t.packets[e.type]+e.data.data;return n(r)}(n,i);var s=p[n.type];return void 0!==n.data&&(s+=o?l.encode(String(n.data),{strict:!1}):String(n.data)),i(""+s)},t.encodeBase64Packet=function(n,r){var o,i="b"+t.packets[n.type];if(m&&n.data instanceof e.Blob){var a=new FileReader;return a.onload=function(){var e=a.result.split(",")[1];r(i+e)},a.readAsDataURL(n.data)}try{o=String.fromCharCode.apply(null,new Uint8Array(n.data))}catch(e){for(var s=new Uint8Array(n.data),l=new Array(s.length),u=0;u<s.length;u++)l[u]=s[u];o=String.fromCharCode.apply(null,l)}return i+=e.btoa(o),r(i)},t.decodePacket=function(e,n,r){if(void 0===e)return h;if("string"==typeof e){if("b"===e.charAt(0))return t.decodeBase64Packet(e.substr(1),n);if(r&&!1===(e=function(e){try{e=l.decode(e,{strict:!1})}catch(e){return!1}return e}(e)))return h;var o=e.charAt(0);return Number(o)==o&&d[o]?e.length>1?{type:d[o],data:e.substring(1)}:{type:d[o]}:h}o=new Uint8Array(e)[0];var i=a(e,1);return m&&"blob"===n&&(i=new m([i])),{type:d[o],data:i}},t.decodeBase64Packet=function(e,t){var n=d[e.charAt(0)];if(!r)return{type:n,data:{base64:!0,data:e.substr(1)}};var o=r.decode(e.substr(1));return"blob"===t&&m&&(o=new m([o])),{type:n,data:o}},t.encodePayload=function(e,n,r){"function"==typeof n&&(r=n,n=null);var o=i(e);if(n&&o)return m&&!f?t.encodePayloadAsBlob(e,r):t.encodePayloadAsArrayBuffer(e,r);if(!e.length)return r("0:");y(e,function(e,r){t.encodePacket(e,!!o&&n,!1,function(e){r(null,function(e){return e.length+":"+e}(e))})},function(e,t){return r(t.join(""))})},t.decodePayload=function(e,n,r){if("string"!=typeof e)return t.decodePayloadAsBinary(e,n,r);var o;if("function"==typeof n&&(r=n,n=null),""===e)return r(h,0,1);for(var i,a,s="",l=0,u=e.length;l<u;l++){var c=e.charAt(l);if(":"===c){if(""===s||s!=(i=Number(s)))return r(h,0,1);if(s!=(a=e.substr(l+1,i)).length)return r(h,0,1);if(a.length){if(o=t.decodePacket(a,n,!1),h.type===o.type&&h.data===o.data)return r(h,0,1);if(!1===r(o,l+i,u))return}l+=i,s=""}else s+=c}return""!==s?r(h,0,1):void 0},t.encodePayloadAsArrayBuffer=function(e,n){if(!e.length)return n(new ArrayBuffer(0));y(e,function(e,n){t.encodePacket(e,!0,!0,function(e){return n(null,e)})},function(e,t){var r=t.reduce(function(e,t){var n;return e+(n="string"==typeof t?t.length:t.byteLength).toString().length+n+2},0),o=new Uint8Array(r),i=0;return t.forEach(function(e){var t="string"==typeof e,n=e;if(t){for(var r=new Uint8Array(e.length),a=0;a<e.length;a++)r[a]=e.charCodeAt(a);n=r.buffer}o[i++]=t?0:1;var s=n.byteLength.toString();for(a=0;a<s.length;a++)o[i++]=parseInt(s[a]);o[i++]=255;for(r=new Uint8Array(n),a=0;a<r.length;a++)o[i++]=r[a]}),n(o.buffer)})},t.encodePayloadAsBlob=function(e,n){y(e,function(e,n){t.encodePacket(e,!0,!0,function(e){var t=new Uint8Array(1);if(t[0]=1,"string"==typeof e){for(var r=new Uint8Array(e.length),o=0;o<e.length;o++)r[o]=e.charCodeAt(o);e=r.buffer,t[0]=0}var i=(e instanceof ArrayBuffer?e.byteLength:e.size).toString(),a=new Uint8Array(i.length+1);for(o=0;o<i.length;o++)a[o]=parseInt(i[o]);if(a[i.length]=255,m){var s=new m([t.buffer,a.buffer,e]);n(null,s)}})},function(e,t){return n(new m(t))})},t.decodePayloadAsBinary=function(e,n,r){"function"==typeof n&&(r=n,n=null);for(var o=e,i=[];o.byteLength>0;){for(var s=new Uint8Array(o),l=0===s[0],u="",c=1;255!==s[c];c++){if(u.length>310)return r(h,0,1);u+=s[c]}o=a(o,2+u.length),u=parseInt(u);var f=a(o,0,u);if(l)try{f=String.fromCharCode.apply(null,new Uint8Array(f))}catch(e){var p=new Uint8Array(f);f="";for(c=0;c<p.length;c++)f+=String.fromCharCode(p[c])}i.push(f),o=a(o,u)}var d=i.length;i.forEach(function(e,o){r(t.decodePacket(e,n,!0),o,d)})}}).call(this,n(0))},function(e,t,n){function r(e){if(e)return function(e){for(var t in r.prototype)e[t]=r.prototype[t];return e}(e)}e.exports=r,r.prototype.on=r.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},r.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,r=this._callbacks["$"+e];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var o=0;o<r.length;o++)if((n=r[o])===t||n.fn===t){r.splice(o,1);break}return this},r.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),n=this._callbacks["$"+e];if(n)for(var r=0,o=(n=n.slice(0)).length;r<o;++r)n[r].apply(this,t);return this},r.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},r.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(n)return[e,t];return e},e.exports=t.default},function(e,t,n){var r=n(184),o=n(46);e.exports=function(e){return r(o(e))}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(13);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){var r=n(4),o=n(17);e.exports=n(6)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports={}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e,t){var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t){t.encode=function(e){var t="";for(var n in e)e.hasOwnProperty(n)&&(t.length&&(t+="&"),t+=encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t},t.decode=function(e){for(var t={},n=e.split("&"),r=0,o=n.length;r<o;r++){var i=n[r].split("=");t[decodeURIComponent(i[0])]=decodeURIComponent(i[1])}return t}},function(e,t,n){var r=n(69),o=n(37);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(46);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";e.exports=n(208)},function(e,t,n){var r=n(9),o=n(10);function i(e){this.path=e.path,this.hostname=e.hostname,this.port=e.port,this.secure=e.secure,this.query=e.query,this.timestampParam=e.timestampParam,this.timestampRequests=e.timestampRequests,this.readyState="",this.agent=e.agent||!1,this.socket=e.socket,this.enablesXDR=e.enablesXDR,this.pfx=e.pfx,this.key=e.key,this.passphrase=e.passphrase,this.cert=e.cert,this.ca=e.ca,this.ciphers=e.ciphers,this.rejectUnauthorized=e.rejectUnauthorized,this.forceNode=e.forceNode,this.extraHeaders=e.extraHeaders,this.localAddress=e.localAddress}e.exports=i,o(i.prototype),i.prototype.onError=function(e,t){var n=new Error(e);return n.type="TransportError",n.description=t,this.emit("error",n),this},i.prototype.open=function(){return"closed"!==this.readyState&&""!==this.readyState||(this.readyState="opening",this.doOpen()),this},i.prototype.close=function(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this},i.prototype.send=function(e){if("open"!==this.readyState)throw new Error("Transport not open");this.write(e)},i.prototype.onOpen=function(){this.readyState="open",this.writable=!0,this.emit("open")},i.prototype.onData=function(e){var t=r.decodePacket(e,this.socket.binaryType);this.onPacket(t)},i.prototype.onPacket=function(e){this.emit("packet",e)},i.prototype.onClose=function(){this.readyState="closed",this.emit("close")}},function(e,t,n){(function(t){var r=n(98);e.exports=function(e){var n=e.xdomain,o=e.xscheme,i=e.enablesXDR;try{if("undefined"!=typeof XMLHttpRequest&&(!n||r))return new XMLHttpRequest}catch(e){}try{if("undefined"!=typeof XDomainRequest&&!o&&i)return new XDomainRequest}catch(e){}if(!n)try{return new(t[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}}).call(this,n(0))},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){var r=n(3)("socket.io-parser"),o=n(10),i=n(101),a=n(27),s=n(57);function l(){}t.protocol=4,t.types=["CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK"],t.CONNECT=0,t.DISCONNECT=1,t.EVENT=2,t.ACK=3,t.ERROR=4,t.BINARY_EVENT=5,t.BINARY_ACK=6,t.Encoder=l,t.Decoder=f;var u=t.ERROR+'"encode error"';function c(e){var n=""+e.type;if(t.BINARY_EVENT!==e.type&&t.BINARY_ACK!==e.type||(n+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(n+=e.nsp+","),null!=e.id&&(n+=e.id),null!=e.data){var o=function(e){try{return JSON.stringify(e)}catch(e){return!1}}(e.data);if(!1===o)return u;n+=o}return r("encoded %j as %s",e,n),n}function f(){this.reconstructor=null}function p(e){this.reconPack=e,this.buffers=[]}function d(e){return{type:t.ERROR,data:"parser error: "+e}}l.prototype.encode=function(e,n){(r("encoding packet %j",e),t.BINARY_EVENT===e.type||t.BINARY_ACK===e.type)?function(e,t){i.removeBlobs(e,function(e){var n=i.deconstructPacket(e),r=c(n.packet),o=n.buffers;o.unshift(r),t(o)})}(e,n):n([c(e)])},o(f.prototype),f.prototype.add=function(e){var n;if("string"==typeof e)n=function(e){var n=0,o={type:Number(e.charAt(0))};if(null==t.types[o.type])return d("unknown packet type "+o.type);if(t.BINARY_EVENT===o.type||t.BINARY_ACK===o.type){for(var i="";"-"!==e.charAt(++n)&&(i+=e.charAt(n),n!=e.length););if(i!=Number(i)||"-"!==e.charAt(n))throw new Error("Illegal attachments");o.attachments=Number(i)}if("/"===e.charAt(n+1))for(o.nsp="";++n;){var s=e.charAt(n);if(","===s)break;if(o.nsp+=s,n===e.length)break}else o.nsp="/";var l=e.charAt(n+1);if(""!==l&&Number(l)==l){for(o.id="";++n;){var s=e.charAt(n);if(null==s||Number(s)!=s){--n;break}if(o.id+=e.charAt(n),n===e.length)break}o.id=Number(o.id)}if(e.charAt(++n)){var u=function(e){try{return JSON.parse(e)}catch(e){return!1}}(e.substr(n)),c=!1!==u&&(o.type===t.ERROR||a(u));if(!c)return d("invalid payload");o.data=u}return r("decoded %s as %j",e,o),o}(e),t.BINARY_EVENT===n.type||t.BINARY_ACK===n.type?(this.reconstructor=new p(n),0===this.reconstructor.reconPack.attachments&&this.emit("decoded",n)):this.emit("decoded",n);else{if(!s(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");(n=this.reconstructor.takeBinaryData(e))&&(this.reconstructor=null,this.emit("decoded",n))}},f.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},p.prototype.takeBinaryData=function(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){var t=i.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null},p.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&r.test(e)};var r=/-webkit-|-moz-|-ms-/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.red50="#ffebee",t.red100="#ffcdd2",t.red200="#ef9a9a",t.red300="#e57373",t.red400="#ef5350",t.red500="#f44336",t.red600="#e53935",t.red700="#d32f2f",t.red800="#c62828",t.red900="#b71c1c",t.redA100="#ff8a80",t.redA200="#ff5252",t.redA400="#ff1744",t.redA700="#d50000",t.pink50="#fce4ec",t.pink100="#f8bbd0",t.pink200="#f48fb1",t.pink300="#f06292",t.pink400="#ec407a",t.pink500="#e91e63",t.pink600="#d81b60",t.pink700="#c2185b",t.pink800="#ad1457",t.pink900="#880e4f",t.pinkA100="#ff80ab",t.pinkA200="#ff4081",t.pinkA400="#f50057",t.pinkA700="#c51162",t.purple50="#f3e5f5",t.purple100="#e1bee7",t.purple200="#ce93d8",t.purple300="#ba68c8",t.purple400="#ab47bc",t.purple500="#9c27b0",t.purple600="#8e24aa",t.purple700="#7b1fa2",t.purple800="#6a1b9a",t.purple900="#4a148c",t.purpleA100="#ea80fc",t.purpleA200="#e040fb",t.purpleA400="#d500f9",t.purpleA700="#aa00ff",t.deepPurple50="#ede7f6",t.deepPurple100="#d1c4e9",t.deepPurple200="#b39ddb",t.deepPurple300="#9575cd",t.deepPurple400="#7e57c2",t.deepPurple500="#673ab7",t.deepPurple600="#5e35b1",t.deepPurple700="#512da8",t.deepPurple800="#4527a0",t.deepPurple900="#311b92",t.deepPurpleA100="#b388ff",t.deepPurpleA200="#7c4dff",t.deepPurpleA400="#651fff",t.deepPurpleA700="#6200ea",t.indigo50="#e8eaf6",t.indigo100="#c5cae9",t.indigo200="#9fa8da",t.indigo300="#7986cb",t.indigo400="#5c6bc0",t.indigo500="#3f51b5",t.indigo600="#3949ab",t.indigo700="#303f9f",t.indigo800="#283593",t.indigo900="#1a237e",t.indigoA100="#8c9eff",t.indigoA200="#536dfe",t.indigoA400="#3d5afe",t.indigoA700="#304ffe",t.blue50="#e3f2fd",t.blue100="#bbdefb",t.blue200="#90caf9",t.blue300="#64b5f6",t.blue400="#42a5f5",t.blue500="#2196f3",t.blue600="#1e88e5",t.blue700="#1976d2",t.blue800="#1565c0",t.blue900="#0d47a1",t.blueA100="#82b1ff",t.blueA200="#448aff",t.blueA400="#2979ff",t.blueA700="#2962ff",t.lightBlue50="#e1f5fe",t.lightBlue100="#b3e5fc",t.lightBlue200="#81d4fa",t.lightBlue300="#4fc3f7",t.lightBlue400="#29b6f6",t.lightBlue500="#03a9f4",t.lightBlue600="#039be5",t.lightBlue700="#0288d1",t.lightBlue800="#0277bd",t.lightBlue900="#01579b",t.lightBlueA100="#80d8ff",t.lightBlueA200="#40c4ff",t.lightBlueA400="#00b0ff",t.lightBlueA700="#0091ea",t.cyan50="#e0f7fa",t.cyan100="#b2ebf2",t.cyan200="#80deea",t.cyan300="#4dd0e1",t.cyan400="#26c6da",t.cyan500="#00bcd4",t.cyan600="#00acc1",t.cyan700="#0097a7",t.cyan800="#00838f",t.cyan900="#006064",t.cyanA100="#84ffff",t.cyanA200="#18ffff",t.cyanA400="#00e5ff",t.cyanA700="#00b8d4",t.teal50="#e0f2f1",t.teal100="#b2dfdb",t.teal200="#80cbc4",t.teal300="#4db6ac",t.teal400="#26a69a",t.teal500="#009688",t.teal600="#00897b",t.teal700="#00796b",t.teal800="#00695c",t.teal900="#004d40",t.tealA100="#a7ffeb",t.tealA200="#64ffda",t.tealA400="#1de9b6",t.tealA700="#00bfa5",t.green50="#e8f5e9",t.green100="#c8e6c9",t.green200="#a5d6a7",t.green300="#81c784",t.green400="#66bb6a",t.green500="#4caf50",t.green600="#43a047",t.green700="#388e3c",t.green800="#2e7d32",t.green900="#1b5e20",t.greenA100="#b9f6ca",t.greenA200="#69f0ae",t.greenA400="#00e676",t.greenA700="#00c853",t.lightGreen50="#f1f8e9",t.lightGreen100="#dcedc8",t.lightGreen200="#c5e1a5",t.lightGreen300="#aed581",t.lightGreen400="#9ccc65",t.lightGreen500="#8bc34a",t.lightGreen600="#7cb342",t.lightGreen700="#689f38",t.lightGreen800="#558b2f",t.lightGreen900="#33691e",t.lightGreenA100="#ccff90",t.lightGreenA200="#b2ff59",t.lightGreenA400="#76ff03",t.lightGreenA700="#64dd17",t.lime50="#f9fbe7",t.lime100="#f0f4c3",t.lime200="#e6ee9c",t.lime300="#dce775",t.lime400="#d4e157",t.lime500="#cddc39",t.lime600="#c0ca33",t.lime700="#afb42b",t.lime800="#9e9d24",t.lime900="#827717",t.limeA100="#f4ff81",t.limeA200="#eeff41",t.limeA400="#c6ff00",t.limeA700="#aeea00",t.yellow50="#fffde7",t.yellow100="#fff9c4",t.yellow200="#fff59d",t.yellow300="#fff176",t.yellow400="#ffee58",t.yellow500="#ffeb3b",t.yellow600="#fdd835",t.yellow700="#fbc02d",t.yellow800="#f9a825",t.yellow900="#f57f17",t.yellowA100="#ffff8d",t.yellowA200="#ffff00",t.yellowA400="#ffea00",t.yellowA700="#ffd600",t.amber50="#fff8e1",t.amber100="#ffecb3",t.amber200="#ffe082",t.amber300="#ffd54f",t.amber400="#ffca28",t.amber500="#ffc107",t.amber600="#ffb300",t.amber700="#ffa000",t.amber800="#ff8f00",t.amber900="#ff6f00",t.amberA100="#ffe57f",t.amberA200="#ffd740",t.amberA400="#ffc400",t.amberA700="#ffab00",t.orange50="#fff3e0",t.orange100="#ffe0b2",t.orange200="#ffcc80",t.orange300="#ffb74d",t.orange400="#ffa726",t.orange500="#ff9800",t.orange600="#fb8c00",t.orange700="#f57c00",t.orange800="#ef6c00",t.orange900="#e65100",t.orangeA100="#ffd180",t.orangeA200="#ffab40",t.orangeA400="#ff9100",t.orangeA700="#ff6d00",t.deepOrange50="#fbe9e7",t.deepOrange100="#ffccbc",t.deepOrange200="#ffab91",t.deepOrange300="#ff8a65",t.deepOrange400="#ff7043",t.deepOrange500="#ff5722",t.deepOrange600="#f4511e",t.deepOrange700="#e64a19",t.deepOrange800="#d84315",t.deepOrange900="#bf360c",t.deepOrangeA100="#ff9e80",t.deepOrangeA200="#ff6e40",t.deepOrangeA400="#ff3d00",t.deepOrangeA700="#dd2c00",t.brown50="#efebe9",t.brown100="#d7ccc8",t.brown200="#bcaaa4",t.brown300="#a1887f",t.brown400="#8d6e63",t.brown500="#795548",t.brown600="#6d4c41",t.brown700="#5d4037",t.brown800="#4e342e",t.brown900="#3e2723",t.blueGrey50="#eceff1",t.blueGrey100="#cfd8dc",t.blueGrey200="#b0bec5",t.blueGrey300="#90a4ae",t.blueGrey400="#78909c",t.blueGrey500="#607d8b",t.blueGrey600="#546e7a",t.blueGrey700="#455a64",t.blueGrey800="#37474f",t.blueGrey900="#263238",t.grey50="#fafafa",t.grey100="#f5f5f5",t.grey200="#eeeeee",t.grey300="#e0e0e0",t.grey400="#bdbdbd",t.grey500="#9e9e9e",t.grey600="#757575",t.grey700="#616161",t.grey800="#424242",t.grey900="#212121",t.black="#000000",t.white="#ffffff",t.transparent="rgba(0, 0, 0, 0)",t.fullBlack="rgba(0, 0, 0, 1)",t.darkBlack="rgba(0, 0, 0, 0.87)",t.lightBlack="rgba(0, 0, 0, 0.54)",t.minBlack="rgba(0, 0, 0, 0.26)",t.faintBlack="rgba(0, 0, 0, 0.12)",t.fullWhite="rgba(255, 255, 255, 1)",t.darkWhite="rgba(255, 255, 255, 0.87)",t.lightWhite="rgba(255, 255, 255, 0.54)"},function(e,t,n){"use strict";e.exports=function(){}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){var r=n(5),o=n(1),i=n(40),a=n(35),s=n(4).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,n){t.f=n(2)},function(e,t,n){var r=n(4).f,o=n(8),i=n(2)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(14),o=n(185),i=n(37),a=n(45)("IE_PROTO"),s=function(){},l=function(){var e,t=n(75)("iframe"),r=i.length;for(t.style.display="none",n(181).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[i[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=r(e),n=new s,s.prototype=null,n[a]=e):n=l(),void 0===t?n:o(n,t)}},function(e,t){e.exports=!0},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(13);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(195);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var r=n(5),o=r["__core-js_shared__"]||(r["__core-js_shared__"]={});e.exports=function(e){return o[e]||(o[e]={})}},function(e,t,n){var r=n(44)("keys"),o=n(22);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t){var n=[].slice;e.exports=function(e,t){if("string"==typeof t&&(t=e[t]),"function"!=typeof t)throw new Error("bind() requires a function");var r=n.call(arguments,2);return function(){return t.apply(e,r.concat(n.call(arguments)))}}},function(e,t){e.exports=function(e,t,n){return e.on(t,n),{destroy:function(){e.removeListener(t,n)}}}},function(e,t,n){var r=n(28),o=n(10),i=n(87),a=n(49),s=n(48),l=n(3)("socket.io-client:socket"),u=n(20),c=n(53);e.exports=d;var f={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},p=o.prototype.emit;function d(e,t,n){this.io=e,this.nsp=t,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,this.flags={},n&&n.query&&(this.query=n.query),this.io.autoConnect&&this.open()}o(d.prototype),d.prototype.subEvents=function(){if(!this.subs){var e=this.io;this.subs=[a(e,"open",s(this,"onopen")),a(e,"packet",s(this,"onpacket")),a(e,"close",s(this,"onclose"))]}},d.prototype.open=d.prototype.connect=function(){return this.connected?this:(this.subEvents(),this.io.open(),"open"===this.io.readyState&&this.onopen(),this.emit("connecting"),this)},d.prototype.send=function(){var e=i(arguments);return e.unshift("message"),this.emit.apply(this,e),this},d.prototype.emit=function(e){if(f.hasOwnProperty(e))return p.apply(this,arguments),this;var t=i(arguments),n={type:(void 0!==this.flags.binary?this.flags.binary:c(t))?r.BINARY_EVENT:r.EVENT,data:t,options:{}};return n.options.compress=!this.flags||!1!==this.flags.compress,"function"==typeof t[t.length-1]&&(l("emitting packet with ack id %d",this.ids),this.acks[this.ids]=t.pop(),n.id=this.ids++),this.connected?this.packet(n):this.sendBuffer.push(n),this.flags={},this},d.prototype.packet=function(e){e.nsp=this.nsp,this.io.packet(e)},d.prototype.onopen=function(){if(l("transport is open - connecting"),"/"!==this.nsp)if(this.query){var e="object"==typeof this.query?u.encode(this.query):this.query;l("sending connect packet with query %s",e),this.packet({type:r.CONNECT,query:e})}else this.packet({type:r.CONNECT})},d.prototype.onclose=function(e){l("close (%s)",e),this.connected=!1,this.disconnected=!0,delete this.id,this.emit("disconnect",e)},d.prototype.onpacket=function(e){if(e.nsp===this.nsp)switch(e.type){case r.CONNECT:this.onconnect();break;case r.EVENT:case r.BINARY_EVENT:this.onevent(e);break;case r.ACK:case r.BINARY_ACK:this.onack(e);break;case r.DISCONNECT:this.ondisconnect();break;case r.ERROR:this.emit("error",e.data)}},d.prototype.onevent=function(e){var t=e.data||[];l("emitting event %j",t),null!=e.id&&(l("attaching ack callback to event"),t.push(this.ack(e.id))),this.connected?p.apply(this,t):this.receiveBuffer.push(t)},d.prototype.ack=function(e){var t=this,n=!1;return function(){if(!n){n=!0;var o=i(arguments);l("sending ack %j",o),t.packet({type:c(o)?r.BINARY_ACK:r.ACK,id:e,data:o})}}},d.prototype.onack=function(e){var t=this.acks[e.id];"function"==typeof t?(l("calling ack %s with %j",e.id,e.data),t.apply(this,e.data),delete this.acks[e.id]):l("bad ack %s",e.id)},d.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit("connect"),this.emitBuffered()},d.prototype.emitBuffered=function(){var e;for(e=0;e<this.receiveBuffer.length;e++)p.apply(this,this.receiveBuffer[e]);for(this.receiveBuffer=[],e=0;e<this.sendBuffer.length;e++)this.packet(this.sendBuffer[e]);this.sendBuffer=[]},d.prototype.ondisconnect=function(){l("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")},d.prototype.destroy=function(){if(this.subs){for(var e=0;e<this.subs.length;e++)this.subs[e].destroy();this.subs=null}this.io.destroy(this)},d.prototype.close=d.prototype.disconnect=function(){return this.connected&&(l("performing disconnect (%s)",this.nsp),this.packet({type:r.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this},d.prototype.compress=function(e){return this.flags.compress=e,this},d.prototype.binary=function(e){return this.flags.binary=e,this}},function(e,t){var n=[].indexOf;e.exports=function(e,t){if(n)return e.indexOf(t);for(var r=0;r<e.length;++r)if(e[r]===t)return r;return-1}},function(e,t,n){"use strict";var r,o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),i=64,a={},s=0,l=0;function u(e){var t="";do{t=o[e%i]+t,e=Math.floor(e/i)}while(e>0);return t}function c(){var e=u(+new Date);return e!==r?(s=0,r=e):e+"."+u(s++)}for(;l<i;l++)a[o[l]]=l;c.encode=u,c.decode=function(e){var t=0;for(l=0;l<e.length;l++)t=t*i+a[e.charAt(l)];return t},e.exports=c},function(e,t,n){(function(t){var r=n(27),o=Object.prototype.toString,i="function"==typeof t.Blob||"[object BlobConstructor]"===o.call(t.Blob),a="function"==typeof t.File||"[object FileConstructor]"===o.call(t.File);e.exports=function e(n){if(!n||"object"!=typeof n)return!1;if(r(n)){for(var o=0,s=n.length;o<s;o++)if(e(n[o]))return!0;return!1}if("function"==typeof t.Buffer&&t.Buffer.isBuffer&&t.Buffer.isBuffer(n)||"function"==typeof t.ArrayBuffer&&n instanceof ArrayBuffer||i&&n instanceof Blob||a&&n instanceof File)return!0;if(n.toJSON&&"function"==typeof n.toJSON&&1===arguments.length)return e(n.toJSON(),!0);for(var l in n)if(Object.prototype.hasOwnProperty.call(n,l)&&e(n[l]))return!0;return!1}}).call(this,n(0))},function(e,t,n){var r=n(25),o=n(20),i=n(9),a=n(19),s=n(52),l=n(3)("engine.io-client:polling");e.exports=c;var u=null!=new(n(26))({xdomain:!1}).responseType;function c(e){var t=e&&e.forceBase64;u&&!t||(this.supportsBinary=!1),r.call(this,e)}a(c,r),c.prototype.name="polling",c.prototype.doOpen=function(){this.poll()},c.prototype.pause=function(e){var t=this;function n(){l("paused"),t.readyState="paused",e()}if(this.readyState="pausing",this.polling||!this.writable){var r=0;this.polling&&(l("we are currently polling - waiting to pause"),r++,this.once("pollComplete",function(){l("pre-pause polling complete"),--r||n()})),this.writable||(l("we are currently writing - waiting to pause"),r++,this.once("drain",function(){l("pre-pause writing complete"),--r||n()}))}else n()},c.prototype.poll=function(){l("polling"),this.polling=!0,this.doPoll(),this.emit("poll")},c.prototype.onData=function(e){var t=this;l("polling got data %s",e);i.decodePayload(e,this.socket.binaryType,function(e,n,r){if("opening"===t.readyState&&t.onOpen(),"close"===e.type)return t.onClose(),!1;t.onPacket(e)}),"closed"!==this.readyState&&(this.polling=!1,this.emit("pollComplete"),"open"===this.readyState?this.poll():l('ignoring poll - transport state "%s"',this.readyState))},c.prototype.doClose=function(){var e=this;function t(){l("writing close packet"),e.write([{type:"close"}])}"open"===this.readyState?(l("transport open - closing"),t()):(l("transport not open - deferring close"),this.once("open",t))},c.prototype.write=function(e){var t=this;this.writable=!1;var n=function(){t.writable=!0,t.emit("drain")};i.encodePayload(e,this.supportsBinary,function(e){t.doWrite(e,n)})},c.prototype.uri=function(){var e=this.query||{},t=this.secure?"https":"http",n="";return!1!==this.timestampRequests&&(e[this.timestampParam]=s()),this.supportsBinary||e.sid||(e.b64=1),e=o.encode(e),this.port&&("https"===t&&443!==Number(this.port)||"http"===t&&80!==Number(this.port))&&(n=":"+this.port),e.length&&(e="?"+e),t+"://"+(-1!==this.hostname.indexOf(":")?"["+this.hostname+"]":this.hostname)+n+this.path+e}},function(e,t,n){(function(e){var r=n(26),o=n(97),i=n(90),a=n(89);t.polling=function(t){var n=!1,a=!1,s=!1!==t.jsonp;if(e.location){var l="https:"===location.protocol,u=location.port;u||(u=l?443:80),n=t.hostname!==location.hostname||u!==t.port,a=t.secure!==l}if(t.xdomain=n,t.xscheme=a,"open"in new r(t)&&!t.forceJSONP)return new o(t);if(!s)throw new Error("JSONP disabled");return new i(t)},t.websocket=a}).call(this,n(0))},function(e,t,n){var r=n(100),o=n(50),i=n(10),a=n(28),s=n(49),l=n(48),u=n(3)("socket.io-client:manager"),c=n(51),f=n(86),p=Object.prototype.hasOwnProperty;function d(e,t){if(!(this instanceof d))return new d(e,t);e&&"object"==typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||"/socket.io",this.nsps={},this.subs=[],this.opts=t,this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(t.randomizationFactor||.5),this.backoff=new f({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this.readyState="closed",this.uri=e,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var n=t.parser||a;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this.autoConnect=!1!==t.autoConnect,this.autoConnect&&this.open()}e.exports=d,d.prototype.emitAll=function(){for(var e in this.emit.apply(this,arguments),this.nsps)p.call(this.nsps,e)&&this.nsps[e].emit.apply(this.nsps[e],arguments)},d.prototype.updateSocketIds=function(){for(var e in this.nsps)p.call(this.nsps,e)&&(this.nsps[e].id=this.generateId(e))},d.prototype.generateId=function(e){return("/"===e?"":e+"#")+this.engine.id},i(d.prototype),d.prototype.reconnection=function(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection},d.prototype.reconnectionAttempts=function(e){return arguments.length?(this._reconnectionAttempts=e,this):this._reconnectionAttempts},d.prototype.reconnectionDelay=function(e){return arguments.length?(this._reconnectionDelay=e,this.backoff&&this.backoff.setMin(e),this):this._reconnectionDelay},d.prototype.randomizationFactor=function(e){return arguments.length?(this._randomizationFactor=e,this.backoff&&this.backoff.setJitter(e),this):this._randomizationFactor},d.prototype.reconnectionDelayMax=function(e){return arguments.length?(this._reconnectionDelayMax=e,this.backoff&&this.backoff.setMax(e),this):this._reconnectionDelayMax},d.prototype.timeout=function(e){return arguments.length?(this._timeout=e,this):this._timeout},d.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},d.prototype.open=d.prototype.connect=function(e,t){if(u("readyState %s",this.readyState),~this.readyState.indexOf("open"))return this;u("opening %s",this.uri),this.engine=r(this.uri,this.opts);var n=this.engine,o=this;this.readyState="opening",this.skipReconnect=!1;var i=s(n,"open",function(){o.onopen(),e&&e()}),a=s(n,"error",function(t){if(u("connect_error"),o.cleanup(),o.readyState="closed",o.emitAll("connect_error",t),e){var n=new Error("Connection error");n.data=t,e(n)}else o.maybeReconnectOnOpen()});if(!1!==this._timeout){var l=this._timeout;u("connect attempt will timeout after %d",l);var c=setTimeout(function(){u("connect attempt timed out after %d",l),i.destroy(),n.close(),n.emit("error","timeout"),o.emitAll("connect_timeout",l)},l);this.subs.push({destroy:function(){clearTimeout(c)}})}return this.subs.push(i),this.subs.push(a),this},d.prototype.onopen=function(){u("open"),this.cleanup(),this.readyState="open",this.emit("open");var e=this.engine;this.subs.push(s(e,"data",l(this,"ondata"))),this.subs.push(s(e,"ping",l(this,"onping"))),this.subs.push(s(e,"pong",l(this,"onpong"))),this.subs.push(s(e,"error",l(this,"onerror"))),this.subs.push(s(e,"close",l(this,"onclose"))),this.subs.push(s(this.decoder,"decoded",l(this,"ondecoded")))},d.prototype.onping=function(){this.lastPing=new Date,this.emitAll("ping")},d.prototype.onpong=function(){this.emitAll("pong",new Date-this.lastPing)},d.prototype.ondata=function(e){this.decoder.add(e)},d.prototype.ondecoded=function(e){this.emit("packet",e)},d.prototype.onerror=function(e){u("error",e),this.emitAll("error",e)},d.prototype.socket=function(e,t){var n=this.nsps[e];if(!n){n=new o(this,e,t),this.nsps[e]=n;var r=this;n.on("connecting",i),n.on("connect",function(){n.id=r.generateId(e)}),this.autoConnect&&i()}function i(){~c(r.connecting,n)||r.connecting.push(n)}return n},d.prototype.destroy=function(e){var t=c(this.connecting,e);~t&&this.connecting.splice(t,1),this.connecting.length||this.close()},d.prototype.packet=function(e){u("writing packet %j",e);var t=this;e.query&&0===e.type&&(e.nsp+="?"+e.query),t.encoding?t.packetBuffer.push(e):(t.encoding=!0,this.encoder.encode(e,function(n){for(var r=0;r<n.length;r++)t.engine.write(n[r],e.options);t.encoding=!1,t.processPacketQueue()}))},d.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var e=this.packetBuffer.shift();this.packet(e)}},d.prototype.cleanup=function(){u("cleanup");for(var e=this.subs.length,t=0;t<e;t++){this.subs.shift().destroy()}this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},d.prototype.close=d.prototype.disconnect=function(){u("disconnect"),this.skipReconnect=!0,this.reconnecting=!1,"opening"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState="closed",this.engine&&this.engine.close()},d.prototype.onclose=function(e){u("onclose"),this.cleanup(),this.backoff.reset(),this.readyState="closed",this.emit("close",e),this._reconnection&&!this.skipReconnect&&this.reconnect()},d.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var e=this;if(this.backoff.attempts>=this._reconnectionAttempts)u("reconnect failed"),this.backoff.reset(),this.emitAll("reconnect_failed"),this.reconnecting=!1;else{var t=this.backoff.duration();u("will wait %dms before reconnect attempt",t),this.reconnecting=!0;var n=setTimeout(function(){e.skipReconnect||(u("attempting reconnect"),e.emitAll("reconnect_attempt",e.backoff.attempts),e.emitAll("reconnecting",e.backoff.attempts),e.skipReconnect||e.open(function(t){t?(u("reconnect attempt error"),e.reconnecting=!1,e.reconnect(),e.emitAll("reconnect_error",t.data)):(u("reconnect success"),e.onreconnect())}))},t);this.subs.push({destroy:function(){clearTimeout(n)}})}},d.prototype.onreconnect=function(){var e=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll("reconnect",e)}},function(e,t,n){(function(t){e.exports=function(e){return n&&t.Buffer.isBuffer(e)||r&&(e instanceof t.ArrayBuffer||o(e))};var n="function"==typeof t.Buffer&&"function"==typeof t.Buffer.isBuffer,r="function"==typeof t.ArrayBuffer,o=r&&"function"==typeof t.ArrayBuffer.isView?t.ArrayBuffer.isView:function(e){return e.buffer instanceof t.ArrayBuffer}}).call(this,n(0))},function(e,t){var n=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,r=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];e.exports=function(e){var t=e,o=e.indexOf("["),i=e.indexOf("]");-1!=o&&-1!=i&&(e=e.substring(0,o)+e.substring(o,i).replace(/:/g,";")+e.substring(i,e.length));for(var a=n.exec(e||""),s={},l=14;l--;)s[r[l]]=a[l]||"";return-1!=o&&-1!=i&&(s.source=t,s.host=s.host.substring(1,s.host.length-1).replace(/;/g,":"),s.authority=s.authority.replace("[","").replace("]","").replace(/;/g,":"),s.ipv6uri=!0),s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,i.default)(e)};var r,o=n(123),i=(r=o)&&r.__esModule?r:{default:r};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)},e.exports=t.default},function(e,t,n){"use strict";function r(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var n=0,o=t.length;n<o;++n)r(e,t[n]);else r(e,t)},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,a=e.length;i<a;++i){var s=e[i](t,n,r,o);if(s)return s}},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertColorToString=a,t.convertHexToRGB=s,t.decomposeColor=l,t.getContrastRatio=function(e,t){var n=u(e),r=u(t),o=(Math.max(n,r)+.05)/(Math.min(n,r)+.05);return Number(o.toFixed(2))},t.getLuminance=u,t.emphasize=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.15;return u(e)>.5?c(e,t):f(e,t)},t.fade=function(e,t){e=l(e),t=i(t,0,1),("rgb"===e.type||"hsl"===e.type)&&(e.type+="a");return e.values[3]=t,a(e)},t.darken=c,t.lighten=f;var r,o=n(32);(r=o)&&r.__esModule;function i(e,t,n){return e<t?t:e>n?n:e}function a(e){var t=e.type,n=e.values;if(t.indexOf("rgb")>-1)for(var r=0;r<3;r++)n[r]=parseInt(n[r]);var o=void 0;return o=t.indexOf("hsl")>-1?e.type+"("+n[0]+", "+n[1]+"%, "+n[2]+"%":e.type+"("+n[0]+", "+n[1]+", "+n[2],4===n.length?o+=", "+e.values[3]+")":o+=")",o}function s(e){if(4===e.length){for(var t="#",n=1;n<e.length;n++)t+=e.charAt(n)+e.charAt(n);e=t}return"rgb("+parseInt(e.substr(1,2),16)+", "+parseInt(e.substr(3,2),16)+", "+parseInt(e.substr(5,2),16)+")"}function l(e){if("#"===e.charAt(0))return l(s(e));var t=e.indexOf("("),n=e.substring(0,t),r=e.substring(t+1,e.length-1).split(",");return{type:n,values:r=r.map(function(e){return parseFloat(e)})}}function u(e){if((e=l(e)).type.indexOf("rgb")>-1){var t=e.values.map(function(e){return(e/=255)<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4)});return Number((.2126*t[0]+.7152*t[1]+.0722*t[2]).toFixed(3))}if(e.type.indexOf("hsl")>-1)return e.values[2]/100}function c(e,t){if(e=l(e),t=i(t,0,1),e.type.indexOf("hsl")>-1)e.values[2]*=1-t;else if(e.type.indexOf("rgb")>-1)for(var n=0;n<3;n++)e.values[n]*=1-t;return a(e)}function f(e,t){if(e=l(e),t=i(t,0,1),e.type.indexOf("hsl")>-1)e.values[2]+=(100-e.values[2])*t;else if(e.type.indexOf("rgb")>-1)for(var n=0;n<3;n++)e.values[n]+=(255-e.values[n])*t;return a(e)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var r=n(33),o=n(17),i=n(12),a=n(42),s=n(8),l=n(76),u=Object.getOwnPropertyDescriptor;t.f=n(6)?u:function(e,t){if(e=i(e),t=a(t,!0),l)try{return u(e,t)}catch(e){}if(s(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){var r=n(69),o=n(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(41),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){var r=n(8),o=n(12),i=n(183)(!1),a=n(45)("IE_PROTO");e.exports=function(e,t){var n,s=o(e),l=0,u=[];for(n in s)n!=a&&r(s,n)&&u.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~i(u,n)||u.push(n));return u}},function(e,t,n){e.exports=n(15)},function(e,t,n){"use strict";var r=n(40),o=n(7),i=n(70),a=n(15),s=n(16),l=n(186),u=n(36),c=n(78),f=n(2)("iterator"),p=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,t,n,h,m,y,g){l(n,t,h);var v,b,k,x=function(e){if(!p&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},C=t+" Iterator",w="values"==m,_=!1,S=e.prototype,T=S[f]||S["@@iterator"]||m&&S[m],P=T||x(m),O=m?w?x("entries"):P:void 0,E="Array"==t&&S.entries||T;if(E&&(k=c(E.call(new e)))!==Object.prototype&&k.next&&(u(k,C,!0),r||"function"==typeof k[f]||a(k,f,d)),w&&T&&"values"!==T.name&&(_=!0,P=function(){return T.call(this)}),r&&!g||!p&&!_&&S[f]||a(S,f,P),s[t]=P,s[C]=d,m)if(v={values:w?P:x("values"),keys:y?P:x("keys"),entries:O},g)for(b in v)b in S||i(S,b,v[b]);else o(o.P+o.F*(p||_),t,v);return v}},function(e,t,n){"use strict";var r=n(187)(!0);n(71)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(189)),o=a(n(176)),i="function"==typeof o.default&&"symbol"==typeof r.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function a(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(r.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){var r=n(13),o=n(5).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){e.exports=!n(6)&&!n(18)(function(){return 7!=Object.defineProperty(n(75)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(7),o=n(1),i=n(18);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i(function(){n(1)}),"Object",a)}},function(e,t,n){var r=n(8),o=n(23),i=n(45)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,s=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var u in n=Object(arguments[l]))o.call(n,u)&&(s[u]=n[u]);if(r){a=r(n);for(var c=0;c<a.length;c++)i.call(n,a[c])&&(s[a[c]]=n[a[c]])}}return s}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),s=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),l=null,u=0,c=[],f=n(81);function p(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(v(r.parts[a],t))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(v(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:s}}}}function d(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function h(e,t){var n=s(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=s(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function m(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function y(e){var t=document.createElement("style");return e.attrs.type="text/css",g(t,e.attrs),h(e,t),t}function g(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var a=u++;n=l||(l=y(t)),r=x.bind(null,n,a,!1),o=x.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",g(t,e.attrs),h(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,n,t),o=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){m(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=d(e,t);return p(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(s=i[a.id]).refs--,r.push(s)}e&&p(d(e,t),t);for(o=0;o<r.length;o++){var s;if(0===(s=r[o]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete i[s.id]}}}};var b,k=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function x(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=k(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){(e.exports=n(83)(!1)).push([e.i,"",""])},function(e,t,n){var r=n(84);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(82)(r,o);r.locals&&(e.exports=r.locals)},function(e,t){function n(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}e.exports=n,n.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),n=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-n:e+n}return 0|Math.min(e,this.max)},n.prototype.reset=function(){this.attempts=0},n.prototype.setMin=function(e){this.ms=e},n.prototype.setMax=function(e){this.max=e},n.prototype.setJitter=function(e){this.jitter=e}},function(e,t){e.exports=function(e,t){for(var n=[],r=(t=t||0)||0;r<e.length;r++)n[r-t]=e[r];return n}},function(e,t){},function(e,t,n){(function(t){var r,o=n(25),i=n(9),a=n(20),s=n(19),l=n(52),u=n(3)("engine.io-client:websocket"),c=t.WebSocket||t.MozWebSocket;if("undefined"==typeof window)try{r=n(88)}catch(e){}var f=c;function p(e){e&&e.forceBase64&&(this.supportsBinary=!1),this.perMessageDeflate=e.perMessageDeflate,this.usingBrowserWebSocket=c&&!e.forceNode,this.protocols=e.protocols,this.usingBrowserWebSocket||(f=r),o.call(this,e)}f||"undefined"!=typeof window||(f=r),e.exports=p,s(p,o),p.prototype.name="websocket",p.prototype.supportsBinary=!0,p.prototype.doOpen=function(){if(this.check()){var e=this.uri(),t=this.protocols,n={agent:this.agent,perMessageDeflate:this.perMessageDeflate};n.pfx=this.pfx,n.key=this.key,n.passphrase=this.passphrase,n.cert=this.cert,n.ca=this.ca,n.ciphers=this.ciphers,n.rejectUnauthorized=this.rejectUnauthorized,this.extraHeaders&&(n.headers=this.extraHeaders),this.localAddress&&(n.localAddress=this.localAddress);try{this.ws=this.usingBrowserWebSocket?t?new f(e,t):new f(e):new f(e,t,n)}catch(e){return this.emit("error",e)}void 0===this.ws.binaryType&&(this.supportsBinary=!1),this.ws.supports&&this.ws.supports.binary?(this.supportsBinary=!0,this.ws.binaryType="nodebuffer"):this.ws.binaryType="arraybuffer",this.addEventListeners()}},p.prototype.addEventListeners=function(){var e=this;this.ws.onopen=function(){e.onOpen()},this.ws.onclose=function(){e.onClose()},this.ws.onmessage=function(t){e.onData(t.data)},this.ws.onerror=function(t){e.onError("websocket error",t)}},p.prototype.write=function(e){var n=this;this.writable=!1;for(var r=e.length,o=0,a=r;o<a;o++)!function(e){i.encodePacket(e,n.supportsBinary,function(o){if(!n.usingBrowserWebSocket){var i={};if(e.options&&(i.compress=e.options.compress),n.perMessageDeflate)("string"==typeof o?t.Buffer.byteLength(o):o.length)<n.perMessageDeflate.threshold&&(i.compress=!1)}try{n.usingBrowserWebSocket?n.ws.send(o):n.ws.send(o,i)}catch(e){u("websocket closed before onclose event")}--r||s()})}(e[o]);function s(){n.emit("flush"),setTimeout(function(){n.writable=!0,n.emit("drain")},0)}},p.prototype.onClose=function(){o.prototype.onClose.call(this)},p.prototype.doClose=function(){void 0!==this.ws&&this.ws.close()},p.prototype.uri=function(){var e=this.query||{},t=this.secure?"wss":"ws",n="";return this.port&&("wss"===t&&443!==Number(this.port)||"ws"===t&&80!==Number(this.port))&&(n=":"+this.port),this.timestampRequests&&(e[this.timestampParam]=l()),this.supportsBinary||(e.b64=1),(e=a.encode(e)).length&&(e="?"+e),t+"://"+(-1!==this.hostname.indexOf(":")?"["+this.hostname+"]":this.hostname)+n+this.path+e},p.prototype.check=function(){return!(!f||"__initialize"in f&&this.name===p.prototype.name)}}).call(this,n(0))},function(e,t,n){(function(t){var r=n(54),o=n(19);e.exports=u;var i,a=/\n/g,s=/\\n/g;function l(){}function u(e){r.call(this,e),this.query=this.query||{},i||(t.___eio||(t.___eio=[]),i=t.___eio),this.index=i.length;var n=this;i.push(function(e){n.onData(e)}),this.query.j=this.index,t.document&&t.addEventListener&&t.addEventListener("beforeunload",function(){n.script&&(n.script.onerror=l)},!1)}o(u,r),u.prototype.supportsBinary=!1,u.prototype.doClose=function(){this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),this.form&&(this.form.parentNode.removeChild(this.form),this.form=null,this.iframe=null),r.prototype.doClose.call(this)},u.prototype.doPoll=function(){var e=this,t=document.createElement("script");this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),t.async=!0,t.src=this.uri(),t.onerror=function(t){e.onError("jsonp poll error",t)};var n=document.getElementsByTagName("script")[0];n?n.parentNode.insertBefore(t,n):(document.head||document.body).appendChild(t),this.script=t,"undefined"!=typeof navigator&&/gecko/i.test(navigator.userAgent)&&setTimeout(function(){var e=document.createElement("iframe");document.body.appendChild(e),document.body.removeChild(e)},100)},u.prototype.doWrite=function(e,t){var n=this;if(!this.form){var r,o=document.createElement("form"),i=document.createElement("textarea"),l=this.iframeId="eio_iframe_"+this.index;o.className="socketio",o.style.position="absolute",o.style.top="-1000px",o.style.left="-1000px",o.target=l,o.method="POST",o.setAttribute("accept-charset","utf-8"),i.name="d",o.appendChild(i),document.body.appendChild(o),this.form=o,this.area=i}function u(){c(),t()}function c(){if(n.iframe)try{n.form.removeChild(n.iframe)}catch(e){n.onError("jsonp polling iframe removal error",e)}try{var e='<iframe src="javascript:0" name="'+n.iframeId+'">';r=document.createElement(e)}catch(e){(r=document.createElement("iframe")).name=n.iframeId,r.src="javascript:0"}r.id=n.iframeId,n.form.appendChild(r),n.iframe=r}this.form.action=this.uri(),c(),e=e.replace(s,"\\\n"),this.area.value=e.replace(a,"\\n");try{this.form.submit()}catch(e){}this.iframe.attachEvent?this.iframe.onreadystatechange=function(){"complete"===n.iframe.readyState&&u()}:this.iframe.onload=u}}).call(this,n(0))},function(e,t,n){(function(t){var n=t.BlobBuilder||t.WebKitBlobBuilder||t.MSBlobBuilder||t.MozBlobBuilder,r=function(){try{return 2===new Blob(["hi"]).size}catch(e){return!1}}(),o=r&&function(){try{return 2===new Blob([new Uint8Array([1,2])]).size}catch(e){return!1}}(),i=n&&n.prototype.append&&n.prototype.getBlob;function a(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.buffer instanceof ArrayBuffer){var r=n.buffer;if(n.byteLength!==r.byteLength){var o=new Uint8Array(n.byteLength);o.set(new Uint8Array(r,n.byteOffset,n.byteLength)),r=o.buffer}e[t]=r}}}function s(e,t){t=t||{};var r=new n;a(e);for(var o=0;o<e.length;o++)r.append(e[o]);return t.type?r.getBlob(t.type):r.getBlob()}function l(e,t){return a(e),new Blob(e,t||{})}e.exports=r?o?t.Blob:l:i?s:void 0}).call(this,n(0))},function(e,t){!function(){"use strict";for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n=new Uint8Array(256),r=0;r<e.length;r++)n[e.charCodeAt(r)]=r;t.encode=function(t){var n,r=new Uint8Array(t),o=r.length,i="";for(n=0;n<o;n+=3)i+=e[r[n]>>2],i+=e[(3&r[n])<<4|r[n+1]>>4],i+=e[(15&r[n+1])<<2|r[n+2]>>6],i+=e[63&r[n+2]];return o%3==2?i=i.substring(0,i.length-1)+"=":o%3==1&&(i=i.substring(0,i.length-2)+"=="),i},t.decode=function(e){var t,r,o,i,a,s=.75*e.length,l=e.length,u=0;"="===e[e.length-1]&&(s--,"="===e[e.length-2]&&s--);var c=new ArrayBuffer(s),f=new Uint8Array(c);for(t=0;t<l;t+=4)r=n[e.charCodeAt(t)],o=n[e.charCodeAt(t+1)],i=n[e.charCodeAt(t+2)],a=n[e.charCodeAt(t+3)],f[u++]=r<<2|o>>4,f[u++]=(15&o)<<4|i>>2,f[u++]=(3&i)<<6|63&a;return c}}()},function(e,t,n){(function(e,r){var o;/*! https://mths.be/utf8js v2.1.2 by @mathias */!function(i){var a="object"==typeof t&&t,s=("object"==typeof e&&e&&e.exports,"object"==typeof r&&r);s.global!==s&&s.window;var l,u,c,f=String.fromCharCode;function p(e){for(var t,n,r=[],o=0,i=e.length;o<i;)(t=e.charCodeAt(o++))>=55296&&t<=56319&&o<i?56320==(64512&(n=e.charCodeAt(o++)))?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),o--):r.push(t);return r}function d(e,t){if(e>=55296&&e<=57343){if(t)throw Error("Lone surrogate U+"+e.toString(16).toUpperCase()+" is not a scalar value");return!1}return!0}function h(e,t){return f(e>>t&63|128)}function m(e,t){if(0==(4294967168&e))return f(e);var n="";return 0==(4294965248&e)?n=f(e>>6&31|192):0==(4294901760&e)?(d(e,t)||(e=65533),n=f(e>>12&15|224),n+=h(e,6)):0==(4292870144&e)&&(n=f(e>>18&7|240),n+=h(e,12),n+=h(e,6)),n+=f(63&e|128)}function y(){if(c>=u)throw Error("Invalid byte index");var e=255&l[c];if(c++,128==(192&e))return 63&e;throw Error("Invalid continuation byte")}function g(e){var t,n;if(c>u)throw Error("Invalid byte index");if(c==u)return!1;if(t=255&l[c],c++,0==(128&t))return t;if(192==(224&t)){if((n=(31&t)<<6|y())>=128)return n;throw Error("Invalid continuation byte")}if(224==(240&t)){if((n=(15&t)<<12|y()<<6|y())>=2048)return d(n,e)?n:65533;throw Error("Invalid continuation byte")}if(240==(248&t)&&(n=(7&t)<<18|y()<<12|y()<<6|y())>=65536&&n<=1114111)return n;throw Error("Invalid UTF-8 detected")}var v={version:"2.1.2",encode:function(e,t){for(var n=!1!==(t=t||{}).strict,r=p(e),o=r.length,i=-1,a="";++i<o;)a+=m(r[i],n);return a},decode:function(e,t){var n=!1!==(t=t||{}).strict;l=p(e),u=l.length,c=0;for(var r,o=[];!1!==(r=g(n));)o.push(r);return function(e){for(var t,n=e.length,r=-1,o="";++r<n;)(t=e[r])>65535&&(o+=f((t-=65536)>>>10&1023|55296),t=56320|1023&t),o+=f(t);return o}(o)}};void 0===(o=function(){return v}.call(t,n,t,e))||(e.exports=o)}()}).call(this,n(64)(e),n(0))},function(e,t){function n(){}e.exports=function(e,t,r){var o=!1;return r=r||n,i.count=e,0===e?t():i;function i(e,n){if(i.count<=0)throw new Error("after called too many times");--i.count,e?(o=!0,t(e),t=r):0!==i.count||o||t(null,n)}}},function(e,t){e.exports=function(e,t,n){var r=e.byteLength;if(t=t||0,n=n||r,e.slice)return e.slice(t,n);if(t<0&&(t+=r),n<0&&(n+=r),n>r&&(n=r),t>=r||t>=n||0===r)return new ArrayBuffer(0);for(var o=new Uint8Array(e),i=new Uint8Array(n-t),a=t,s=0;a<n;a++,s++)i[s]=o[a];return i.buffer}},function(e,t){e.exports=Object.keys||function(e){var t=[],n=Object.prototype.hasOwnProperty;for(var r in e)n.call(e,r)&&t.push(r);return t}},function(e,t,n){(function(t){var r=n(26),o=n(54),i=n(10),a=n(19),s=n(3)("engine.io-client:polling-xhr");function l(){}function u(e){if(o.call(this,e),this.requestTimeout=e.requestTimeout,this.extraHeaders=e.extraHeaders,t.location){var n="https:"===location.protocol,r=location.port;r||(r=n?443:80),this.xd=e.hostname!==t.location.hostname||r!==e.port,this.xs=e.secure!==n}}function c(e){this.method=e.method||"GET",this.uri=e.uri,this.xd=!!e.xd,this.xs=!!e.xs,this.async=!1!==e.async,this.data=void 0!==e.data?e.data:null,this.agent=e.agent,this.isBinary=e.isBinary,this.supportsBinary=e.supportsBinary,this.enablesXDR=e.enablesXDR,this.requestTimeout=e.requestTimeout,this.pfx=e.pfx,this.key=e.key,this.passphrase=e.passphrase,this.cert=e.cert,this.ca=e.ca,this.ciphers=e.ciphers,this.rejectUnauthorized=e.rejectUnauthorized,this.extraHeaders=e.extraHeaders,this.create()}function f(){for(var e in c.requests)c.requests.hasOwnProperty(e)&&c.requests[e].abort()}e.exports=u,e.exports.Request=c,a(u,o),u.prototype.supportsBinary=!0,u.prototype.request=function(e){return(e=e||{}).uri=this.uri(),e.xd=this.xd,e.xs=this.xs,e.agent=this.agent||!1,e.supportsBinary=this.supportsBinary,e.enablesXDR=this.enablesXDR,e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized,e.requestTimeout=this.requestTimeout,e.extraHeaders=this.extraHeaders,new c(e)},u.prototype.doWrite=function(e,t){var n="string"!=typeof e&&void 0!==e,r=this.request({method:"POST",data:e,isBinary:n}),o=this;r.on("success",t),r.on("error",function(e){o.onError("xhr post error",e)}),this.sendXhr=r},u.prototype.doPoll=function(){s("xhr poll");var e=this.request(),t=this;e.on("data",function(e){t.onData(e)}),e.on("error",function(e){t.onError("xhr poll error",e)}),this.pollXhr=e},i(c.prototype),c.prototype.create=function(){var e={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized;var n=this.xhr=new r(e),o=this;try{s("xhr open %s: %s",this.method,this.uri),n.open(this.method,this.uri,this.async);try{if(this.extraHeaders)for(var i in n.setDisableHeaderCheck&&n.setDisableHeaderCheck(!0),this.extraHeaders)this.extraHeaders.hasOwnProperty(i)&&n.setRequestHeader(i,this.extraHeaders[i])}catch(e){}if("POST"===this.method)try{this.isBinary?n.setRequestHeader("Content-type","application/octet-stream"):n.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{n.setRequestHeader("Accept","*/*")}catch(e){}"withCredentials"in n&&(n.withCredentials=!0),this.requestTimeout&&(n.timeout=this.requestTimeout),this.hasXDR()?(n.onload=function(){o.onLoad()},n.onerror=function(){o.onError(n.responseText)}):n.onreadystatechange=function(){if(2===n.readyState)try{var e=n.getResponseHeader("Content-Type");o.supportsBinary&&"application/octet-stream"===e&&(n.responseType="arraybuffer")}catch(e){}4===n.readyState&&(200===n.status||1223===n.status?o.onLoad():setTimeout(function(){o.onError(n.status)},0))},s("xhr data %s",this.data),n.send(this.data)}catch(e){return void setTimeout(function(){o.onError(e)},0)}t.document&&(this.index=c.requestsCount++,c.requests[this.index]=this)},c.prototype.onSuccess=function(){this.emit("success"),this.cleanup()},c.prototype.onData=function(e){this.emit("data",e),this.onSuccess()},c.prototype.onError=function(e){this.emit("error",e),this.cleanup(!0)},c.prototype.cleanup=function(e){if(void 0!==this.xhr&&null!==this.xhr){if(this.hasXDR()?this.xhr.onload=this.xhr.onerror=l:this.xhr.onreadystatechange=l,e)try{this.xhr.abort()}catch(e){}t.document&&delete c.requests[this.index],this.xhr=null}},c.prototype.onLoad=function(){var e;try{var t;try{t=this.xhr.getResponseHeader("Content-Type")}catch(e){}e="application/octet-stream"===t&&this.xhr.response||this.xhr.responseText}catch(e){this.onError(e)}null!=e&&this.onData(e)},c.prototype.hasXDR=function(){return void 0!==t.XDomainRequest&&!this.xs&&this.enablesXDR},c.prototype.abort=function(){this.cleanup()},c.requestsCount=0,c.requests={},t.document&&(t.attachEvent?t.attachEvent("onunload",f):t.addEventListener&&t.addEventListener("beforeunload",f,!1))}).call(this,n(0))},function(e,t){try{e.exports="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(t){e.exports=!1}},function(e,t,n){(function(t){var r=n(55),o=n(10),i=n(3)("engine.io-client:socket"),a=n(51),s=n(9),l=n(58),u=n(20);function c(e,n){if(!(this instanceof c))return new c(e,n);n=n||{},e&&"object"==typeof e&&(n=e,e=null),e?(e=l(e),n.hostname=e.host,n.secure="https"===e.protocol||"wss"===e.protocol,n.port=e.port,e.query&&(n.query=e.query)):n.host&&(n.hostname=l(n.host).host),this.secure=null!=n.secure?n.secure:t.location&&"https:"===location.protocol,n.hostname&&!n.port&&(n.port=this.secure?"443":"80"),this.agent=n.agent||!1,this.hostname=n.hostname||(t.location?location.hostname:"localhost"),this.port=n.port||(t.location&&location.port?location.port:this.secure?443:80),this.query=n.query||{},"string"==typeof this.query&&(this.query=u.decode(this.query)),this.upgrade=!1!==n.upgrade,this.path=(n.path||"/engine.io").replace(/\/$/,"")+"/",this.forceJSONP=!!n.forceJSONP,this.jsonp=!1!==n.jsonp,this.forceBase64=!!n.forceBase64,this.enablesXDR=!!n.enablesXDR,this.timestampParam=n.timestampParam||"t",this.timestampRequests=n.timestampRequests,this.transports=n.transports||["polling","websocket"],this.transportOptions=n.transportOptions||{},this.readyState="",this.writeBuffer=[],this.prevBufferLen=0,this.policyPort=n.policyPort||843,this.rememberUpgrade=n.rememberUpgrade||!1,this.binaryType=null,this.onlyBinaryUpgrades=n.onlyBinaryUpgrades,this.perMessageDeflate=!1!==n.perMessageDeflate&&(n.perMessageDeflate||{}),!0===this.perMessageDeflate&&(this.perMessageDeflate={}),this.perMessageDeflate&&null==this.perMessageDeflate.threshold&&(this.perMessageDeflate.threshold=1024),this.pfx=n.pfx||null,this.key=n.key||null,this.passphrase=n.passphrase||null,this.cert=n.cert||null,this.ca=n.ca||null,this.ciphers=n.ciphers||null,this.rejectUnauthorized=void 0===n.rejectUnauthorized||n.rejectUnauthorized,this.forceNode=!!n.forceNode;var r="object"==typeof t&&t;r.global===r&&(n.extraHeaders&&Object.keys(n.extraHeaders).length>0&&(this.extraHeaders=n.extraHeaders),n.localAddress&&(this.localAddress=n.localAddress)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingIntervalTimer=null,this.pingTimeoutTimer=null,this.open()}e.exports=c,c.priorWebsocketSuccess=!1,o(c.prototype),c.protocol=s.protocol,c.Socket=c,c.Transport=n(25),c.transports=n(55),c.parser=n(9),c.prototype.createTransport=function(e){i('creating transport "%s"',e);var t=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}(this.query);t.EIO=s.protocol,t.transport=e;var n=this.transportOptions[e]||{};return this.id&&(t.sid=this.id),new r[e]({query:t,socket:this,agent:n.agent||this.agent,hostname:n.hostname||this.hostname,port:n.port||this.port,secure:n.secure||this.secure,path:n.path||this.path,forceJSONP:n.forceJSONP||this.forceJSONP,jsonp:n.jsonp||this.jsonp,forceBase64:n.forceBase64||this.forceBase64,enablesXDR:n.enablesXDR||this.enablesXDR,timestampRequests:n.timestampRequests||this.timestampRequests,timestampParam:n.timestampParam||this.timestampParam,policyPort:n.policyPort||this.policyPort,pfx:n.pfx||this.pfx,key:n.key||this.key,passphrase:n.passphrase||this.passphrase,cert:n.cert||this.cert,ca:n.ca||this.ca,ciphers:n.ciphers||this.ciphers,rejectUnauthorized:n.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:n.perMessageDeflate||this.perMessageDeflate,extraHeaders:n.extraHeaders||this.extraHeaders,forceNode:n.forceNode||this.forceNode,localAddress:n.localAddress||this.localAddress,requestTimeout:n.requestTimeout||this.requestTimeout,protocols:n.protocols||void 0})},c.prototype.open=function(){var e;if(this.rememberUpgrade&&c.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))e="websocket";else{if(0===this.transports.length){var t=this;return void setTimeout(function(){t.emit("error","No transports available")},0)}e=this.transports[0]}this.readyState="opening";try{e=this.createTransport(e)}catch(e){return this.transports.shift(),void this.open()}e.open(),this.setTransport(e)},c.prototype.setTransport=function(e){i("setting transport %s",e.name);var t=this;this.transport&&(i("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on("drain",function(){t.onDrain()}).on("packet",function(e){t.onPacket(e)}).on("error",function(e){t.onError(e)}).on("close",function(){t.onClose("transport close")})},c.prototype.probe=function(e){i('probing transport "%s"',e);var t=this.createTransport(e,{probe:1}),n=!1,r=this;function o(){if(r.onlyBinaryUpgrades){var o=!this.supportsBinary&&r.transport.supportsBinary;n=n||o}n||(i('probe transport "%s" opened',e),t.send([{type:"ping",data:"probe"}]),t.once("packet",function(o){if(!n)if("pong"===o.type&&"probe"===o.data){if(i('probe transport "%s" pong',e),r.upgrading=!0,r.emit("upgrading",t),!t)return;c.priorWebsocketSuccess="websocket"===t.name,i('pausing current transport "%s"',r.transport.name),r.transport.pause(function(){n||"closed"!==r.readyState&&(i("changing transport and sending upgrade packet"),p(),r.setTransport(t),t.send([{type:"upgrade"}]),r.emit("upgrade",t),t=null,r.upgrading=!1,r.flush())})}else{i('probe transport "%s" failed',e);var a=new Error("probe error");a.transport=t.name,r.emit("upgradeError",a)}}))}function a(){n||(n=!0,p(),t.close(),t=null)}function s(n){var o=new Error("probe error: "+n);o.transport=t.name,a(),i('probe transport "%s" failed because of error: %s',e,n),r.emit("upgradeError",o)}function l(){s("transport closed")}function u(){s("socket closed")}function f(e){t&&e.name!==t.name&&(i('"%s" works - aborting "%s"',e.name,t.name),a())}function p(){t.removeListener("open",o),t.removeListener("error",s),t.removeListener("close",l),r.removeListener("close",u),r.removeListener("upgrading",f)}c.priorWebsocketSuccess=!1,t.once("open",o),t.once("error",s),t.once("close",l),this.once("close",u),this.once("upgrading",f),t.open()},c.prototype.onOpen=function(){if(i("socket open"),this.readyState="open",c.priorWebsocketSuccess="websocket"===this.transport.name,this.emit("open"),this.flush(),"open"===this.readyState&&this.upgrade&&this.transport.pause){i("starting upgrade probes");for(var e=0,t=this.upgrades.length;e<t;e++)this.probe(this.upgrades[e])}},c.prototype.onPacket=function(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(i('socket receive: type "%s", data "%s"',e.type,e.data),this.emit("packet",e),this.emit("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"pong":this.setPing(),this.emit("pong");break;case"error":var t=new Error("server error");t.code=e.data,this.onError(t);break;case"message":this.emit("data",e.data),this.emit("message",e.data)}else i('packet received with socket readyState "%s"',this.readyState)},c.prototype.onHandshake=function(e){this.emit("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.onOpen(),"closed"!==this.readyState&&(this.setPing(),this.removeListener("heartbeat",this.onHeartbeat),this.on("heartbeat",this.onHeartbeat))},c.prototype.onHeartbeat=function(e){clearTimeout(this.pingTimeoutTimer);var t=this;t.pingTimeoutTimer=setTimeout(function(){"closed"!==t.readyState&&t.onClose("ping timeout")},e||t.pingInterval+t.pingTimeout)},c.prototype.setPing=function(){var e=this;clearTimeout(e.pingIntervalTimer),e.pingIntervalTimer=setTimeout(function(){i("writing ping packet - expecting pong within %sms",e.pingTimeout),e.ping(),e.onHeartbeat(e.pingTimeout)},e.pingInterval)},c.prototype.ping=function(){var e=this;this.sendPacket("ping",function(){e.emit("ping")})},c.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit("drain"):this.flush()},c.prototype.flush=function(){"closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(i("flushing %d packets in socket",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit("flush"))},c.prototype.write=c.prototype.send=function(e,t,n){return this.sendPacket("message",e,t,n),this},c.prototype.sendPacket=function(e,t,n,r){if("function"==typeof t&&(r=t,t=void 0),"function"==typeof n&&(r=n,n=null),"closing"!==this.readyState&&"closed"!==this.readyState){(n=n||{}).compress=!1!==n.compress;var o={type:e,data:t,options:n};this.emit("packetCreate",o),this.writeBuffer.push(o),r&&this.once("flush",r),this.flush()}},c.prototype.close=function(){if("opening"===this.readyState||"open"===this.readyState){this.readyState="closing";var e=this;this.writeBuffer.length?this.once("drain",function(){this.upgrading?r():t()}):this.upgrading?r():t()}function t(){e.onClose("forced close"),i("socket closing - telling transport to close"),e.transport.close()}function n(){e.removeListener("upgrade",n),e.removeListener("upgradeError",n),t()}function r(){e.once("upgrade",n),e.once("upgradeError",n)}return this},c.prototype.onError=function(e){i("socket error %j",e),c.priorWebsocketSuccess=!1,this.emit("error",e),this.onClose("transport error",e)},c.prototype.onClose=function(e,t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){i('socket close with reason: "%s"',e);clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),this.readyState="closed",this.id=null,this.emit("close",e,t),this.writeBuffer=[],this.prevBufferLen=0}},c.prototype.filterUpgrades=function(e){for(var t=[],n=0,r=e.length;n<r;n++)~a(this.transports,e[n])&&t.push(e[n]);return t}}).call(this,n(0))},function(e,t,n){e.exports=n(99),e.exports.parser=n(9)},function(e,t,n){(function(e){var r=n(27),o=n(57),i=Object.prototype.toString,a="function"==typeof e.Blob||"[object BlobConstructor]"===i.call(e.Blob),s="function"==typeof e.File||"[object FileConstructor]"===i.call(e.File);t.deconstructPacket=function(e){var t=[],n=e.data,i=e;return i.data=function e(t,n){if(!t)return t;if(o(t)){var i={_placeholder:!0,num:n.length};return n.push(t),i}if(r(t)){for(var a=new Array(t.length),s=0;s<t.length;s++)a[s]=e(t[s],n);return a}if("object"==typeof t&&!(t instanceof Date)){var a={};for(var l in t)a[l]=e(t[l],n);return a}return t}(n,t),i.attachments=t.length,{packet:i,buffers:t}},t.reconstructPacket=function(e,t){return e.data=function e(t,n){if(!t)return t;if(t&&t._placeholder)return n[t.num];if(r(t))for(var o=0;o<t.length;o++)t[o]=e(t[o],n);else if("object"==typeof t)for(var i in t)t[i]=e(t[i],n);return t}(e.data,t),e.attachments=void 0,e},t.removeBlobs=function(e,t){var n=0,i=e;!function e(l,u,c){if(!l)return l;if(a&&l instanceof Blob||s&&l instanceof File){n++;var f=new FileReader;f.onload=function(){c?c[u]=this.result:i=this.result,--n||t(i)},f.readAsArrayBuffer(l)}else if(r(l))for(var p=0;p<l.length;p++)e(l[p],p,l);else if("object"==typeof l&&!o(l))for(var d in l)e(l[d],d,l)}(i),n||t(i)}}).call(this,n(0))},function(e,t){var n=1e3,r=60*n,o=60*r,i=24*o,a=365.25*i;function s(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}e.exports=function(e,t){t=t||{};var l,u=typeof e;if("string"===u&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var s=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*a;case"days":case"day":case"d":return s*i;case"hours":case"hour":case"hrs":case"hr":case"h":return s*o;case"minutes":case"minute":case"mins":case"min":case"m":return s*r;case"seconds":case"second":case"secs":case"sec":case"s":return s*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(e);if("number"===u&&!1===isNaN(e))return t.long?s(l=e,i,"day")||s(l,o,"hour")||s(l,r,"minute")||s(l,n,"second")||l+" ms":function(e){if(e>=i)return Math.round(e/i)+"d";if(e>=o)return Math.round(e/o)+"h";if(e>=r)return Math.round(e/r)+"m";if(e>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,n){function r(e){var n;function r(){if(r.enabled){var e=r,o=+new Date,i=o-(n||o);e.diff=i,e.prev=n,e.curr=o,n=o;for(var a=new Array(arguments.length),s=0;s<a.length;s++)a[s]=arguments[s];a[0]=t.coerce(a[0]),"string"!=typeof a[0]&&a.unshift("%O");var l=0;a[0]=a[0].replace(/%([a-zA-Z%])/g,function(n,r){if("%%"===n)return n;l++;var o=t.formatters[r];if("function"==typeof o){var i=a[l];n=o.call(e,i),a.splice(l,1),l--}return n}),t.formatArgs.call(e,a),(r.log||t.log||console.log.bind(console)).apply(e,a)}}return r.namespace=e,r.enabled=t.enabled(e),r.useColors=t.useColors(),r.color=function(e){var n,r=0;for(n in e)r=(r<<5)-r+e.charCodeAt(n),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),r.destroy=o,"function"==typeof t.init&&t.init(r),t.instances.push(r),r}function o(){var e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}(t=e.exports=r.debug=r.default=r).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){var n;t.save(e),t.names=[],t.skips=[];var r=("string"==typeof e?e:"").split(/[\s,]+/),o=r.length;for(n=0;n<o;n++)r[n]&&("-"===(e=r[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")));for(n=0;n<t.instances.length;n++){var i=t.instances[n];i.enabled=t.enabled(i.namespace)}},t.enabled=function(e){if("*"===e[e.length-1])return!0;var n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(102),t.instances=[],t.names=[],t.skips=[],t.formatters={}},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var l,u=[],c=!1,f=-1;function p(){c&&l&&(c=!1,l.length?u=l.concat(u):f=-1,u.length&&d())}function d(){if(!c){var e=s(p);c=!0;for(var t=u.length;t;){for(l=u,u=[];++f<t;)l&&l[f].run();f=-1,t=u.length}l=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new h(e,t)),1!==u.length||c||s(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){(function(t){var r=n(58),o=n(3)("socket.io-client:url");e.exports=function(e,n){var i=e;n=n||t.location,null==e&&(e=n.protocol+"//"+n.host);"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?n.protocol+e:n.host+e),/^(https?|wss?):\/\//.test(e)||(o("protocol-less url %s",e),e=void 0!==n?n.protocol+"//"+e:"https://"+e),o("parse %s",e),i=r(e));i.port||(/^(http|ws)$/.test(i.protocol)?i.port="80":/^(http|ws)s$/.test(i.protocol)&&(i.port="443"));i.path=i.path||"/";var a=-1!==i.host.indexOf(":")?"["+i.host+"]":i.host;return i.id=i.protocol+"://"+a+":"+i.port,i.href=i.protocol+"://"+a+(n&&n.port===i.port?"":":"+i.port),i}}).call(this,n(0))},function(e,t,n){var r=n(105),o=n(28),i=n(56),a=n(3)("socket.io-client");e.exports=t=l;var s=t.managers={};function l(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var n,o=r(e),l=o.source,u=o.id,c=o.path,f=s[u]&&c in s[u].nsps;return t.forceNew||t["force new connection"]||!1===t.multiplex||f?(a("ignoring socket cache for %s",l),n=i(l,t)):(s[u]||(a("new io instance for %s",l),s[u]=i(l,t)),n=s[u]),o.query&&!t.query&&(t.query=o.query),n.socket(o.path,t)}t.protocol=o.protocol,t.connect=l,t.Manager=n(56),t.Socket=n(50)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(24),i=(a(o),a(n(106)));function a(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.socketIo=(0,i.default)("http://localhost:3000",{secure:!0}),n.state={},n.styles={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return"hello"}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(74),i=(r=o)&&r.__esModule?r:{default:r},a=n(31);t.default=new function e(){(0,i.default)(this,e),this.textFullBlack=a.fullBlack,this.textDarkBlack=a.darkBlack,this.textLightBlack=a.lightBlack,this.textMinBlack=a.minBlack,this.textFullWhite=a.fullWhite,this.textDarkWhite=a.darkWhite,this.textLightWhite=a.lightWhite,this.fontWeightLight=300,this.fontWeightNormal=400,this.fontWeightMedium=500,this.fontStyleButtonFontSize=14}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];if(0===t.length)return function(e){return e};if(1===t.length)return t[0];return t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}},function(e,t,n){var r=n(23),o=n(21);n(77)("keys",function(){return function(e){return o(r(e))}})},function(e,t,n){n(110),e.exports=n(1).Object.keys},function(e,t,n){e.exports={default:n(111),__esModule:!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(112),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){if(e.isRtl)return function(e){if(!0===e.directionInvariant)return e;var t={right:"left",left:"right",marginRight:"marginLeft",marginLeft:"marginRight",paddingRight:"paddingLeft",paddingLeft:"paddingRight",borderRight:"borderLeft",borderLeft:"borderRight"},n={};return(0,i.default)(e).forEach(function(r){var o=e[r],i=r;switch(t.hasOwnProperty(r)&&(i=t[r]),r){case"float":case"textAlign":"right"===o?o="left":"left"===o&&(o="right");break;case"direction":"ltr"===o?o="rtl":"rtl"===o&&(o="ltr");break;case"transform":if(!o)break;var l=void 0;(l=o.match(a))&&(o=o.replace(l[0],l[1]+-parseFloat(l[4]))),(l=o.match(s))&&(o=o.replace(l[0],l[1]+-parseFloat(l[4])+l[5]+l[6]?", "+(-parseFloat(l[7])+l[8]):""));break;case"transformOrigin":if(!o)break;o.indexOf("right")>-1?o=o.replace("right","left"):o.indexOf("left")>-1&&(o=o.replace("left","right"))}n[i]=o}),n}};var a=/((^|\s)translate(3d|X)?\()(\-?[\d]+)/,s=/((^|\s)skew(x|y)?\()\s*(\-?[\d]+)(deg|rad|grad)(,\s*(\-?[\d]+)(deg|rad|grad))?/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){0};var r,o=n(32);(r=o)&&r.__esModule},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a){if("string"==typeof t&&s.hasOwnProperty(e)){var u=function(e,t){if((0,o.default)(e))return e;for(var n=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,a=n.length;i<a;++i){var s=n[i],u=[s];for(var c in t){var f=(0,r.default)(c);if(s.indexOf(f)>-1&&"order"!==f)for(var p=t[c],d=0,h=p.length;d<h;++d)u.unshift(s.replace(f,l[p[d]]+f))}n[i]=u.join(",")}return n.join(",")}(t,a),c=u.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(e){return!/-moz-|-ms-/.test(e)}).join(",");if(e.indexOf("Webkit")>-1)return c;var f=u.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(e){return!/-webkit-|-ms-/.test(e)}).join(",");return e.indexOf("Moz")>-1?f:(n["Webkit"+(0,i.default)(e)]=c,n["Moz"+(0,i.default)(e)]=f,u)}};var r=a(n(59)),o=a(n(29)),i=a(n(30));function a(e){return e&&e.__esModule?e:{default:e}}var s={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},l={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(o.hasOwnProperty(e)&&i.hasOwnProperty(t))return r.map(function(e){return e+t})};var r=["-webkit-","-moz-",""],o={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},i={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,i.default)(t)&&s.test(t))return a.map(function(e){return e+t})};var r,o=n(29),i=(r=o)&&r.__esModule?r:{default:r};var a=["-webkit-","-moz-",""],s=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?n.WebkitBoxOrient="vertical":n.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?n.WebkitBoxDirection="reverse":n.WebkitBoxDirection="normal");o.hasOwnProperty(e)&&(n[o[e]]=r[t]||t)};var r={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},o={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines"};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){o.hasOwnProperty(e)&&(n[o[e]]=r[t]||t)};var r={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},o={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&r.hasOwnProperty(t))return r[t]};var r={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,i.default)(t)&&t.indexOf("calc(")>-1)return a.map(function(e){return t.replace(/calc\(/g,e+"calc(")})};var r,o=n(29),i=(r=o)&&r.__esModule?r:{default:r};var a=["-webkit-","-moz-",""];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=c(n(121)),o=c(n(120)),i=c(n(119)),a=c(n(118)),s=c(n(117)),l=c(n(116)),u=c(n(115));function c(e){return e&&e.__esModule?e:{default:e}}t.default={plugins:[r.default,o.default,i.default,a.default,s.default,l.default,u.default],prefixMap:{transform:["Webkit","ms"],transformOrigin:["Webkit","ms"],transformOriginX:["Webkit","ms"],transformOriginY:["Webkit","ms"],backfaceVisibility:["Webkit"],perspective:["Webkit"],perspectiveOrigin:["Webkit"],transformStyle:["Webkit"],transformOriginZ:["Webkit"],animation:["Webkit"],animationDelay:["Webkit"],animationDirection:["Webkit"],animationFillMode:["Webkit"],animationDuration:["Webkit"],animationIterationCount:["Webkit"],animationName:["Webkit"],animationPlayState:["Webkit"],animationTimingFunction:["Webkit"],appearance:["Webkit","Moz"],userSelect:["Webkit","Moz","ms"],fontKerning:["Webkit"],textEmphasisPosition:["Webkit"],textEmphasis:["Webkit"],textEmphasisStyle:["Webkit"],textEmphasisColor:["Webkit"],boxDecorationBreak:["Webkit"],clipPath:["Webkit"],maskImage:["Webkit"],maskMode:["Webkit"],maskRepeat:["Webkit"],maskPosition:["Webkit"],maskClip:["Webkit"],maskOrigin:["Webkit"],maskSize:["Webkit"],maskComposite:["Webkit"],mask:["Webkit"],maskBorderSource:["Webkit"],maskBorderMode:["Webkit"],maskBorderSlice:["Webkit"],maskBorderWidth:["Webkit"],maskBorderOutset:["Webkit"],maskBorderRepeat:["Webkit"],maskBorder:["Webkit"],maskType:["Webkit"],textDecorationStyle:["Webkit","Moz"],textDecorationSkip:["Webkit","Moz"],textDecorationLine:["Webkit","Moz"],textDecorationColor:["Webkit","Moz"],filter:["Webkit"],fontFeatureSettings:["Webkit","Moz"],breakAfter:["Webkit","Moz","ms"],breakBefore:["Webkit","Moz","ms"],breakInside:["Webkit","Moz","ms"],columnCount:["Webkit","Moz"],columnFill:["Webkit","Moz"],columnGap:["Webkit","Moz"],columnRule:["Webkit","Moz"],columnRuleColor:["Webkit","Moz"],columnRuleStyle:["Webkit","Moz"],columnRuleWidth:["Webkit","Moz"],columns:["Webkit","Moz"],columnSpan:["Webkit","Moz"],columnWidth:["Webkit","Moz"],flex:["Webkit","ms"],flexBasis:["Webkit"],flexDirection:["Webkit","ms"],flexGrow:["Webkit"],flexFlow:["Webkit","ms"],flexShrink:["Webkit"],flexWrap:["Webkit","ms"],alignContent:["Webkit"],alignItems:["Webkit"],alignSelf:["Webkit"],justifyContent:["Webkit"],order:["Webkit"],transitionDelay:["Webkit"],transitionDuration:["Webkit"],transitionProperty:["Webkit"],transitionTimingFunction:["Webkit"],backdropFilter:["Webkit"],scrollSnapType:["Webkit","ms"],scrollSnapPointsX:["Webkit","ms"],scrollSnapPointsY:["Webkit","ms"],scrollSnapDestination:["Webkit","ms"],scrollSnapCoordinate:["Webkit","ms"],shapeImageThreshold:["Webkit"],shapeImageMargin:["Webkit"],shapeImageOutside:["Webkit"],hyphens:["Webkit","Moz","ms"],flowInto:["Webkit","ms"],flowFrom:["Webkit","ms"],regionFragment:["Webkit","ms"],boxSizing:["Moz"],textAlignLast:["Moz"],tabSize:["Moz"],wrapFlow:["ms"],wrapThrough:["ms"],wrapMargin:["ms"],touchAction:["ms"],gridTemplateColumns:["ms"],gridTemplateRows:["ms"],gridTemplateAreas:["ms"],gridTemplate:["ms"],gridAutoColumns:["ms"],gridAutoRows:["ms"],gridAutoFlow:["ms"],grid:["ms"],gridRowStart:["ms"],gridColumnStart:["ms"],gridRowEnd:["ms"],gridRow:["ms"],gridColumn:["ms"],gridColumnEnd:["ms"],gridColumnGap:["ms"],gridRowGap:["ms"],gridArea:["ms"],gridGap:["ms"],textSizeAdjust:["Webkit","ms"],borderImage:["Webkit"],borderImageOutset:["Webkit"],borderImageRepeat:["Webkit"],borderImageSlice:["Webkit"],borderImageSource:["Webkit"],borderImageWidth:["Webkit"]}}},function(e,t,n){"use strict";var r=/[A-Z]/g,o=/^ms-/,i={};e.exports=function(e){return e in i?i[e]:i[e]=e.replace(r,"-$&").toLowerCase().replace(o,"-ms-")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.cssPrefix,l=r.keepUnprefixed,u=r.requiresPrefix;if("string"==typeof t&&a.hasOwnProperty(e)){s||(s=Object.keys(u).map(function(e){return(0,i.default)(e)}));var c=t.split(/,(?![^()]*(?:\([^()]*\))?\))/g);return s.forEach(function(e){c.forEach(function(t,n){t.indexOf(e)>-1&&"order"!==e&&(c[n]=t.replace(e,o+e)+(l?","+t:""))})}),c.join(",")}};var r,o=n(59),i=(r=o)&&r.__esModule?r:{default:r};var a={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},s=void 0;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.cssPrefix,l=r.keepUnprefixed;if(a.hasOwnProperty(e)&&s.hasOwnProperty(t))return(0,i.default)(o+t,t,l)};var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};var a={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},s={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.browserName,s=r.browserVersion,l=r.cssPrefix,u=r.keepUnprefixed;if("string"==typeof t&&a.test(t)&&("firefox"===o&&s<16||"chrome"===o&&s<26||("safari"===o||"ios_saf"===o)&&s<7||("opera"===o||"op_mini"===o)&&s<12.1||"android"===o&&s<4.4||"and_uc"===o))return(0,i.default)(l+t,t,u)};var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};var a=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.browserName,u=r.browserVersion,c=r.cssPrefix,f=r.keepUnprefixed,p=r.requiresPrefix;if((l.indexOf(e)>-1||"display"===e&&"string"==typeof t&&t.indexOf("flex")>-1)&&("firefox"===o&&u<22||"chrome"===o&&u<21||("safari"===o||"ios_saf"===o)&&u<=6.1||"android"===o&&u<4.4||"and_uc"===o)){if(delete p[e],f||Array.isArray(n[e])||delete n[e],"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?n.WebkitBoxOrient="vertical":n.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?n.WebkitBoxDirection="reverse":n.WebkitBoxDirection="normal"),"display"===e&&a.hasOwnProperty(t))return(0,i.default)(c+a[t],t,f);s.hasOwnProperty(e)&&(n[s[e]]=a[t]||t)}};var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};var a={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple",flex:"box","inline-flex":"inline-box"},s={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines"},l=Object.keys(s).concat(["alignContent","alignSelf","order","flexGrow","flexShrink","flexBasis","flexDirection"]);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.browserName,l=r.browserVersion,u=r.cssPrefix,c=r.keepUnprefixed,f=r.requiresPrefix;if((s.hasOwnProperty(e)||"display"===e&&"string"==typeof t&&t.indexOf("flex")>-1)&&("ie_mob"===o||"ie"===o)&&10===l){if(delete f[e],c||Array.isArray(n[e])||delete n[e],"display"===e&&a.hasOwnProperty(t))return(0,i.default)(u+a[t],t,c);s.hasOwnProperty(e)&&(n[s[e]]=a[t]||t)}};var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};var a={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end",flex:"flexbox","inline-flex":"inline-flexbox"},s={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.browserName,s=r.browserVersion,l=r.cssPrefix,u=r.keepUnprefixed;if("display"===e&&a[t]&&("chrome"===o&&s<29&&s>20||("safari"===o||"ios_saf"===o)&&s<9&&s>6||"opera"===o&&(15===s||16===s)))return(0,i.default)(l+t,t,u)};var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};var a={flex:!0,"inline-flex":!0};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var o=r.browserName,a=r.browserVersion,s=r.cssPrefix,l=r.keepUnprefixed;if("string"==typeof t&&t.indexOf("calc(")>-1&&("firefox"===o&&a<15||"chrome"===o&&a<25||"safari"===o&&a<6.1||"ios_saf"===o&&a<7))return(0,i.default)(t.replace(/calc\(/g,s+"calc("),t,l)};var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=c(n(130)),o=c(n(129)),i=c(n(128)),a=c(n(127)),s=c(n(126)),l=c(n(125)),u=c(n(124));function c(e){return e&&e.__esModule?e:{default:e}}t.default={plugins:[r.default,o.default,i.default,a.default,s.default,l.default,u.default],prefixMap:{chrome:{transform:35,transformOrigin:35,transformOriginX:35,transformOriginY:35,backfaceVisibility:35,perspective:35,perspectiveOrigin:35,transformStyle:35,transformOriginZ:35,animation:42,animationDelay:42,animationDirection:42,animationFillMode:42,animationDuration:42,animationIterationCount:42,animationName:42,animationPlayState:42,animationTimingFunction:42,appearance:60,userSelect:53,fontKerning:32,textEmphasisPosition:60,textEmphasis:60,textEmphasisStyle:60,textEmphasisColor:60,boxDecorationBreak:60,clipPath:54,maskImage:60,maskMode:60,maskRepeat:60,maskPosition:60,maskClip:60,maskOrigin:60,maskSize:60,maskComposite:60,mask:60,maskBorderSource:60,maskBorderMode:60,maskBorderSlice:60,maskBorderWidth:60,maskBorderOutset:60,maskBorderRepeat:60,maskBorder:60,maskType:60,textDecorationStyle:56,textDecorationSkip:56,textDecorationLine:56,textDecorationColor:56,filter:52,fontFeatureSettings:47,breakAfter:49,breakBefore:49,breakInside:49,columnCount:49,columnFill:49,columnGap:49,columnRule:49,columnRuleColor:49,columnRuleStyle:49,columnRuleWidth:49,columns:49,columnSpan:49,columnWidth:49},safari:{flex:8,flexBasis:8,flexDirection:8,flexGrow:8,flexFlow:8,flexShrink:8,flexWrap:8,alignContent:8,alignItems:8,alignSelf:8,justifyContent:8,order:8,transition:6,transitionDelay:6,transitionDuration:6,transitionProperty:6,transitionTimingFunction:6,transform:8,transformOrigin:8,transformOriginX:8,transformOriginY:8,backfaceVisibility:8,perspective:8,perspectiveOrigin:8,transformStyle:8,transformOriginZ:8,animation:8,animationDelay:8,animationDirection:8,animationFillMode:8,animationDuration:8,animationIterationCount:8,animationName:8,animationPlayState:8,animationTimingFunction:8,appearance:10.1,userSelect:10.1,backdropFilter:10.1,fontKerning:9,scrollSnapType:10,scrollSnapPointsX:10,scrollSnapPointsY:10,scrollSnapDestination:10,scrollSnapCoordinate:10,textEmphasisPosition:7,textEmphasis:7,textEmphasisStyle:7,textEmphasisColor:7,boxDecorationBreak:10.1,clipPath:10.1,maskImage:10.1,maskMode:10.1,maskRepeat:10.1,maskPosition:10.1,maskClip:10.1,maskOrigin:10.1,maskSize:10.1,maskComposite:10.1,mask:10.1,maskBorderSource:10.1,maskBorderMode:10.1,maskBorderSlice:10.1,maskBorderWidth:10.1,maskBorderOutset:10.1,maskBorderRepeat:10.1,maskBorder:10.1,maskType:10.1,textDecorationStyle:10.1,textDecorationSkip:10.1,textDecorationLine:10.1,textDecorationColor:10.1,shapeImageThreshold:10,shapeImageMargin:10,shapeImageOutside:10,filter:9,hyphens:10.1,flowInto:10.1,flowFrom:10.1,breakBefore:8,breakAfter:8,breakInside:8,regionFragment:10.1,columnCount:8,columnFill:8,columnGap:8,columnRule:8,columnRuleColor:8,columnRuleStyle:8,columnRuleWidth:8,columns:8,columnSpan:8,columnWidth:8},firefox:{appearance:55,userSelect:55,boxSizing:28,textAlignLast:48,textDecorationStyle:35,textDecorationSkip:35,textDecorationLine:35,textDecorationColor:35,tabSize:55,hyphens:42,fontFeatureSettings:33,breakAfter:51,breakBefore:51,breakInside:51,columnCount:51,columnFill:51,columnGap:51,columnRule:51,columnRuleColor:51,columnRuleStyle:51,columnRuleWidth:51,columns:51,columnSpan:51,columnWidth:51},opera:{flex:16,flexBasis:16,flexDirection:16,flexGrow:16,flexFlow:16,flexShrink:16,flexWrap:16,alignContent:16,alignItems:16,alignSelf:16,justifyContent:16,order:16,transform:22,transformOrigin:22,transformOriginX:22,transformOriginY:22,backfaceVisibility:22,perspective:22,perspectiveOrigin:22,transformStyle:22,transformOriginZ:22,animation:29,animationDelay:29,animationDirection:29,animationFillMode:29,animationDuration:29,animationIterationCount:29,animationName:29,animationPlayState:29,animationTimingFunction:29,appearance:45,userSelect:40,fontKerning:19,textEmphasisPosition:45,textEmphasis:45,textEmphasisStyle:45,textEmphasisColor:45,boxDecorationBreak:45,clipPath:41,maskImage:45,maskMode:45,maskRepeat:45,maskPosition:45,maskClip:45,maskOrigin:45,maskSize:45,maskComposite:45,mask:45,maskBorderSource:45,maskBorderMode:45,maskBorderSlice:45,maskBorderWidth:45,maskBorderOutset:45,maskBorderRepeat:45,maskBorder:45,maskType:45,textDecorationStyle:43,textDecorationSkip:43,textDecorationLine:43,textDecorationColor:43,filter:39,fontFeatureSettings:34,breakAfter:36,breakBefore:36,breakInside:36,columnCount:36,columnFill:36,columnGap:36,columnRule:36,columnRuleColor:36,columnRuleStyle:36,columnRuleWidth:36,columns:36,columnSpan:36,columnWidth:36},ie:{flex:10,flexDirection:10,flexFlow:10,flexWrap:10,transform:9,transformOrigin:9,transformOriginX:9,transformOriginY:9,userSelect:11,wrapFlow:11,wrapThrough:11,wrapMargin:11,scrollSnapType:11,scrollSnapPointsX:11,scrollSnapPointsY:11,scrollSnapDestination:11,scrollSnapCoordinate:11,touchAction:10,hyphens:11,flowInto:11,flowFrom:11,breakBefore:11,breakAfter:11,breakInside:11,regionFragment:11,gridTemplateColumns:11,gridTemplateRows:11,gridTemplateAreas:11,gridTemplate:11,gridAutoColumns:11,gridAutoRows:11,gridAutoFlow:11,grid:11,gridRowStart:11,gridColumnStart:11,gridRowEnd:11,gridRow:11,gridColumn:11,gridColumnEnd:11,gridColumnGap:11,gridRowGap:11,gridArea:11,gridGap:11,textSizeAdjust:11},edge:{userSelect:15,wrapFlow:15,wrapThrough:15,wrapMargin:15,scrollSnapType:15,scrollSnapPointsX:15,scrollSnapPointsY:15,scrollSnapDestination:15,scrollSnapCoordinate:15,hyphens:15,flowInto:15,flowFrom:15,breakBefore:15,breakAfter:15,breakInside:15,regionFragment:15,gridTemplateColumns:15,gridTemplateRows:15,gridTemplateAreas:15,gridTemplate:15,gridAutoColumns:15,gridAutoRows:15,gridAutoFlow:15,grid:15,gridRowStart:15,gridColumnStart:15,gridRowEnd:15,gridRow:15,gridColumn:15,gridColumnEnd:15,gridColumnGap:15,gridRowGap:15,gridArea:15,gridGap:15},ios_saf:{flex:8.1,flexBasis:8.1,flexDirection:8.1,flexGrow:8.1,flexFlow:8.1,flexShrink:8.1,flexWrap:8.1,alignContent:8.1,alignItems:8.1,alignSelf:8.1,justifyContent:8.1,order:8.1,transition:6,transitionDelay:6,transitionDuration:6,transitionProperty:6,transitionTimingFunction:6,transform:8.1,transformOrigin:8.1,transformOriginX:8.1,transformOriginY:8.1,backfaceVisibility:8.1,perspective:8.1,perspectiveOrigin:8.1,transformStyle:8.1,transformOriginZ:8.1,animation:8.1,animationDelay:8.1,animationDirection:8.1,animationFillMode:8.1,animationDuration:8.1,animationIterationCount:8.1,animationName:8.1,animationPlayState:8.1,animationTimingFunction:8.1,appearance:10,userSelect:10,backdropFilter:10,fontKerning:10,scrollSnapType:10,scrollSnapPointsX:10,scrollSnapPointsY:10,scrollSnapDestination:10,scrollSnapCoordinate:10,boxDecorationBreak:10,clipPath:10,maskImage:10,maskMode:10,maskRepeat:10,maskPosition:10,maskClip:10,maskOrigin:10,maskSize:10,maskComposite:10,mask:10,maskBorderSource:10,maskBorderMode:10,maskBorderSlice:10,maskBorderWidth:10,maskBorderOutset:10,maskBorderRepeat:10,maskBorder:10,maskType:10,textSizeAdjust:10,textDecorationStyle:10,textDecorationSkip:10,textDecorationLine:10,textDecorationColor:10,shapeImageThreshold:10,shapeImageMargin:10,shapeImageOutside:10,filter:9,hyphens:10,flowInto:10,flowFrom:10,breakBefore:8.1,breakAfter:8.1,breakInside:8.1,regionFragment:10,columnCount:8.1,columnFill:8.1,columnGap:8.1,columnRule:8.1,columnRuleColor:8.1,columnRuleStyle:8.1,columnRuleWidth:8.1,columns:8.1,columnSpan:8.1,columnWidth:8.1},android:{borderImage:4.2,borderImageOutset:4.2,borderImageRepeat:4.2,borderImageSlice:4.2,borderImageSource:4.2,borderImageWidth:4.2,flex:4.2,flexBasis:4.2,flexDirection:4.2,flexGrow:4.2,flexFlow:4.2,flexShrink:4.2,flexWrap:4.2,alignContent:4.2,alignItems:4.2,alignSelf:4.2,justifyContent:4.2,order:4.2,transition:4.2,transitionDelay:4.2,transitionDuration:4.2,transitionProperty:4.2,transitionTimingFunction:4.2,transform:4.4,transformOrigin:4.4,transformOriginX:4.4,transformOriginY:4.4,backfaceVisibility:4.4,perspective:4.4,perspectiveOrigin:4.4,transformStyle:4.4,transformOriginZ:4.4,animation:4.4,animationDelay:4.4,animationDirection:4.4,animationFillMode:4.4,animationDuration:4.4,animationIterationCount:4.4,animationName:4.4,animationPlayState:4.4,animationTimingFunction:4.4,appearance:53,userSelect:53,fontKerning:4.4,textEmphasisPosition:53,textEmphasis:53,textEmphasisStyle:53,textEmphasisColor:53,boxDecorationBreak:53,clipPath:53,maskImage:53,maskMode:53,maskRepeat:53,maskPosition:53,maskClip:53,maskOrigin:53,maskSize:53,maskComposite:53,mask:53,maskBorderSource:53,maskBorderMode:53,maskBorderSlice:53,maskBorderWidth:53,maskBorderOutset:53,maskBorderRepeat:53,maskBorder:53,maskType:53,filter:4.4,fontFeatureSettings:4.4,breakAfter:53,breakBefore:53,breakInside:53,columnCount:53,columnFill:53,columnGap:53,columnRule:53,columnRuleColor:53,columnRuleStyle:53,columnRuleWidth:53,columns:53,columnSpan:53,columnWidth:53},and_chr:{appearance:56,textEmphasisPosition:56,textEmphasis:56,textEmphasisStyle:56,textEmphasisColor:56,boxDecorationBreak:56,maskImage:56,maskMode:56,maskRepeat:56,maskPosition:56,maskClip:56,maskOrigin:56,maskSize:56,maskComposite:56,mask:56,maskBorderSource:56,maskBorderMode:56,maskBorderSlice:56,maskBorderWidth:56,maskBorderOutset:56,maskBorderRepeat:56,maskBorder:56,maskType:56,textDecorationStyle:56,textDecorationSkip:56,textDecorationLine:56,textDecorationColor:56},and_uc:{flex:11,flexBasis:11,flexDirection:11,flexGrow:11,flexFlow:11,flexShrink:11,flexWrap:11,alignContent:11,alignItems:11,alignSelf:11,justifyContent:11,order:11,transition:11,transitionDelay:11,transitionDuration:11,transitionProperty:11,transitionTimingFunction:11,transform:11,transformOrigin:11,transformOriginX:11,transformOriginY:11,backfaceVisibility:11,perspective:11,perspectiveOrigin:11,transformStyle:11,transformOriginZ:11,animation:11,animationDelay:11,animationDirection:11,animationFillMode:11,animationDuration:11,animationIterationCount:11,animationName:11,animationPlayState:11,animationTimingFunction:11,appearance:11,userSelect:11,fontKerning:11,textEmphasisPosition:11,textEmphasis:11,textEmphasisStyle:11,textEmphasisColor:11,maskImage:11,maskMode:11,maskRepeat:11,maskPosition:11,maskClip:11,maskOrigin:11,maskSize:11,maskComposite:11,mask:11,maskBorderSource:11,maskBorderMode:11,maskBorderSlice:11,maskBorderWidth:11,maskBorderOutset:11,maskBorderRepeat:11,maskBorder:11,maskType:11,textSizeAdjust:11,filter:11,hyphens:11,flowInto:11,flowFrom:11,breakBefore:11,breakAfter:11,breakInside:11,regionFragment:11,fontFeatureSettings:11,columnCount:11,columnFill:11,columnGap:11,columnRule:11,columnRuleColor:11,columnRuleStyle:11,columnRuleWidth:11,columns:11,columnSpan:11,columnWidth:11},op_mini:{}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if("chrome"===e&&t<43||("safari"===e||"ios_saf"===e)&&t<9||"opera"===e&&t<30||"android"===e&&t<=4.4||"and_uc"===e)return n+"keyframes";return"keyframes"},e.exports=t.default},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){var r;r=function(){var e=!0;function t(t){function n(e){var n=t.match(e);return n&&n.length>1&&n[1]||""}function r(e){var n=t.match(e);return n&&n.length>1&&n[2]||""}var o,i=n(/(ipod|iphone|ipad)/i).toLowerCase(),a=!/like android/i.test(t)&&/android/i.test(t),s=/nexus\s*[0-6]\s*/i.test(t),l=!s&&/nexus\s*[0-9]+/i.test(t),u=/CrOS/.test(t),c=/silk/i.test(t),f=/sailfish/i.test(t),p=/tizen/i.test(t),d=/(web|hpw)os/i.test(t),h=/windows phone/i.test(t),m=(/SamsungBrowser/i.test(t),!h&&/windows/i.test(t)),y=!i&&!c&&/macintosh/i.test(t),g=!a&&!f&&!p&&!d&&/linux/i.test(t),v=r(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),b=n(/version\/(\d+(\.\d+)?)/i),k=/tablet/i.test(t)&&!/tablet pc/i.test(t),x=!k&&/[^-]mobi/i.test(t),C=/xbox/i.test(t);/opera/i.test(t)?o={name:"Opera",opera:e,version:b||n(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)}:/opr\/|opios/i.test(t)?o={name:"Opera",opera:e,version:n(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i)||b}:/SamsungBrowser/i.test(t)?o={name:"Samsung Internet for Android",samsungBrowser:e,version:b||n(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)}:/coast/i.test(t)?o={name:"Opera Coast",coast:e,version:b||n(/(?:coast)[\s\/](\d+(\.\d+)?)/i)}:/yabrowser/i.test(t)?o={name:"Yandex Browser",yandexbrowser:e,version:b||n(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)}:/ucbrowser/i.test(t)?o={name:"UC Browser",ucbrowser:e,version:n(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)}:/mxios/i.test(t)?o={name:"Maxthon",maxthon:e,version:n(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)}:/epiphany/i.test(t)?o={name:"Epiphany",epiphany:e,version:n(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)}:/puffin/i.test(t)?o={name:"Puffin",puffin:e,version:n(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)}:/sleipnir/i.test(t)?o={name:"Sleipnir",sleipnir:e,version:n(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)}:/k-meleon/i.test(t)?o={name:"K-Meleon",kMeleon:e,version:n(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)}:h?(o={name:"Windows Phone",osname:"Windows Phone",windowsphone:e},v?(o.msedge=e,o.version=v):(o.msie=e,o.version=n(/iemobile\/(\d+(\.\d+)?)/i))):/msie|trident/i.test(t)?o={name:"Internet Explorer",msie:e,version:n(/(?:msie |rv:)(\d+(\.\d+)?)/i)}:u?o={name:"Chrome",osname:"Chrome OS",chromeos:e,chromeBook:e,chrome:e,version:n(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:/edg([ea]|ios)/i.test(t)?o={name:"Microsoft Edge",msedge:e,version:v}:/vivaldi/i.test(t)?o={name:"Vivaldi",vivaldi:e,version:n(/vivaldi\/(\d+(\.\d+)?)/i)||b}:f?o={name:"Sailfish",osname:"Sailfish OS",sailfish:e,version:n(/sailfish\s?browser\/(\d+(\.\d+)?)/i)}:/seamonkey\//i.test(t)?o={name:"SeaMonkey",seamonkey:e,version:n(/seamonkey\/(\d+(\.\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(t)?(o={name:"Firefox",firefox:e,version:n(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)},/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(t)&&(o.firefoxos=e,o.osname="Firefox OS")):c?o={name:"Amazon Silk",silk:e,version:n(/silk\/(\d+(\.\d+)?)/i)}:/phantom/i.test(t)?o={name:"PhantomJS",phantom:e,version:n(/phantomjs\/(\d+(\.\d+)?)/i)}:/slimerjs/i.test(t)?o={name:"SlimerJS",slimer:e,version:n(/slimerjs\/(\d+(\.\d+)?)/i)}:/blackberry|\bbb\d+/i.test(t)||/rim\stablet/i.test(t)?o={name:"BlackBerry",osname:"BlackBerry OS",blackberry:e,version:b||n(/blackberry[\d]+\/(\d+(\.\d+)?)/i)}:d?(o={name:"WebOS",osname:"WebOS",webos:e,version:b||n(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)},/touchpad\//i.test(t)&&(o.touchpad=e)):/bada/i.test(t)?o={name:"Bada",osname:"Bada",bada:e,version:n(/dolfin\/(\d+(\.\d+)?)/i)}:p?o={name:"Tizen",osname:"Tizen",tizen:e,version:n(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i)||b}:/qupzilla/i.test(t)?o={name:"QupZilla",qupzilla:e,version:n(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i)||b}:/chromium/i.test(t)?o={name:"Chromium",chromium:e,version:n(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i)||b}:/chrome|crios|crmo/i.test(t)?o={name:"Chrome",chrome:e,version:n(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:a?o={name:"Android",version:b}:/safari|applewebkit/i.test(t)?(o={name:"Safari",safari:e},b&&(o.version=b)):i?(o={name:"iphone"==i?"iPhone":"ipad"==i?"iPad":"iPod"},b&&(o.version=b)):o=/googlebot/i.test(t)?{name:"Googlebot",googlebot:e,version:n(/googlebot\/(\d+(\.\d+))/i)||b}:{name:n(/^(.*)\/(.*) /),version:r(/^(.*)\/(.*) /)},!o.msedge&&/(apple)?webkit/i.test(t)?(/(apple)?webkit\/537\.36/i.test(t)?(o.name=o.name||"Blink",o.blink=e):(o.name=o.name||"Webkit",o.webkit=e),!o.version&&b&&(o.version=b)):!o.opera&&/gecko\//i.test(t)&&(o.name=o.name||"Gecko",o.gecko=e,o.version=o.version||n(/gecko\/(\d+(\.\d+)?)/i)),o.windowsphone||!a&&!o.silk?!o.windowsphone&&i?(o[i]=e,o.ios=e,o.osname="iOS"):y?(o.mac=e,o.osname="macOS"):C?(o.xbox=e,o.osname="Xbox"):m?(o.windows=e,o.osname="Windows"):g&&(o.linux=e,o.osname="Linux"):(o.android=e,o.osname="Android");var w="";o.windows?w=function(e){switch(e){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}(n(/Windows ((NT|XP)( \d\d?.\d)?)/i)):o.windowsphone?w=n(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i):o.mac?w=(w=n(/Mac OS X (\d+([_\.\s]\d+)*)/i)).replace(/[_\s]/g,"."):i?w=(w=n(/os (\d+([_\s]\d+)*) like mac os x/i)).replace(/[_\s]/g,"."):a?w=n(/android[ \/-](\d+(\.\d+)*)/i):o.webos?w=n(/(?:web|hpw)os\/(\d+(\.\d+)*)/i):o.blackberry?w=n(/rim\stablet\sos\s(\d+(\.\d+)*)/i):o.bada?w=n(/bada\/(\d+(\.\d+)*)/i):o.tizen&&(w=n(/tizen[\/\s](\d+(\.\d+)*)/i)),w&&(o.osversion=w);var _=!o.windows&&w.split(".")[0];return k||l||"ipad"==i||a&&(3==_||_>=4&&!x)||o.silk?o.tablet=e:(x||"iphone"==i||"ipod"==i||a||s||o.blackberry||o.webos||o.bada)&&(o.mobile=e),o.msedge||o.msie&&o.version>=10||o.yandexbrowser&&o.version>=15||o.vivaldi&&o.version>=1||o.chrome&&o.version>=20||o.samsungBrowser&&o.version>=4||o.firefox&&o.version>=20||o.safari&&o.version>=6||o.opera&&o.version>=10||o.ios&&o.osversion&&o.osversion.split(".")[0]>=6||o.blackberry&&o.version>=10.1||o.chromium&&o.version>=20?o.a=e:o.msie&&o.version<10||o.chrome&&o.version<20||o.firefox&&o.version<20||o.safari&&o.version<6||o.opera&&o.version<10||o.ios&&o.osversion&&o.osversion.split(".")[0]<6||o.chromium&&o.version<20?o.c=e:o.x=e,o}var n=t("undefined"!=typeof navigator&&navigator.userAgent||"");function r(e){return e.split(".").length}function o(e,t){var n,r=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(n=0;n<e.length;n++)r.push(t(e[n]));return r}function i(e){for(var t=Math.max(r(e[0]),r(e[1])),n=o(e,function(e){var n=t-r(e);return o((e+=new Array(n+1).join(".0")).split("."),function(e){return new Array(20-e.length).join("0")+e}).reverse()});--t>=0;){if(n[0][t]>n[1][t])return 1;if(n[0][t]!==n[1][t])return-1;if(0===t)return 0}}function a(e,r,o){var a=n;"string"==typeof r&&(o=r,r=void 0),void 0===r&&(r=!1),o&&(a=t(o));var s=""+a.version;for(var l in e)if(e.hasOwnProperty(l)&&a[l]){if("string"!=typeof e[l])throw new Error("Browser version in the minVersion map should be a string: "+l+": "+String(e));return i([s,e[l]])<0}return r}return n.test=function(e){for(var t=0;t<e.length;++t){var r=e[t];if("string"==typeof r&&r in n)return!0}return!1},n.isUnsupportedBrowser=a,n.compareVersions=i,n.check=function(e,t,n){return!a(e,t,n)},n._detect=t,n.detect=t,n},void 0!==e&&e.exports?e.exports=r():n(133)("bowser",r)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.default._detect(e);t.yandexbrowser&&(t=i.default._detect(e.replace(/YaBrowser\/[0-9.]*/,"")));for(var n in a)if(t.hasOwnProperty(n)){var r=a[n];t.jsPrefix=r,t.cssPrefix="-"+r.toLowerCase()+"-";break}t.browserName=function(e){if(e.firefox)return"firefox";if(e.mobile||e.tablet){if(e.ios)return"ios_saf";if(e.android)return"android";if(e.opera)return"op_mini"}for(var t in s)if(e.hasOwnProperty(t))return s[t]}(t),t.version?t.browserVersion=parseFloat(t.version):t.browserVersion=parseInt(parseFloat(t.osversion),10);t.osVersion=parseFloat(t.osversion),"ios_saf"===t.browserName&&t.browserVersion>t.osVersion&&(t.browserVersion=t.osVersion);"android"===t.browserName&&t.chrome&&t.browserVersion>37&&(t.browserName="and_chr");"android"===t.browserName&&t.osVersion<5&&(t.browserVersion=t.osVersion);"android"===t.browserName&&t.samsungBrowser&&(t.browserName="and_chr",t.browserVersion=44);return t};var r,o=n(134),i=(r=o)&&r.__esModule?r:{default:r};var a={chrome:"Webkit",safari:"Webkit",ios:"Webkit",android:"Webkit",phantom:"Webkit",opera:"Webkit",webos:"Webkit",blackberry:"Webkit",bada:"Webkit",tizen:"Webkit",chromium:"Webkit",vivaldi:"Webkit",firefox:"Moz",seamoney:"Moz",sailfish:"Moz",msie:"ms",msedge:"ms"},s={chrome:"chrome",chromium:"chrome",safari:"safari",firfox:"firefox",msedge:"edge",opera:"opera",vivaldi:"opera",msie:"ie"};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();t.default=function(e){var t=e.prefixMap,n=e.plugins,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(e){return e};return function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var r="undefined"!=typeof navigator?navigator.userAgent:void 0;if(this._userAgent=n.userAgent||r,this._keepUnprefixed=n.keepUnprefixed||!1,this._userAgent&&(this._browserInfo=(0,o.default)(this._userAgent)),!this._browserInfo||!this._browserInfo.cssPrefix)return this._useFallback=!0,!1;this.prefixedKeyframes=(0,i.default)(this._browserInfo.browserName,this._browserInfo.browserVersion,this._browserInfo.cssPrefix);var a=this._browserInfo.browserName&&t[this._browserInfo.browserName];if(a){for(var s in this._requiresPrefix={},a)a[s]>=this._browserInfo.browserVersion&&(this._requiresPrefix[s]=!0);this._hasPropsRequiringPrefix=Object.keys(this._requiresPrefix).length>0}else this._useFallback=!0;this._metaData={browserVersion:this._browserInfo.browserVersion,browserName:this._browserInfo.browserName,cssPrefix:this._browserInfo.cssPrefix,jsPrefix:this._browserInfo.jsPrefix,keepUnprefixed:this._keepUnprefixed,requiresPrefix:this._requiresPrefix}}return r(e,[{key:"prefix",value:function(e){return this._useFallback?c(e):this._hasPropsRequiringPrefix?this._prefixStyle(e):e}},{key:"_prefixStyle",value:function(e){for(var t in e){var r=e[t];if((0,l.default)(r))e[t]=this.prefix(r);else if(Array.isArray(r)){for(var o=[],i=0,c=r.length;i<c;++i){var f=(0,u.default)(n,t,r[i],e,this._metaData);(0,s.default)(o,f||r[i])}o.length>0&&(e[t]=o)}else{var p=(0,u.default)(n,t,r,e,this._metaData);p&&(e[t]=p),this._requiresPrefix.hasOwnProperty(t)&&(e[this._browserInfo.jsPrefix+(0,a.default)(t)]=r,this._keepUnprefixed||delete e[t])}}return e}}],[{key:"prefixAll",value:function(e){return c(e)}}]),e}()};var o=c(n(135)),i=c(n(132)),a=c(n(30)),s=c(n(61)),l=c(n(60)),u=c(n(62));function c(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t))for(var r=e[t],o=0,a=r.length;o<a;++o)n[r[o]+(0,i.default)(t)]=n[t]};var r,o=n(30),i=(r=o)&&r.__esModule?r:{default:r};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,n=e.plugins;return function e(s){for(var l in s){var u=s[l];if((0,a.default)(u))s[l]=e(u);else if(Array.isArray(u)){for(var c=[],f=0,p=u.length;f<p;++f){var d=(0,o.default)(n,l,u[f],s,t);(0,i.default)(c,d||u[f])}c.length>0&&(s[l]=c)}else{var h=(0,o.default)(n,l,u,s,t);h&&(s[l]=h),(0,r.default)(t,l,s)}}return s}};var r=s(n(137)),o=s(n(62)),i=s(n(61)),a=s(n(60));function s(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t="undefined"!=typeof navigator,n=e.userAgent;void 0===n&&t&&(n=navigator.userAgent),void 0!==n||l||(l=!0);var s=(0,r.default)(a.default);if(!1===n)return null;if("all"===n||void 0===n)return function(e){var n=-1!==["flex","inline-flex"].indexOf(e.display),r=s(e);if(n){var o=r.display;r.display=t?o[o.length-1]:o.join("; display: ")}return r};var u=new((0,o.default)(i.default,s))({userAgent:n});return function(e){return u.prefix(e)}};var r=s(n(138)),o=s(n(136)),i=s(n(131)),a=s(n(122));s(n(32));function s(e){return e&&e.__esModule?e:{default:e}}var l=!1},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={menu:1e3,appBar:1100,drawerOverlay:1200,drawer:1300,dialogOverlay:1400,dialog:1500,layer:2e3,popover:2100,snackbar:2900,tooltip:3e3}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={iconSize:24,desktopGutter:24,desktopGutterMore:32,desktopGutterLess:16,desktopGutterMini:8,desktopKeylineIncrement:64,desktopDropDownMenuItemHeight:32,desktopDropDownMenuFontSize:15,desktopDrawerMenuItemHeight:48,desktopSubheaderHeight:48,desktopToolbarHeight:56}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(31),i=n(63),a=n(141),s=(r=a)&&r.__esModule?r:{default:r};t.default={spacing:s.default,fontFamily:"Roboto, sans-serif",borderRadius:2,palette:{primary1Color:o.cyan500,primary2Color:o.cyan700,primary3Color:o.grey400,accent1Color:o.pinkA200,accent2Color:o.grey100,accent3Color:o.grey500,textColor:o.darkBlack,secondaryTextColor:(0,i.fade)(o.darkBlack,.54),alternateTextColor:o.white,canvasColor:o.white,borderColor:o.grey300,disabledColor:(0,i.fade)(o.darkBlack,.3),pickerHeaderColor:o.cyan500,clockCircleColor:(0,i.fade)(o.darkBlack,.07),shadowColor:o.fullBlack}}},function(e,t,n){(function(e,n){var r=200,o="__lodash_hash_undefined__",i=800,a=16,s=9007199254740991,l="[object Arguments]",u="[object AsyncFunction]",c="[object Function]",f="[object GeneratorFunction]",p="[object Null]",d="[object Object]",h="[object Proxy]",m="[object Undefined]",y=/^\[object .+?Constructor\]$/,g=/^(?:0|[1-9]\d*)$/,v={};v["[object Float32Array]"]=v["[object Float64Array]"]=v["[object Int8Array]"]=v["[object Int16Array]"]=v["[object Int32Array]"]=v["[object Uint8Array]"]=v["[object Uint8ClampedArray]"]=v["[object Uint16Array]"]=v["[object Uint32Array]"]=!0,v[l]=v["[object Array]"]=v["[object ArrayBuffer]"]=v["[object Boolean]"]=v["[object DataView]"]=v["[object Date]"]=v["[object Error]"]=v[c]=v["[object Map]"]=v["[object Number]"]=v[d]=v["[object RegExp]"]=v["[object Set]"]=v["[object String]"]=v["[object WeakMap]"]=!1;var b="object"==typeof e&&e&&e.Object===Object&&e,k="object"==typeof self&&self&&self.Object===Object&&self,x=b||k||Function("return this")(),C="object"==typeof t&&t&&!t.nodeType&&t,w=C&&"object"==typeof n&&n&&!n.nodeType&&n,_=w&&w.exports===C,S=_&&b.process,T=function(){try{return S&&S.binding&&S.binding("util")}catch(e){}}(),P=T&&T.isTypedArray;function O(e,t){return"__proto__"==t?void 0:e[t]}var E,A,M,B=Array.prototype,I=Function.prototype,F=Object.prototype,N=x["__core-js_shared__"],R=I.toString,j=F.hasOwnProperty,D=(E=/[^.]+$/.exec(N&&N.keys&&N.keys.IE_PROTO||""))?"Symbol(src)_1."+E:"",W=F.toString,z=R.call(Object),L=RegExp("^"+R.call(j).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),U=_?x.Buffer:void 0,H=x.Symbol,V=x.Uint8Array,q=U?U.allocUnsafe:void 0,G=(A=Object.getPrototypeOf,M=Object,function(e){return A(M(e))}),K=Object.create,$=F.propertyIsEnumerable,X=B.splice,Y=H?H.toStringTag:void 0,Q=function(){try{var e=Ce(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),J=U?U.isBuffer:void 0,Z=Math.max,ee=Date.now,te=Ce(x,"Map"),ne=Ce(Object,"create"),re=function(){function e(){}return function(t){if(!Ie(t))return{};if(K)return K(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();function oe(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function ie(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function ae(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function se(e){var t=this.__data__=new ie(e);this.size=t.size}function le(e,t){var n=Oe(e),r=!n&&Pe(e),o=!n&&!r&&Ae(e),i=!n&&!r&&!o&&Ne(e),a=n||r||o||i,s=a?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],l=s.length;for(var u in e)!t&&!j.call(e,u)||a&&("length"==u||o&&("offset"==u||"parent"==u)||i&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||we(u,l))||s.push(u);return s}function ue(e,t,n){(void 0===n||Te(e[t],n))&&(void 0!==n||t in e)||pe(e,t,n)}function ce(e,t,n){var r=e[t];j.call(e,t)&&Te(r,n)&&(void 0!==n||t in e)||pe(e,t,n)}function fe(e,t){for(var n=e.length;n--;)if(Te(e[n][0],t))return n;return-1}function pe(e,t,n){"__proto__"==t&&Q?Q(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}oe.prototype.clear=function(){this.__data__=ne?ne(null):{},this.size=0},oe.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},oe.prototype.get=function(e){var t=this.__data__;if(ne){var n=t[e];return n===o?void 0:n}return j.call(t,e)?t[e]:void 0},oe.prototype.has=function(e){var t=this.__data__;return ne?void 0!==t[e]:j.call(t,e)},oe.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=ne&&void 0===t?o:t,this},ie.prototype.clear=function(){this.__data__=[],this.size=0},ie.prototype.delete=function(e){var t=this.__data__,n=fe(t,e);return!(n<0||(n==t.length-1?t.pop():X.call(t,n,1),--this.size,0))},ie.prototype.get=function(e){var t=this.__data__,n=fe(t,e);return n<0?void 0:t[n][1]},ie.prototype.has=function(e){return fe(this.__data__,e)>-1},ie.prototype.set=function(e,t){var n=this.__data__,r=fe(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},ae.prototype.clear=function(){this.size=0,this.__data__={hash:new oe,map:new(te||ie),string:new oe}},ae.prototype.delete=function(e){var t=xe(this,e).delete(e);return this.size-=t?1:0,t},ae.prototype.get=function(e){return xe(this,e).get(e)},ae.prototype.has=function(e){return xe(this,e).has(e)},ae.prototype.set=function(e,t){var n=xe(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},se.prototype.clear=function(){this.__data__=new ie,this.size=0},se.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},se.prototype.get=function(e){return this.__data__.get(e)},se.prototype.has=function(e){return this.__data__.has(e)},se.prototype.set=function(e,t){var n=this.__data__;if(n instanceof ie){var o=n.__data__;if(!te||o.length<r-1)return o.push([e,t]),this.size=++n.size,this;n=this.__data__=new ae(o)}return n.set(e,t),this.size=n.size,this};var de,he=function(e,t,n){for(var r=-1,o=Object(e),i=n(e),a=i.length;a--;){var s=i[de?a:++r];if(!1===t(o[s],s,o))break}return e};function me(e){return null==e?void 0===e?m:p:Y&&Y in Object(e)?function(e){var t=j.call(e,Y),n=e[Y];try{e[Y]=void 0;var r=!0}catch(e){}var o=W.call(e);r&&(t?e[Y]=n:delete e[Y]);return o}(e):function(e){return W.call(e)}(e)}function ye(e){return Fe(e)&&me(e)==l}function ge(e){return!(!Ie(e)||D&&D in e)&&(Me(e)?L:y).test(function(e){if(null!=e){try{return R.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function ve(e){if(!Ie(e))return function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}(e);var t=_e(e),n=[];for(var r in e)("constructor"!=r||!t&&j.call(e,r))&&n.push(r);return n}function be(e,t,n,r,o){e!==t&&he(t,function(i,a){if(Ie(i))o||(o=new se),function(e,t,n,r,o,i,a){var s=O(e,n),l=O(t,n),u=a.get(l);if(u)return void ue(e,n,u);var c=i?i(s,l,n+"",e,t,a):void 0,f=void 0===c;if(f){var p=Oe(l),h=!p&&Ae(l),m=!p&&!h&&Ne(l);c=l,p||h||m?Oe(s)?c=s:Fe(k=s)&&Ee(k)?c=function(e,t){var n=-1,r=e.length;t||(t=Array(r));for(;++n<r;)t[n]=e[n];return t}(s):h?(f=!1,c=function(e,t){if(t)return e.slice();var n=e.length,r=q?q(n):new e.constructor(n);return e.copy(r),r}(l,!0)):m?(f=!1,y=l,g=!0?(v=y.buffer,b=new v.constructor(v.byteLength),new V(b).set(new V(v)),b):y.buffer,c=new y.constructor(g,y.byteOffset,y.length)):c=[]:function(e){if(!Fe(e)||me(e)!=d)return!1;var t=G(e);if(null===t)return!0;var n=j.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&R.call(n)==z}(l)||Pe(l)?(c=s,Pe(s)?c=function(e){return function(e,t,n,r){var o=!n;n||(n={});var i=-1,a=t.length;for(;++i<a;){var s=t[i],l=r?r(n[s],e[s],s,n,e):void 0;void 0===l&&(l=e[s]),o?pe(n,s,l):ce(n,s,l)}return n}(e,Re(e))}(s):(!Ie(s)||r&&Me(s))&&(c=function(e){return"function"!=typeof e.constructor||_e(e)?{}:re(G(e))}(l))):f=!1}var y,g,v,b;var k;f&&(a.set(l,c),o(c,l,r,i,a),a.delete(l));ue(e,n,c)}(e,t,a,n,be,r,o);else{var s=r?r(O(e,a),i,a+"",e,t,o):void 0;void 0===s&&(s=i),ue(e,a,s)}},Re)}function ke(e,t){return Se(function(e,t,n){return t=Z(void 0===t?e.length-1:t,0),function(){for(var r=arguments,o=-1,i=Z(r.length-t,0),a=Array(i);++o<i;)a[o]=r[t+o];o=-1;for(var s=Array(t+1);++o<t;)s[o]=r[o];return s[t]=n(a),function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}(e,this,s)}}(e,t,We),e+"")}function xe(e,t){var n,r,o=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?o["string"==typeof t?"string":"hash"]:o.map}function Ce(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return ge(n)?n:void 0}function we(e,t){var n=typeof e;return!!(t=null==t?s:t)&&("number"==n||"symbol"!=n&&g.test(e))&&e>-1&&e%1==0&&e<t}function _e(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||F)}var Se=function(e){var t=0,n=0;return function(){var r=ee(),o=a-(r-n);if(n=r,o>0){if(++t>=i)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}(Q?function(e,t){return Q(e,"toString",{configurable:!0,enumerable:!1,value:(n=t,function(){return n}),writable:!0});var n}:We);function Te(e,t){return e===t||e!=e&&t!=t}var Pe=ye(function(){return arguments}())?ye:function(e){return Fe(e)&&j.call(e,"callee")&&!$.call(e,"callee")},Oe=Array.isArray;function Ee(e){return null!=e&&Be(e.length)&&!Me(e)}var Ae=J||function(){return!1};function Me(e){if(!Ie(e))return!1;var t=me(e);return t==c||t==f||t==u||t==h}function Be(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=s}function Ie(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function Fe(e){return null!=e&&"object"==typeof e}var Ne=P?function(e){return function(t){return e(t)}}(P):function(e){return Fe(e)&&Be(e.length)&&!!v[me(e)]};function Re(e){return Ee(e)?le(e,!0):ve(e)}var je,De=(je=function(e,t,n){be(e,t,n)},ke(function(e,t){var n=-1,r=t.length,o=r>1?t[r-1]:void 0,i=r>2?t[2]:void 0;for(o=je.length>3&&"function"==typeof o?(r--,o):void 0,i&&function(e,t,n){if(!Ie(n))return!1;var r=typeof t;return!!("number"==r?Ee(n)&&we(t,n.length):"string"==r&&t in n)&&Te(n[t],e)}(t[0],t[1],i)&&(o=r<3?void 0:o,r=1),e=Object(e);++n<r;){var a=t[n];a&&je(e,a,n,o)}return e}));function We(e){return e}n.exports=De}).call(this,n(0),n(64)(e))},function(e,t,n){var r=n(2)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){var r=n(38),o=n(2)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(145),o=n(2)("iterator"),i=n(16);e.exports=n(1).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){"use strict";var r=n(4),o=n(17);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},function(e,t,n){var r=n(16),o=n(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){var r=n(14);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){"use strict";var r=n(43),o=n(7),i=n(23),a=n(149),s=n(148),l=n(68),u=n(147),c=n(146);o(o.S+o.F*!n(144)(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,o,f,p=i(e),d="function"==typeof this?this:Array,h=arguments.length,m=h>1?arguments[1]:void 0,y=void 0!==m,g=0,v=c(p);if(y&&(m=r(m,h>2?arguments[2]:void 0,2)),void 0==v||d==Array&&s(v))for(n=new d(t=l(p.length));t>g;g++)u(n,g,y?m(p[g],g):p[g]);else for(f=v.call(p),n=new d;!(o=f.next()).done;g++)u(n,g,y?a(f,m,[o.value,g],!0):o.value);return n.length=g,n}})},function(e,t,n){n(72),n(150),e.exports=n(1).Array.from},function(e,t,n){e.exports={default:n(151),__esModule:!0}},function(e,t,n){"use strict";t.__esModule=!0;var r,o=n(152),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return(0,i.default)(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=h(n(153));t.default=function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),h=1;h<t;h++)n[h-1]=arguments[h];var m=e=o.default.apply(void 0,[{zIndex:s.default,isRtl:!1,userAgent:void 0},a.default,e].concat(n)),y=m.spacing,g=m.fontFamily,v=m.palette,b={spacing:y,fontFamily:g,palette:v};e=(0,o.default)({appBar:{color:v.primary1Color,textColor:v.alternateTextColor,height:y.desktopKeylineIncrement,titleFontWeight:p.default.fontWeightNormal,padding:y.desktopGutter},avatar:{color:v.canvasColor,backgroundColor:(0,i.emphasize)(v.canvasColor,.26)},badge:{color:v.alternateTextColor,textColor:v.textColor,primaryColor:v.primary1Color,primaryTextColor:v.alternateTextColor,secondaryColor:v.accent1Color,secondaryTextColor:v.alternateTextColor,fontWeight:p.default.fontWeightMedium},bottomNavigation:{backgroundColor:v.canvasColor,unselectedColor:(0,i.fade)(v.textColor,.54),selectedColor:v.primary1Color,height:56,unselectedFontSize:12,selectedFontSize:14},button:{height:36,minWidth:88,iconButtonSize:2*y.iconSize},card:{titleColor:(0,i.fade)(v.textColor,.87),subtitleColor:(0,i.fade)(v.textColor,.54),fontWeight:p.default.fontWeightMedium},cardMedia:{color:d.darkWhite,overlayContentBackground:d.lightBlack,titleColor:d.darkWhite,subtitleColor:d.lightWhite},cardText:{textColor:v.textColor},checkbox:{boxColor:v.textColor,checkedColor:v.primary1Color,requiredColor:v.primary1Color,disabledColor:v.disabledColor,labelColor:v.textColor,labelDisabledColor:v.disabledColor},chip:{backgroundColor:(0,i.emphasize)(v.canvasColor,.12),deleteIconColor:(0,i.fade)(v.textColor,.26),textColor:(0,i.fade)(v.textColor,.87),fontSize:14,fontWeight:p.default.fontWeightNormal,shadow:"0 1px 6px "+(0,i.fade)(v.shadowColor,.12)+",\n        0 1px 4px "+(0,i.fade)(v.shadowColor,.12)},datePicker:{color:v.primary1Color,textColor:v.alternateTextColor,calendarTextColor:v.textColor,selectColor:v.primary2Color,selectTextColor:v.alternateTextColor,calendarYearBackgroundColor:v.canvasColor,headerColor:v.pickerHeaderColor||v.primary1Color},dialog:{titleFontSize:22,bodyFontSize:16,bodyColor:(0,i.fade)(v.textColor,.6)},dropDownMenu:{accentColor:v.borderColor},enhancedButton:{tapHighlightColor:d.transparent},flatButton:{color:d.transparent,buttonFilterColor:"#999999",disabledTextColor:(0,i.fade)(v.textColor,.3),textColor:v.textColor,primaryTextColor:v.primary1Color,secondaryTextColor:v.accent1Color,fontSize:p.default.fontStyleButtonFontSize,fontWeight:p.default.fontWeightMedium},floatingActionButton:{buttonSize:56,miniSize:40,color:v.primary1Color,iconColor:v.alternateTextColor,secondaryColor:v.accent1Color,secondaryIconColor:v.alternateTextColor,disabledTextColor:v.disabledColor,disabledColor:(0,i.emphasize)(v.canvasColor,.12)},gridTile:{textColor:d.white},icon:{color:v.canvasColor,backgroundColor:v.primary1Color},inkBar:{backgroundColor:v.accent1Color},drawer:{width:4*y.desktopKeylineIncrement,color:v.canvasColor},listItem:{nestedLevelDepth:18,secondaryTextColor:v.secondaryTextColor,leftIconColor:d.grey600,rightIconColor:d.grey600},menu:{backgroundColor:v.canvasColor,containerBackgroundColor:v.canvasColor},menuItem:{dataHeight:32,height:48,hoverColor:(0,i.fade)(v.textColor,.1),padding:y.desktopGutter,selectedTextColor:v.accent1Color,rightIconDesktopFill:d.grey600},menuSubheader:{padding:y.desktopGutter,borderColor:v.borderColor,textColor:v.primary1Color},overlay:{backgroundColor:d.lightBlack},paper:{color:v.textColor,backgroundColor:v.canvasColor,zDepthShadows:[[1,6,.12,1,4,.12],[3,10,.16,3,10,.23],[10,30,.19,6,10,.23],[14,45,.25,10,18,.22],[19,60,.3,15,20,.22]].map(function(e){return"0 "+e[0]+"px "+e[1]+"px "+(0,i.fade)(v.shadowColor,e[2])+",\n         0 "+e[3]+"px "+e[4]+"px "+(0,i.fade)(v.shadowColor,e[5])})},radioButton:{borderColor:v.textColor,backgroundColor:v.alternateTextColor,checkedColor:v.primary1Color,requiredColor:v.primary1Color,disabledColor:v.disabledColor,size:24,labelColor:v.textColor,labelDisabledColor:v.disabledColor},raisedButton:{color:v.alternateTextColor,textColor:v.textColor,primaryColor:v.primary1Color,primaryTextColor:v.alternateTextColor,secondaryColor:v.accent1Color,secondaryTextColor:v.alternateTextColor,disabledColor:(0,i.darken)(v.alternateTextColor,.1),disabledTextColor:(0,i.fade)(v.textColor,.3),fontSize:p.default.fontStyleButtonFontSize,fontWeight:p.default.fontWeightMedium},refreshIndicator:{strokeColor:v.borderColor,loadingStrokeColor:v.primary1Color},ripple:{color:(0,i.fade)(v.textColor,.87)},slider:{trackSize:2,trackColor:v.primary3Color,trackColorSelected:v.accent3Color,handleSize:12,handleSizeDisabled:8,handleSizeActive:18,handleColorZero:v.primary3Color,handleFillColor:v.alternateTextColor,selectionColor:v.primary1Color,rippleColor:v.primary1Color},snackbar:{textColor:v.alternateTextColor,backgroundColor:v.textColor,actionColor:v.accent1Color},subheader:{color:(0,i.fade)(v.textColor,.54),fontWeight:p.default.fontWeightMedium},stepper:{backgroundColor:"transparent",hoverBackgroundColor:(0,i.fade)(d.black,.06),iconColor:v.primary1Color,hoveredIconColor:d.grey700,inactiveIconColor:d.grey500,textColor:(0,i.fade)(d.black,.87),disabledTextColor:(0,i.fade)(d.black,.26),connectorLineColor:d.grey400},svgIcon:{color:v.textColor},table:{backgroundColor:v.canvasColor},tableFooter:{borderColor:v.borderColor,textColor:v.accent3Color},tableHeader:{borderColor:v.borderColor},tableHeaderColumn:{textColor:v.accent3Color,height:56,spacing:24},tableRow:{hoverColor:v.accent2Color,stripeColor:(0,i.fade)((0,i.lighten)(v.primary1Color,.5),.4),selectedColor:v.borderColor,textColor:v.textColor,borderColor:v.borderColor,height:48},tableRowColumn:{height:48,spacing:24},tabs:{backgroundColor:v.primary1Color,textColor:(0,i.fade)(v.alternateTextColor,.7),selectedTextColor:v.alternateTextColor},textField:{textColor:v.textColor,hintColor:v.disabledColor,floatingLabelColor:v.disabledColor,disabledTextColor:v.disabledColor,errorColor:d.red500,focusColor:v.primary1Color,backgroundColor:"transparent",borderColor:v.borderColor},timePicker:{color:v.alternateTextColor,textColor:v.alternateTextColor,accentColor:v.primary1Color,clockColor:v.textColor,clockCircleColor:v.clockCircleColor,headerColor:v.pickerHeaderColor||v.primary1Color,selectColor:v.primary2Color,selectTextColor:v.alternateTextColor},toggle:{thumbOnColor:v.primary1Color,thumbOffColor:v.accent2Color,thumbDisabledColor:v.borderColor,thumbRequiredColor:v.primary1Color,trackOnColor:(0,i.fade)(v.primary1Color,.5),trackOffColor:v.primary3Color,trackDisabledColor:v.primary3Color,labelColor:v.textColor,labelDisabledColor:v.disabledColor,trackRequiredColor:(0,i.fade)(v.primary1Color,.5)},toolbar:{color:(0,i.fade)(v.textColor,.54),hoverColor:(0,i.fade)(v.textColor,.87),backgroundColor:(0,i.darken)(v.accent2Color,.05),height:56,titleFontSize:20,iconColor:(0,i.fade)(v.textColor,.4),separatorColor:(0,i.fade)(v.textColor,.175),menuHoverColor:(0,i.fade)(v.textColor,.1)},tooltip:{color:d.white,rippleBackgroundColor:d.grey700,opacity:.9}},e,{baseTheme:b,rawTheme:b});var k=[l.default,c.default,u.default].map(function(t){return t(e)}).filter(function(e){return e});return e.prepareStyles=f.default.apply(void 0,(0,r.default)(k)),e};var o=h(n(143)),i=n(63),a=h(n(142)),s=h(n(140)),l=h(n(139)),u=h(n(114)),c=h(n(113)),f=h(n(109)),p=h(n(108)),d=n(31);function h(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,i,a,s,l){if(r(t),!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,o,i,a,s,l],f=0;(u=new Error(t.replace(/%s/g,function(){return c[f++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";var r=n(47),o=n(156),i=n(155);e.exports=function(){function e(e,t,n,r,a,s){s!==i&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){e.exports=n(157)()},function(e,t,n){var r=n(7);r(r.S,"Object",{create:n(39)})},function(e,t,n){n(159);var r=n(1).Object;e.exports=function(e,t){return r.create(e,t)}},function(e,t,n){e.exports={default:n(160),__esModule:!0}},function(e,t,n){var r=n(13),o=n(14),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(43)(Function.call,n(65).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},function(e,t,n){var r=n(7);r(r.S,"Object",{setPrototypeOf:n(162).set})},function(e,t,n){n(163),e.exports=n(1).Object.setPrototypeOf},function(e,t,n){e.exports={default:n(164),__esModule:!0}},function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(165)),o=a(n(161)),i=a(n(73));function a(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(r.default?(0,r.default)(e,t):e.__proto__=t)}},function(e,t,n){n(34)("observable")},function(e,t,n){n(34)("asyncIterator")},function(e,t){},function(e,t,n){var r=n(12),o=n(66).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){var r=n(38);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(21),o=n(67),i=n(33);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,s=n(e),l=i.f,u=0;s.length>u;)l.call(e,a=s[u++])&&t.push(a);return t}},function(e,t,n){var r=n(22)("meta"),o=n(13),i=n(8),a=n(4).f,s=0,l=Object.isExtensible||function(){return!0},u=!n(18)(function(){return l(Object.preventExtensions({}))}),c=function(e){a(e,r,{value:{i:"O"+ ++s,w:{}}})},f=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!l(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!l(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return u&&f.NEED&&l(e)&&!i(e,r)&&c(e),e}}},function(e,t,n){"use strict";var r=n(5),o=n(8),i=n(6),a=n(7),s=n(70),l=n(173).KEY,u=n(18),c=n(44),f=n(36),p=n(22),d=n(2),h=n(35),m=n(34),y=n(172),g=n(171),v=n(14),b=n(13),k=n(12),x=n(42),C=n(17),w=n(39),_=n(170),S=n(65),T=n(4),P=n(21),O=S.f,E=T.f,A=_.f,M=r.Symbol,B=r.JSON,I=B&&B.stringify,F=d("_hidden"),N=d("toPrimitive"),R={}.propertyIsEnumerable,j=c("symbol-registry"),D=c("symbols"),W=c("op-symbols"),z=Object.prototype,L="function"==typeof M,U=r.QObject,H=!U||!U.prototype||!U.prototype.findChild,V=i&&u(function(){return 7!=w(E({},"a",{get:function(){return E(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=O(z,t);r&&delete z[t],E(e,t,n),r&&e!==z&&E(z,t,r)}:E,q=function(e){var t=D[e]=w(M.prototype);return t._k=e,t},G=L&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},K=function(e,t,n){return e===z&&K(W,t,n),v(e),t=x(t,!0),v(n),o(D,t)?(n.enumerable?(o(e,F)&&e[F][t]&&(e[F][t]=!1),n=w(n,{enumerable:C(0,!1)})):(o(e,F)||E(e,F,C(1,{})),e[F][t]=!0),V(e,t,n)):E(e,t,n)},$=function(e,t){v(e);for(var n,r=y(t=k(t)),o=0,i=r.length;i>o;)K(e,n=r[o++],t[n]);return e},X=function(e){var t=R.call(this,e=x(e,!0));return!(this===z&&o(D,e)&&!o(W,e))&&(!(t||!o(this,e)||!o(D,e)||o(this,F)&&this[F][e])||t)},Y=function(e,t){if(e=k(e),t=x(t,!0),e!==z||!o(D,t)||o(W,t)){var n=O(e,t);return!n||!o(D,t)||o(e,F)&&e[F][t]||(n.enumerable=!0),n}},Q=function(e){for(var t,n=A(k(e)),r=[],i=0;n.length>i;)o(D,t=n[i++])||t==F||t==l||r.push(t);return r},J=function(e){for(var t,n=e===z,r=A(n?W:k(e)),i=[],a=0;r.length>a;)!o(D,t=r[a++])||n&&!o(z,t)||i.push(D[t]);return i};L||(s((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=p(arguments.length>0?arguments[0]:void 0),t=function(n){this===z&&t.call(W,n),o(this,F)&&o(this[F],e)&&(this[F][e]=!1),V(this,e,C(1,n))};return i&&H&&V(z,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),S.f=Y,T.f=K,n(66).f=_.f=Q,n(33).f=X,n(67).f=J,i&&!n(40)&&s(z,"propertyIsEnumerable",X,!0),h.f=function(e){return q(d(e))}),a(a.G+a.W+a.F*!L,{Symbol:M});for(var Z="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Z.length>ee;)d(Z[ee++]);for(var te=P(d.store),ne=0;te.length>ne;)m(te[ne++]);a(a.S+a.F*!L,"Symbol",{for:function(e){return o(j,e+="")?j[e]:j[e]=M(e)},keyFor:function(e){if(!G(e))throw TypeError(e+" is not a symbol!");for(var t in j)if(j[t]===e)return t},useSetter:function(){H=!0},useSimple:function(){H=!1}}),a(a.S+a.F*!L,"Object",{create:function(e,t){return void 0===t?w(e):$(w(e),t)},defineProperty:K,defineProperties:$,getOwnPropertyDescriptor:Y,getOwnPropertyNames:Q,getOwnPropertySymbols:J}),B&&a(a.S+a.F*(!L||u(function(){var e=M();return"[null]"!=I([e])||"{}"!=I({a:e})||"{}"!=I(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!G(e))return g(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!G(t))return t}),r[1]=t,I.apply(B,r)}}),M.prototype[N]||n(15)(M.prototype,N,M.prototype.valueOf),f(M,"Symbol"),f(Math,"Math",!0),f(r.JSON,"JSON",!0)},function(e,t,n){n(174),n(169),n(168),n(167),e.exports=n(1).Symbol},function(e,t,n){e.exports={default:n(175),__esModule:!0}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t){e.exports=function(){}},function(e,t,n){"use strict";var r=n(178),o=n(177),i=n(16),a=n(12);e.exports=n(71)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t,n){n(179);for(var r=n(5),o=n(15),i=n(16),a=n(2)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),l=0;l<s.length;l++){var u=s[l],c=r[u],f=c&&c.prototype;f&&!f[a]&&o(f,a,u),i[u]=i.Array}},function(e,t,n){var r=n(5).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(41),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(12),o=n(68),i=n(182);e.exports=function(e){return function(t,n,a){var s,l=r(t),u=o(l.length),c=i(a,u);if(e&&n!=n){for(;u>c;)if((s=l[c++])!=s)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}}},function(e,t,n){var r=n(38);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(4),o=n(14),i=n(21);e.exports=n(6)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),s=a.length,l=0;s>l;)r.f(e,n=a[l++],t[n]);return e}},function(e,t,n){"use strict";var r=n(39),o=n(17),i=n(36),a={};n(15)(a,n(2)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(41),o=n(46);e.exports=function(e){return function(t,n){var i,a,s=String(o(t)),l=r(n),u=s.length;return l<0||l>=u?e?"":void 0:(i=s.charCodeAt(l))<55296||i>56319||l+1===u||(a=s.charCodeAt(l+1))<56320||a>57343?e?s.charAt(l):i:e?s.slice(l,l+2):a-56320+(i-55296<<10)+65536}}},function(e,t,n){n(72),n(180),e.exports=n(35).f("iterator")},function(e,t,n){e.exports={default:n(188),__esModule:!0}},function(e,t,n){"use strict";t.__esModule=!0;var r,o=n(73),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,i.default)(t))&&"function"!=typeof t?e:t}},function(e,t,n){var r=n(7);r(r.S+r.F*!n(6),"Object",{defineProperty:n(4).f})},function(e,t,n){n(191);var r=n(1).Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},function(e,t,n){e.exports={default:n(192),__esModule:!0}},function(e,t,n){"use strict";t.__esModule=!0;var r,o=n(193),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(23),o=n(78);n(77)("getPrototypeOf",function(){return function(e){return o(r(e))}})},function(e,t,n){n(196),e.exports=n(1).Object.getPrototypeOf},function(e,t,n){e.exports={default:n(197),__esModule:!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(n(198)),o=f(n(74)),i=f(n(194)),a=f(n(190)),s=f(n(166)),l=n(24),u=f(n(158)),c=f(n(154));function f(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(){return(0,o.default)(this,t),(0,a.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,s.default)(t,e),(0,i.default)(t,[{key:"getChildContext",value:function(){return{muiTheme:this.props.muiTheme||(0,c.default)()}}},{key:"render",value:function(){return this.props.children}}]),t}(l.Component);p.childContextTypes={muiTheme:u.default.object.isRequired},p.propTypes={},t.default=p},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(200);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(201);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!r.call(t,n[a])||!o(e[n[a]],t[n[a]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.3.1
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(24),o=n(205),i=n(80),a=n(47),s=n(204),l=n(203),u=n(202),c=n(79);function f(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}r||f("227");var p={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,i,a,s,l){(function(e,t,n,r,o,i,a,s,l){this._hasCaughtError=!1,this._caughtError=null;var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(p,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,s,l){if(p.invokeGuardedCallback.apply(this,arguments),p.hasCaughtError()){var u=p.clearCaughtError();p._hasRethrowError||(p._hasRethrowError=!0,p._rethrowError=u)}},rethrowCaughtError:function(){return function(){if(p._hasRethrowError){var e=p._rethrowError;throw p._rethrowError=null,p._hasRethrowError=!1,e}}.apply(p,arguments)},hasCaughtError:function(){return p._hasCaughtError},clearCaughtError:function(){if(p._hasCaughtError){var e=p._caughtError;return p._caughtError=null,p._hasCaughtError=!1,e}f("198")}};var d=null,h={};function m(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||f("96",e),!g[n])for(var r in t.extractEvents||f("97",e),g[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,s=r;v.hasOwnProperty(s)&&f("99",s),v[s]=i;var l=i.phasedRegistrationNames;if(l){for(o in l)l.hasOwnProperty(o)&&y(l[o],a,s);o=!0}else i.registrationName?(y(i.registrationName,a,s),o=!0):o=!1;o||f("98",r,e)}}}function y(e,t,n){b[e]&&f("100",e),b[e]=t,k[e]=t.eventTypes[n].dependencies}var g=[],v={},b={},k={};function x(e){d&&f("101"),d=Array.prototype.slice.call(e),m()}function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&f("102",t),h[t]=r,n=!0)}n&&m()}var w=Object.freeze({plugins:g,eventNameDispatchConfigs:v,registrationNameModules:b,registrationNameDependencies:k,possibleRegistrationNames:null,injectEventPluginOrder:x,injectEventPluginsByName:C}),_=null,S=null,T=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=T(r),p.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&f("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function E(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var A=null;function M(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function B(e){return M(e,!0)}function I(e){return M(e,!1)}var F={injectEventPluginOrder:x,injectEventPluginsByName:C};function N(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&f("231",t,typeof n),n)}function R(e,t){null!==e&&(A=O(A,e)),e=A,A=null,e&&(E(e,t?B:I),A&&f("95"),p.rethrowCaughtError())}function j(e,t,n,r){for(var o=null,i=0;i<g.length;i++){var a=g[i];a&&(a=a.extractEvents(e,t,n,r))&&(o=O(o,a))}R(o,!1)}var D=Object.freeze({injection:F,getListener:N,runEventsInBatch:R,runExtractedEventsInBatch:j}),W=Math.random().toString(36).slice(2),z="__reactInternalInstance$"+W,L="__reactEventHandlers$"+W;function U(e){if(e[z])return e[z];for(;!e[z];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[z]).tag||6===e.tag?e:null}function H(e){if(5===e.tag||6===e.tag)return e.stateNode;f("33")}function V(e){return e[L]||null}var q=Object.freeze({precacheFiberNode:function(e,t){t[z]=e},getClosestInstanceFromNode:U,getInstanceFromNode:function(e){return!(e=e[z])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:H,getFiberCurrentPropsFromNode:V,updateFiberProps:function(e,t){e[L]=t}});function G(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function K(e,t,n){for(var r=[];e;)r.push(e),e=G(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function $(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function X(e){e&&e.dispatchConfig.phasedRegistrationNames&&K(e._targetInst,$,e)}function Y(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;K(t=t?G(t):null,$,e)}}function Q(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function J(e){e&&e.dispatchConfig.registrationName&&Q(e._targetInst,null,e)}function Z(e){E(e,X)}function ee(e,t,n,r){if(n&&r)e:{for(var o=n,i=r,a=0,s=o;s;s=G(s))a++;s=0;for(var l=i;l;l=G(l))s++;for(;0<a-s;)o=G(o),a--;for(;0<s-a;)i=G(i),s--;for(;a--;){if(o===i||o===i.alternate)break e;o=G(o),i=G(i)}o=null}else o=null;for(i=o,o=[];n&&n!==i&&(null===(a=n.alternate)||a!==i);)o.push(n),n=G(n);for(n=[];r&&r!==i&&(null===(a=r.alternate)||a!==i);)n.push(r),r=G(r);for(r=0;r<o.length;r++)Q(o[r],"bubbled",e);for(e=n.length;0<e--;)Q(n[e],"captured",t)}var te=Object.freeze({accumulateTwoPhaseDispatches:Z,accumulateTwoPhaseDispatchesSkipTarget:function(e){E(e,Y)},accumulateEnterLeaveDispatches:ee,accumulateDirectDispatches:function(e){E(e,J)}}),ne=null;function re(){return!ne&&o.canUseDOM&&(ne="textContent"in document.documentElement?"textContent":"innerText"),ne}var oe={_root:null,_startText:null,_fallbackText:null};function ie(){if(oe._fallbackText)return oe._fallbackText;var e,t,n=oe._startText,r=n.length,o=ae(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe._fallbackText=o.slice(e,1<t?1-t:void 0),oe._fallbackText}function ae(){return"value"in oe._root?oe._root.value:oe._root[re()]}var se="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),le={type:null,target:null,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?a.thatReturnsTrue:a.thatReturnsFalse,this.isPropagationStopped=a.thatReturnsFalse,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function fe(e){e instanceof this||f("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function pe(e){e.eventPool=[],e.getPooled=ce,e.release=fe}i(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=a.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=a.thatReturnsTrue)},persist:function(){this.isPersistent=a.thatReturnsTrue},isPersistent:a.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<se.length;t++)this[se[t]]=null}}),ue.Interface=le,ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,pe(n),n},pe(ue);var de=ue.extend({data:null}),he=ue.extend({data:null}),me=[9,13,27,32],ye=o.canUseDOM&&"CompositionEvent"in window,ge=null;o.canUseDOM&&"documentMode"in document&&(ge=document.documentMode);var ve=o.canUseDOM&&"TextEvent"in window&&!ge,be=o.canUseDOM&&(!ye||ge&&8<ge&&11>=ge),ke=String.fromCharCode(32),xe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Ce=!1;function we(e,t){switch(e){case"topKeyUp":return-1!==me.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function _e(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Se=!1;var Te={eventTypes:xe,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(ye)e:{switch(e){case"topCompositionStart":o=xe.compositionStart;break e;case"topCompositionEnd":o=xe.compositionEnd;break e;case"topCompositionUpdate":o=xe.compositionUpdate;break e}o=void 0}else Se?we(e,n)&&(o=xe.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(o=xe.compositionStart);return o?(be&&(Se||o!==xe.compositionStart?o===xe.compositionEnd&&Se&&(i=ie()):(oe._root=r,oe._startText=ae(),Se=!0)),o=de.getPooled(o,t,n,r),i?o.data=i:null!==(i=_e(n))&&(o.data=i),Z(o),i=o):i=null,(e=ve?function(e,t){switch(e){case"topCompositionEnd":return _e(t);case"topKeyPress":return 32!==t.which?null:(Ce=!0,ke);case"topTextInput":return(e=t.data)===ke&&Ce?null:e;default:return null}}(e,n):function(e,t){if(Se)return"topCompositionEnd"===e||!ye&&we(e,t)?(e=ie(),oe._root=null,oe._startText=null,oe._fallbackText=null,Se=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return be?null:t.data;default:return null}}(e,n))?((t=he.getPooled(xe.beforeInput,t,n,r)).data=e,Z(t)):t=null,null===i?t:null===t?i:[i,t]}},Pe=null,Oe=null,Ee=null;function Ae(e){if(e=S(e)){Pe&&"function"==typeof Pe.restoreControlledState||f("194");var t=_(e.stateNode);Pe.restoreControlledState(e.stateNode,e.type,t)}}var Me={injectFiberControlledHostComponent:function(e){Pe=e}};function Be(e){Oe?Ee?Ee.push(e):Ee=[e]:Oe=e}function Ie(){return null!==Oe||null!==Ee}function Fe(){if(Oe){var e=Oe,t=Ee;if(Ee=Oe=null,Ae(e),t)for(e=0;e<t.length;e++)Ae(t[e])}}var Ne=Object.freeze({injection:Me,enqueueStateRestore:Be,needsStateRestore:Ie,restoreStateIfNeeded:Fe});function Re(e,t){return e(t)}function je(e,t,n){return e(t,n)}function De(){}var We=!1;function ze(e,t){if(We)return e(t);We=!0;try{return Re(e,t)}finally{We=!1,Ie()&&(De(),Fe())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function He(e){return(e=e.target||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ve(e,t){return!(!o.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function qe(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ge(e){e._valueTracker||(e._valueTracker=function(e){var t=qe(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}(e))}function Ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=qe(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var $e=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Xe="function"==typeof Symbol&&Symbol.for,Ye=Xe?Symbol.for("react.element"):60103,Qe=Xe?Symbol.for("react.call"):60104,Je=Xe?Symbol.for("react.return"):60105,Ze=Xe?Symbol.for("react.portal"):60106,et=Xe?Symbol.for("react.fragment"):60107,tt=Xe?Symbol.for("react.strict_mode"):60108,nt=Xe?Symbol.for("react.provider"):60109,rt=Xe?Symbol.for("react.context"):60110,ot=Xe?Symbol.for("react.async_mode"):60111,it=Xe?Symbol.for("react.forward_ref"):60112,at="function"==typeof Symbol&&Symbol.iterator;function st(e){return null===e||void 0===e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if("function"==typeof(e=e.type))return e.displayName||e.name;if("string"==typeof e)return e;switch(e){case et:return"ReactFragment";case Ze:return"ReactPortal";case Qe:return"ReactCall";case Je:return"ReactReturn"}return null}function ut(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=lt(e),i=null;n&&(i=lt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":i?" (created by "+i+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-\:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function gt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!pt.hasOwnProperty(e)||!ft.hasOwnProperty(e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function vt(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function bt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=_t(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function kt(e,t){null!=(t=t.checked)&&gt(e,"checked",t,!1)}function xt(e,t){kt(e,t);var n=_t(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?wt(e,t.type,n):t.hasOwnProperty("defaultValue")&&wt(e,t.type,_t(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ct(e,t){(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue"))&&(""===e.value&&(e.value=""+e._wrapperState.initialValue),e.defaultValue=""+e._wrapperState.initialValue),""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function wt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _t(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),ht.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};function Tt(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",Be(n),Z(e),e}var Pt=null,Ot=null;function Et(e){R(e,!1)}function At(e){if(Ke(H(e)))return e}function Mt(e,t){if("topChange"===e)return t}var Bt=!1;function It(){Pt&&(Pt.detachEvent("onpropertychange",Ft),Ot=Pt=null)}function Ft(e){"value"===e.propertyName&&At(Ot)&&ze(Et,e=Tt(Ot,e,He(e)))}function Nt(e,t,n){"topFocus"===e?(It(),Ot=n,(Pt=t).attachEvent("onpropertychange",Ft)):"topBlur"===e&&It()}function Rt(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return At(Ot)}function jt(e,t){if("topClick"===e)return At(t)}function Dt(e,t){if("topInput"===e||"topChange"===e)return At(t)}o.canUseDOM&&(Bt=Ve("input")&&(!document.documentMode||9<document.documentMode));var Wt={eventTypes:St,_isInputEventSupported:Bt,extractEvents:function(e,t,n,r){var o=t?H(t):window,i=void 0,a=void 0,s=o.nodeName&&o.nodeName.toLowerCase();if("select"===s||"input"===s&&"file"===o.type?i=Mt:Ue(o)?Bt?i=Dt:(i=Rt,a=Nt):!(s=o.nodeName)||"input"!==s.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type||(i=jt),i&&(i=i(e,t)))return Tt(i,n,r);a&&a(e,o,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&wt(o,"number",o.value)}},zt=ue.extend({view:null,detail:null}),Lt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ut(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Lt[e])&&!!t[e]}function Ht(){return Ut}var Vt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ht,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),qt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Gt={eventTypes:qt,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?U(t):null):e=null,e===t)return null;var i=null==e?o:H(e);o=null==t?o:H(t);var a=Vt.getPooled(qt.mouseLeave,e,n,r);return a.type="mouseleave",a.target=i,a.relatedTarget=o,(n=Vt.getPooled(qt.mouseEnter,t,n,r)).type="mouseenter",n.target=o,n.relatedTarget=i,ee(a,n,e,t),[a,n]}};function Kt(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function $t(e){return!!(e=e._reactInternalFiber)&&2===Kt(e)}function Xt(e){2!==Kt(e)&&f("188")}function Yt(e){var t=e.alternate;if(!t)return 3===(t=Kt(e))&&f("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return Xt(o),e;if(a===r)return Xt(o),t;a=a.sibling}f("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var s=o.child;s;){if(s===n){a=!0,n=o,r=i;break}if(s===r){a=!0,r=o,n=i;break}s=s.sibling}if(!a){for(s=i.child;s;){if(s===n){a=!0,n=i,r=o;break}if(s===r){a=!0,r=i,n=o;break}s=s.sibling}a||f("189")}}n.alternate!==r&&f("190")}return 3!==n.tag&&f("188"),n.stateNode.current===n?e:t}var Qt=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jt=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Zt=zt.extend({relatedTarget:null});function en(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var tn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},nn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rn=zt.extend({key:function(e){if(e.key){var t=tn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=en(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?nn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ht,charCode:function(e){return"keypress"===e.type?en(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?en(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),on=Vt.extend({dataTransfer:null}),an=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ht}),sn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ln=Vt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),un={},cn={};function fn(e,t){var n=e[0].toUpperCase()+e.slice(1),r="on"+n;t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n="top"+n],isInteractive:t},un[e]=t,cn[n]=t}"blur cancel click close contextMenu copy cut doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play rateChange reset seeked submit touchCancel touchEnd touchStart volumeChange".split(" ").forEach(function(e){fn(e,!0)}),"abort animationEnd animationIteration animationStart canPlay canPlayThrough drag dragEnter dragExit dragLeave dragOver durationChange emptied encrypted ended error load loadedData loadedMetadata loadStart mouseMove mouseOut mouseOver playing progress scroll seeking stalled suspend timeUpdate toggle touchMove transitionEnd waiting wheel".split(" ").forEach(function(e){fn(e,!1)});var pn={eventTypes:un,isInteractiveTopLevelEventType:function(e){return void 0!==(e=cn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=cn[e];if(!o)return null;switch(e){case"topKeyPress":if(0===en(n))return null;case"topKeyDown":case"topKeyUp":e=rn;break;case"topBlur":case"topFocus":e=Zt;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":e=Vt;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":e=on;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":e=an;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":e=Qt;break;case"topTransitionEnd":e=sn;break;case"topScroll":e=zt;break;case"topWheel":e=ln;break;case"topCopy":case"topCut":case"topPaste":e=Jt;break;default:e=ue}return Z(t=e.getPooled(o,t,n,r)),t}},dn=pn.isInteractiveTopLevelEventType,hn=[];function mn(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=U(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],j(e.topLevelType,t,e.nativeEvent,He(e.nativeEvent))}var yn=!0;function gn(e){yn=!!e}function vn(e,t,n){if(!n)return null;e=(dn(e)?kn:xn).bind(null,e),n.addEventListener(t,e,!1)}function bn(e,t,n){if(!n)return null;e=(dn(e)?kn:xn).bind(null,e),n.addEventListener(t,e,!0)}function kn(e,t){je(xn,e,t)}function xn(e,t){if(yn){var n=He(t);if(null!==(n=U(n))&&"number"==typeof n.tag&&2!==Kt(n)&&(n=null),hn.length){var r=hn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{ze(mn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>hn.length&&hn.push(e)}}}var Cn=Object.freeze({get _enabled(){return yn},setEnabled:gn,isEnabled:function(){return yn},trapBubbledEvent:vn,trapCapturedEvent:bn,dispatchEvent:xn});function wn(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var _n={animationend:wn("Animation","AnimationEnd"),animationiteration:wn("Animation","AnimationIteration"),animationstart:wn("Animation","AnimationStart"),transitionend:wn("Transition","TransitionEnd")},Sn={},Tn={};function Pn(e){if(Sn[e])return Sn[e];if(!_n[e])return e;var t,n=_n[e];for(t in n)if(n.hasOwnProperty(t)&&t in Tn)return Sn[e]=n[t];return e}o.canUseDOM&&(Tn=document.createElement("div").style,"AnimationEvent"in window||(delete _n.animationend.animation,delete _n.animationiteration.animation,delete _n.animationstart.animation),"TransitionEvent"in window||delete _n.transitionend.transition);var On={topAnimationEnd:Pn("animationend"),topAnimationIteration:Pn("animationiteration"),topAnimationStart:Pn("animationstart"),topBlur:"blur",topCancel:"cancel",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoad:"load",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topScroll:"scroll",topSelectionChange:"selectionchange",topTextInput:"textInput",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:Pn("transitionend"),topWheel:"wheel"},En={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},An={},Mn=0,Bn="_reactListenersID"+(""+Math.random()).slice(2);function In(e){return Object.prototype.hasOwnProperty.call(e,Bn)||(e[Bn]=Mn++,An[e[Bn]]={}),An[e[Bn]]}function Fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Nn(e,t){var n,r=Fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Fn(r)}}function Rn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var jn=o.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Dn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},Wn=null,zn=null,Ln=null,Un=!1;function Hn(e,t){if(Un||null==Wn||Wn!==s())return null;var n=Wn;return"selectionStart"in n&&Rn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Ln&&l(Ln,n)?null:(Ln=n,(e=ue.getPooled(Dn.select,zn,e,t)).type="select",e.target=Wn,Z(e),e)}var Vn={eventTypes:Dn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=In(i),o=k.onSelect;for(var a=0;a<o.length;a++){var s=o[a];if(!i.hasOwnProperty(s)||!i[s]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?H(t):window,e){case"topFocus":(Ue(i)||"true"===i.contentEditable)&&(Wn=i,zn=t,Ln=null);break;case"topBlur":Ln=zn=Wn=null;break;case"topMouseDown":Un=!0;break;case"topContextMenu":case"topMouseUp":return Un=!1,Hn(n,r);case"topSelectionChange":if(jn)break;case"topKeyDown":case"topKeyUp":return Hn(n,r)}return null}};function qn(e,t,n,r){this.tag=e,this.key=n,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function Gn(e,t,n){var r=e.alternate;return null===r?((r=new qn(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Kn(e,t,n){var r=e.type,o=e.key;e=e.props;var i=void 0;if("function"==typeof r)i=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)i=5;else switch(r){case et:return $n(e.children,t,n,o);case ot:i=11,t|=3;break;case tt:i=11,t|=2;break;case Qe:i=7;break;case Je:i=9;break;default:if("object"==typeof r&&null!==r)switch(r.$$typeof){case nt:i=13;break;case rt:i=12;break;case it:i=14;break;default:if("number"==typeof r.tag)return(t=r).pendingProps=e,t.expirationTime=n,t;f("130",null==r?r:typeof r,"")}else f("130",null==r?r:typeof r,"")}return(t=new qn(i,e,o,t)).type=r,t.expirationTime=n,t}function $n(e,t,n,r){return(e=new qn(10,e,r,t)).expirationTime=n,e}function Xn(e,t,n){return(e=new qn(6,e,null,t)).expirationTime=n,e}function Yn(e,t,n){return(t=new qn(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}F.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=q.getFiberCurrentPropsFromNode,S=q.getInstanceFromNode,T=q.getNodeFromInstance,F.injectEventPluginsByName({SimpleEventPlugin:pn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:Wt,SelectEventPlugin:Vn,BeforeInputEventPlugin:Te});var Qn=null,Jn=null;function Zn(e){return function(t){try{return e(t)}catch(e){}}}function er(e){"function"==typeof Qn&&Qn(e)}function tr(e){"function"==typeof Jn&&Jn(e)}function nr(e){return{baseState:e,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1,capturedValues:null}}function rr(e,t){null===e.last?e.first=e.last=t:(e.last.next=t,e.last=t),(0===e.expirationTime||e.expirationTime>t.expirationTime)&&(e.expirationTime=t.expirationTime)}new Set;var or=void 0,ir=void 0;function ar(e){or=ir=null;var t=e.alternate,n=e.updateQueue;null===n&&(n=e.updateQueue=nr(null)),null!==t?null===(e=t.updateQueue)&&(e=t.updateQueue=nr(null)):e=null,or=n,ir=e!==n?e:null}function sr(e,t){ar(e),e=or;var n=ir;null===n?rr(e,t):null===e.last||null===n.last?(rr(e,t),rr(n,t)):(rr(e,t),n.last=t)}function lr(e,t,n,r){return"function"==typeof(e=e.partialState)?e.call(t,n,r):e}function ur(e,t,n,r,o,a){null!==e&&e.updateQueue===n&&(n=t.updateQueue={baseState:n.baseState,expirationTime:n.expirationTime,first:n.first,last:n.last,isInitialized:n.isInitialized,capturedValues:n.capturedValues,callbackList:null,hasForceUpdate:!1}),n.expirationTime=0,n.isInitialized?e=n.baseState:(e=n.baseState=t.memoizedState,n.isInitialized=!0);for(var s=!0,l=n.first,u=!1;null!==l;){var c=l.expirationTime;if(c>a){var f=n.expirationTime;(0===f||f>c)&&(n.expirationTime=c),u||(u=!0,n.baseState=e)}else u||(n.first=l.next,null===n.first&&(n.last=null)),l.isReplace?(e=lr(l,r,e,o),s=!0):(c=lr(l,r,e,o))&&(e=s?i({},e,c):i(e,c),s=!1),l.isForced&&(n.hasForceUpdate=!0),null!==l.callback&&(null===(c=n.callbackList)&&(c=n.callbackList=[]),c.push(l)),null!==l.capturedValue&&(null===(c=n.capturedValues)?n.capturedValues=[l.capturedValue]:c.push(l.capturedValue));l=l.next}return null!==n.callbackList?t.effectTag|=32:null!==n.first||n.hasForceUpdate||null!==n.capturedValues||(t.updateQueue=null),u||(n.baseState=e),e}function cr(e,t){var n=e.callbackList;if(null!==n)for(e.callbackList=null,e=0;e<n.length;e++){var r=n[e],o=r.callback;r.callback=null,"function"!=typeof o&&f("191",o),o.call(t)}}var fr=Array.isArray;function pr(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&f("110"),r=n.stateNode),r||f("147",e);var o=""+e;return null!==t&&null!==t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===c?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&f("148"),n._owner||f("254",e)}return e}function dr(e,t){"textarea"!==e.type&&f("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function hr(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Gn(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Xn(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function l(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=pr(e,t,n),r.return=e,r):((r=Kn(n,e.mode,r)).ref=pr(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Yn(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function c(e,t,n,r,i){return null===t||10!==t.tag?((t=$n(n,e.mode,r,i)).return=e,t):((t=o(t,n,r)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Xn(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=Kn(t,e.mode,n)).ref=pr(e,null,t),n.return=e,n;case Ze:return(t=Yn(t,e.mode,n)).return=e,t}if(fr(t)||st(t))return(t=$n(t,e.mode,n,null)).return=e,t;dr(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===et?c(e,t,n.props.children,r,o):l(e,t,n,r):null;case Ze:return n.key===o?u(e,t,n,r):null}if(fr(n)||st(n))return null!==o?null:c(e,t,n,r,null);dr(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===et?c(t,e,r.props.children,o,r.key):l(t,e,r,o);case Ze:return u(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fr(r)||st(r))return c(t,e=e.get(n)||null,r,o,null);dr(t,r)}return null}function m(o,a,s,l){for(var u=null,c=null,f=a,m=a=0,y=null;null!==f&&m<s.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var g=d(o,f,s[m],l);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),a=i(g,a,m),null===c?u=g:c.sibling=g,c=g,f=y}if(m===s.length)return n(o,f),u;if(null===f){for(;m<s.length;m++)(f=p(o,s[m],l))&&(a=i(f,a,m),null===c?u=f:c.sibling=f,c=f);return u}for(f=r(o,f);m<s.length;m++)(y=h(f,o,m,s[m],l))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=i(y,a,m),null===c?u=y:c.sibling=y,c=y);return e&&f.forEach(function(e){return t(o,e)}),u}function y(o,a,s,l){var u=st(s);"function"!=typeof u&&f("150"),null==(s=u.call(s))&&f("151");for(var c=u=null,m=a,y=a=0,g=null,v=s.next();null!==m&&!v.done;y++,v=s.next()){m.index>y?(g=m,m=null):g=m.sibling;var b=d(o,m,v.value,l);if(null===b){m||(m=g);break}e&&m&&null===b.alternate&&t(o,m),a=i(b,a,y),null===c?u=b:c.sibling=b,c=b,m=g}if(v.done)return n(o,m),u;if(null===m){for(;!v.done;y++,v=s.next())null!==(v=p(o,v.value,l))&&(a=i(v,a,y),null===c?u=v:c.sibling=v,c=v);return u}for(m=r(o,m);!v.done;y++,v=s.next())null!==(v=h(m,o,y,v.value,l))&&(e&&null!==v.alternate&&m.delete(null===v.key?y:v.key),a=i(v,a,y),null===c?u=v:c.sibling=v,c=v);return e&&m.forEach(function(e){return t(o,e)}),u}return function(e,r,i,s){"object"==typeof i&&null!==i&&i.type===et&&null===i.key&&(i=i.props.children);var l="object"==typeof i&&null!==i;if(l)switch(i.$$typeof){case Ye:e:{var u=i.key;for(l=r;null!==l;){if(l.key===u){if(10===l.tag?i.type===et:l.type===i.type){n(e,l.sibling),(r=o(l,i.type===et?i.props.children:i.props,s)).ref=pr(e,l,i),r.return=e,e=r;break e}n(e,l);break}t(e,l),l=l.sibling}i.type===et?((r=$n(i.props.children,e.mode,s,i.key)).return=e,e=r):((s=Kn(i,e.mode,s)).ref=pr(e,r,i),s.return=e,e=s)}return a(e);case Ze:e:{for(l=i.key;null!==r;){if(r.key===l){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[],s)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Yn(i,e.mode,s)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),r=o(r,i,s)):(n(e,r),r=Xn(i,e.mode,s)),r.return=e,a(e=r);if(fr(i))return m(e,r,i,s);if(st(i))return y(e,r,i,s);if(l&&dr(e,i),void 0===i)switch(e.tag){case 2:case 1:f("152",(s=e.type).displayName||s.name||"Component")}return n(e,r)}}var mr=hr(!0),yr=hr(!1);function gr(e,t,n,r,o,a,s){function u(e,t,n){p(e,t,n,t.expirationTime)}function p(e,t,n,r){t.child=null===e?yr(t,null,n,r):mr(t,e.child,n,r)}function d(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function h(e,t,n,r,o,i){if(d(e,t),!n&&!o)return r&&O(t,!1),g(e,t);n=t.stateNode,$e.current=t;var a=o?null:n.render();return t.effectTag|=1,o&&(p(e,t,null,i),t.child=null),p(e,t,a,i),t.memoizedState=n.state,t.memoizedProps=n.props,r&&O(t,!0),t.child}function m(e){var t=e.stateNode;t.pendingContext?P(e,t.pendingContext,t.pendingContext!==t.context):t.context&&P(e,t.context,!1),x(e,t.containerInfo)}function y(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var i=0|o.stateNode;if(o.type===t&&0!=(i&n)){for(i=o;null!==i;){var a=i.alternate;if(0===i.expirationTime||i.expirationTime>r)i.expirationTime=r,null!==a&&(0===a.expirationTime||a.expirationTime>r)&&(a.expirationTime=r);else{if(null===a||!(0===a.expirationTime||a.expirationTime>r))break;a.expirationTime=r}i=i.return}i=null}else i=o.child;break;case 13:i=o.type===e.type?null:o.child;break;default:i=o.child}if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===e){i=null;break}if(null!==(o=i.sibling)){i=o;break}i=i.return}o=i}}function g(e,t){if(null!==e&&t.child!==e.child&&f("153"),null!==t.child){var n=Gn(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Gn(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}var v=e.shouldSetTextContent,b=e.shouldDeprioritizeSubtree,k=t.pushHostContext,x=t.pushHostContainer,C=r.pushProvider,w=n.getMaskedContext,_=n.getUnmaskedContext,S=n.hasContextChanged,T=n.pushContextProvider,P=n.pushTopLevelContextObject,O=n.invalidateContextProvider,E=o.enterHydrationState,A=o.resetHydrationState,M=o.tryToClaimNextHydratableInstance,B=(e=function(e,t,n,r,o){function a(e,t,n,r,o,i){if(null===t||null!==e.updateQueue&&e.updateQueue.hasForceUpdate)return!0;var a=e.stateNode;return e=e.type,"function"==typeof a.shouldComponentUpdate?a.shouldComponentUpdate(n,o,i):!(e.prototype&&e.prototype.isPureReactComponent&&l(t,n)&&l(r,o))}function s(e,t){t.updater=g,e.stateNode=t,t._reactInternalFiber=e}function u(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&g.enqueueReplaceState(t,t.state,null)}function f(e,t,n,r){if("function"==typeof(e=e.type).getDerivedStateFromProps)return e.getDerivedStateFromProps.call(null,n,r)}var p=e.cacheContext,d=e.getMaskedContext,h=e.getUnmaskedContext,m=e.isContextConsumer,y=e.hasContextChanged,g={isMounted:$t,enqueueSetState:function(e,r,o){e=e._reactInternalFiber,o=void 0===o?null:o;var i=n(e);sr(e,{expirationTime:i,partialState:r,callback:o,isReplace:!1,isForced:!1,capturedValue:null,next:null}),t(e,i)},enqueueReplaceState:function(e,r,o){e=e._reactInternalFiber,o=void 0===o?null:o;var i=n(e);sr(e,{expirationTime:i,partialState:r,callback:o,isReplace:!0,isForced:!1,capturedValue:null,next:null}),t(e,i)},enqueueForceUpdate:function(e,r){e=e._reactInternalFiber,r=void 0===r?null:r;var o=n(e);sr(e,{expirationTime:o,partialState:null,callback:r,isReplace:!1,isForced:!0,capturedValue:null,next:null}),t(e,o)}};return{adoptClassInstance:s,callGetDerivedStateFromProps:f,constructClassInstance:function(e,t){var n=e.type,r=h(e),o=m(e),a=o?d(e,r):c,l=null!==(n=new n(t,a)).state&&void 0!==n.state?n.state:null;return s(e,n),e.memoizedState=l,null!==(t=f(e,0,t,l))&&void 0!==t&&(e.memoizedState=i({},e.memoizedState,t)),o&&p(e,r,a),n},mountClassInstance:function(e,t){var n=e.type,r=e.alternate,o=e.stateNode,i=e.pendingProps,a=h(e);o.props=i,o.state=e.memoizedState,o.refs=c,o.context=d(e,a),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&g.enqueueReplaceState(o,o.state,null),null!==(n=e.updateQueue)&&(o.state=ur(r,e,n,o,i,t))),"function"==typeof o.componentDidMount&&(e.effectTag|=4)},resumeMountClassInstance:function(e,t){var n=e.type,s=e.stateNode;s.props=e.memoizedProps,s.state=e.memoizedState;var l=e.memoizedProps,c=e.pendingProps,p=s.context,m=h(e);m=d(e,m),(n="function"==typeof n.getDerivedStateFromProps||"function"==typeof s.getSnapshotBeforeUpdate)||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(l!==c||p!==m)&&u(e,s,c,m),p=e.memoizedState,t=null!==e.updateQueue?ur(null,e,e.updateQueue,s,c,t):p;var g=void 0;if(l!==c&&(g=f(e,0,c,t)),null!==g&&void 0!==g){t=null===t||void 0===t?g:i({},t,g);var v=e.updateQueue;null!==v&&(v.baseState=i({},v.baseState,g))}return l!==c||p!==t||y()||null!==e.updateQueue&&e.updateQueue.hasForceUpdate?((l=a(e,l,c,p,t,m))?(n||"function"!=typeof s.UNSAFE_componentWillMount&&"function"!=typeof s.componentWillMount||("function"==typeof s.componentWillMount&&s.componentWillMount(),"function"==typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"==typeof s.componentDidMount&&(e.effectTag|=4)):("function"==typeof s.componentDidMount&&(e.effectTag|=4),r(e,c),o(e,t)),s.props=c,s.state=t,s.context=m,l):("function"==typeof s.componentDidMount&&(e.effectTag|=4),!1)},updateClassInstance:function(e,t,n){var s=t.type,l=t.stateNode;l.props=t.memoizedProps,l.state=t.memoizedState;var c=t.memoizedProps,p=t.pendingProps,m=l.context,g=h(t);g=d(t,g),(s="function"==typeof s.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(c!==p||m!==g)&&u(t,l,p,g),m=t.memoizedState,n=null!==t.updateQueue?ur(e,t,t.updateQueue,l,p,n):m;var v=void 0;if(c!==p&&(v=f(t,0,p,n)),null!==v&&void 0!==v){n=null===n||void 0===n?v:i({},n,v);var b=t.updateQueue;null!==b&&(b.baseState=i({},b.baseState,v))}return c!==p||m!==n||y()||null!==t.updateQueue&&t.updateQueue.hasForceUpdate?((v=a(t,c,p,m,n,g))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(p,n,g),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(p,n,g)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=2048)):("function"!=typeof l.componentDidUpdate||c===e.memoizedProps&&m===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||c===e.memoizedProps&&m===e.memoizedState||(t.effectTag|=2048),r(t,p),o(t,n)),l.props=p,l.state=n,l.context=g,v):("function"!=typeof l.componentDidUpdate||c===e.memoizedProps&&m===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||c===e.memoizedProps&&m===e.memoizedState||(t.effectTag|=2048),!1)}}}(n,a,s,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t})).adoptClassInstance,I=e.callGetDerivedStateFromProps,F=e.constructClassInstance,N=e.mountClassInstance,R=e.resumeMountClassInstance,j=e.updateClassInstance;return{beginWork:function(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:m(t);break;case 2:T(t);break;case 4:x(t,t.stateNode.containerInfo);break;case 13:C(t)}return null}switch(t.tag){case 0:null!==e&&f("155");var r=t.type,o=t.pendingProps,a=_(t);return r=r(o,a=w(t,a)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(a=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof a.getDerivedStateFromProps&&(null!==(o=I(t,r,o,t.memoizedState))&&void 0!==o&&(t.memoizedState=i({},t.memoizedState,o))),o=T(t),B(t,r),N(t,n),e=h(e,t,!0,o,!1,n)):(t.tag=1,u(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,S()||t.memoizedProps!==n?(r=_(t),o=o(n,r=w(t,r)),t.effectTag|=1,u(e,t,o),t.memoizedProps=n,e=t.child):e=g(e,t),e;case 2:o=T(t),null===e?null===t.stateNode?(F(t,t.pendingProps),N(t,n),r=!0):r=R(t,n):r=j(e,t,n),a=!1;var s=t.updateQueue;return null!==s&&null!==s.capturedValues&&(a=r=!0),h(e,t,r,o,a,n);case 3:e:if(m(t),r=t.updateQueue,null!==r){if(a=t.memoizedState,o=ur(e,t,r,null,null,n),t.memoizedState=o,null!==(r=t.updateQueue)&&null!==r.capturedValues)r=null;else{if(a===o){A(),e=g(e,t);break e}r=o.element}a=t.stateNode,(null===e||null===e.child)&&a.hydrate&&E(t)?(t.effectTag|=2,t.child=yr(t,null,r,n)):(A(),u(e,t,r)),t.memoizedState=o,e=t.child}else A(),e=g(e,t);return e;case 5:return k(t),null===e&&M(t),o=t.type,s=t.memoizedProps,r=t.pendingProps,a=null!==e?e.memoizedProps:null,S()||s!==r||((s=1&t.mode&&b(o,r))&&(t.expirationTime=1073741823),s&&1073741823===n)?(s=r.children,v(o,r)?s=null:a&&v(o,a)&&(t.effectTag|=16),d(e,t),1073741823!==n&&1&t.mode&&b(o,r)?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(u(e,t,s),t.memoizedProps=r,e=t.child)):e=g(e,t),e;case 6:return null===e&&M(t),t.memoizedProps=t.pendingProps,null;case 8:t.tag=7;case 7:return o=t.pendingProps,S()||t.memoizedProps!==o||(o=t.memoizedProps),r=o.children,t.stateNode=null===e?yr(t,t.stateNode,r,n):mr(t,e.stateNode,r,n),t.memoizedProps=o,t.stateNode;case 9:return null;case 4:return x(t,t.stateNode.containerInfo),o=t.pendingProps,S()||t.memoizedProps!==o?(null===e?t.child=mr(t,null,o,n):u(e,t,o),t.memoizedProps=o,e=t.child):e=g(e,t),e;case 14:return u(e,t,n=(n=t.type.render)(t.pendingProps,t.ref)),t.memoizedProps=n,t.child;case 10:return n=t.pendingProps,S()||t.memoizedProps!==n?(u(e,t,n),t.memoizedProps=n,e=t.child):e=g(e,t),e;case 11:return n=t.pendingProps.children,S()||null!==n&&t.memoizedProps!==n?(u(e,t,n),t.memoizedProps=n,e=t.child):e=g(e,t),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,i=t.memoizedProps;if(!S()&&i===o)return t.stateNode=0,C(t),g(e,t);var a=o.value;if(t.memoizedProps=o,null===i)a=1073741823;else if(i.value===o.value){if(i.children===o.children)return t.stateNode=0,C(t),g(e,t);a=0}else{var s=i.value;if(s===a&&(0!==s||1/s==1/a)||s!=s&&a!=a){if(i.children===o.children)return t.stateNode=0,C(t),g(e,t);a=0}else if(a="function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,a):1073741823,0==(a|=0)){if(i.children===o.children)return t.stateNode=0,C(t),g(e,t)}else y(t,r,a,n)}return t.stateNode=a,C(t),u(e,t,o.children),t.child}(e,t,n);case 12:r=t.type,a=t.pendingProps;var l=t.memoizedProps;return o=r._currentValue,s=r._changedBits,S()||0!==s||l!==a?(t.memoizedProps=a,void 0!==(l=a.unstable_observedBits)&&null!==l||(l=1073741823),t.stateNode=l,0!=(s&l)&&y(t,r,s,n),u(e,t,n=(n=a.children)(o)),e=t.child):e=g(e,t),e;default:f("156")}}}}function vr(e,t){var n=t.source;null===t.stack&&ut(n),null!==n&&lt(n),t=t.value,null!==e&&2===e.tag&&lt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}var br={};function kr(e){function t(){if(null!==ee)for(var e=ee.return;null!==e;)F(e),e=e.return;te=null,ne=0,ee=null,ie=!1}function n(e){return null!==ae&&ae.has(e)}function r(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=M(t,e,ne);var o=e;if(1073741823===ne||1073741823!==o.expirationTime){e:switch(o.tag){case 3:case 2:var i=o.updateQueue;i=null===i?0:i.expirationTime;break e;default:i=0}for(var a=o.child;null!==a;)0!==a.expirationTime&&(0===i||i>a.expirationTime)&&(i=a.expirationTime),a=a.sibling;o.expirationTime=i}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ie=!0;break}e=n}else{if(null!==(e=I(e)))return e.effectTag&=2559,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function o(e){var t=A(e.alternate,e,ne);return null===t&&(t=r(e)),$e.current=null,t}function a(e,n,i){Z&&f("243"),Z=!0,n===ne&&e===te&&null!==ee||(t(),ne=n,ee=Gn((te=e).current,null,ne),e.pendingCommitExpirationTime=0);for(var a=!1;;){try{if(i)for(;null!==ee&&!_();)ee=o(ee);else for(;null!==ee;)ee=o(ee)}catch(e){if(null===ee){a=!0,S(e);break}var s=(i=ee).return;if(null===s){a=!0,S(e);break}B(s,i,e),ee=r(i)}break}return Z=!1,a||null!==ee?null:ie?(e.pendingCommitExpirationTime=n,e.current.alternate):void f("262")}function s(e,t,n,r){sr(t,{expirationTime:r,partialState:null,callback:null,isReplace:!1,isForced:!1,capturedValue:e={value:n,source:e,stack:ut(e)},next:null}),p(t,r)}function l(e,t){e:{Z&&!oe&&f("263");for(var r=e.return;null!==r;){switch(r.tag){case 2:var o=r.stateNode;if("function"==typeof r.type.getDerivedStateFromCatch||"function"==typeof o.componentDidCatch&&!n(o)){s(e,r,t,1),e=void 0;break e}break;case 3:s(e,r,t,1),e=void 0;break e}r=r.return}3===e.tag&&s(e,e,t,1),e=void 0}return e}function u(e){return e=0!==J?J:Z?oe?1:ne:1&e.mode?xe?10*(1+((d()+50)/10|0)):25*(1+((d()+500)/25|0)):1,xe&&(0===he||e>he)&&(he=e),e}function p(e,n){e:{for(;null!==e;){if((0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>n)&&(e.alternate.expirationTime=n),null===e.return){if(3!==e.tag){n=void 0;break e}var r=e.stateNode;!Z&&0!==ne&&n<ne&&t(),Z&&!oe&&te===r||y(r,n),_e>we&&f("185")}e=e.return}n=void 0}return n}function d(){return Y=V()-X,2+(Y/10|0)}function h(e,t,n,r,o){var i=J;J=1;try{return e(t,n,r,o)}finally{J=i}}function m(e){if(0!==ue){if(e>ue)return;G(ce)}var t=V()-X;ue=e,ce=q(v,{timeout:10*(e-2)-t})}function y(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===le?(se=le=e,e.nextScheduledRoot=e):(le=le.nextScheduledRoot=e).nextScheduledRoot=se;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}fe||(be?ke&&(pe=e,de=1,C(e,1,!1)):1===t?b():m(t))}function g(){var e=0,t=null;if(null!==le)for(var n=le,r=se;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===le)&&f("244"),r===r.nextScheduledRoot){se=le=r.nextScheduledRoot=null;break}if(r===se)se=o=r.nextScheduledRoot,le.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===le){(le=n).nextScheduledRoot=se,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===le)break;n=r,r=r.nextScheduledRoot}}null!==(n=pe)&&n===t&&1===e?_e++:_e=0,pe=t,de=e}function v(e){k(0,!0,e)}function b(){k(1,!1,null)}function k(e,t,n){if(ve=n,g(),t)for(;null!==pe&&0!==de&&(0===e||e>=de)&&(!me||d()>=de);)C(pe,de,!me),g();else for(;null!==pe&&0!==de&&(0===e||e>=de);)C(pe,de,!1),g();null!==ve&&(ue=0,ce=-1),0!==de&&m(de),ve=null,me=!1,x()}function x(){if(_e=0,null!==Ce){var e=Ce;Ce=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ye||(ye=!0,ge=e)}}}if(ye)throw e=ge,ge=null,ye=!1,e}function C(e,t,n){fe&&f("245"),fe=!0,n?null!==(n=e.finishedWork)?w(e,n,t):(e.finishedWork=null,null!==(n=a(e,t,!0))&&(_()?e.finishedWork=n:w(e,n,t))):null!==(n=e.finishedWork)?w(e,n,t):(e.finishedWork=null,null!==(n=a(e,t,!1))&&w(e,n,t)),fe=!1}function w(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Ce?Ce=[r]:Ce.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);e.finishedWork=null,oe=Z=!0,(n=t.stateNode).current===t&&f("177"),0===(r=n.pendingCommitExpirationTime)&&f("261"),n.pendingCommitExpirationTime=0;var o=d();if($e.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var i=t.firstEffect}else i=t;else i=t.firstEffect;for(K(n.containerInfo),re=i;null!==re;){var a=!1,s=void 0;try{for(;null!==re;)2048&re.effectTag&&N(re.alternate,re),re=re.nextEffect}catch(e){a=!0,s=e}a&&(null===re&&f("178"),l(re,s),null!==re&&(re=re.nextEffect))}for(re=i;null!==re;){a=!1,s=void 0;try{for(;null!==re;){var u=re.effectTag;if(16&u&&R(re),128&u){var c=re.alternate;null!==c&&H(c)}switch(14&u){case 2:j(re),re.effectTag&=-3;break;case 6:j(re),re.effectTag&=-3,W(re.alternate,re);break;case 4:W(re.alternate,re);break;case 8:D(re)}re=re.nextEffect}}catch(e){a=!0,s=e}a&&(null===re&&f("178"),l(re,s),null!==re&&(re=re.nextEffect))}for($(n.containerInfo),n.current=t,re=i;null!==re;){u=!1,c=void 0;try{for(i=n,a=o,s=r;null!==re;){var p=re.effectTag;36&p&&z(i,re.alternate,re,a,s),256&p&&L(re,S),128&p&&U(re);var h=re.nextEffect;re.nextEffect=null,re=h}}catch(e){u=!0,c=e}u&&(null===re&&f("178"),l(re,c),null!==re&&(re=re.nextEffect))}Z=oe=!1,er(t.stateNode),0===(t=n.current.expirationTime)&&(ae=null),e.remainingExpirationTime=t}function _(){return!(null===ve||ve.timeRemaining()>Se)&&(me=!0)}function S(e){null===pe&&f("246"),pe.remainingExpirationTime=0,ye||(ye=!0,ge=e)}var T=function(){var e=[],t=-1;return{createCursor:function(e){return{current:e}},isEmpty:function(){return-1===t},pop:function(n){0>t||(n.current=e[t],e[t]=null,t--)},push:function(n,r){e[++t]=n.current,n.current=r},checkThatStackIsEmpty:function(){},resetStackAfterFatalErrorInDev:function(){}}}(),P=function(e,t){function n(e){return e===br&&f("174"),e}var r=e.getChildHostContext,o=e.getRootHostContext;e=t.createCursor;var i=t.push,a=t.pop,s=e(br),l=e(br),u=e(br);return{getHostContext:function(){return n(s.current)},getRootHostContainer:function(){return n(u.current)},popHostContainer:function(e){a(s,e),a(l,e),a(u,e)},popHostContext:function(e){l.current===e&&(a(s,e),a(l,e))},pushHostContainer:function(e,t){i(u,t,e),i(l,e,e),i(s,br,e),t=o(t),a(s,e),i(s,t,e)},pushHostContext:function(e){var t=n(u.current),o=n(s.current);o!==(t=r(o,e.type,t))&&(i(l,e,e),i(s,t,e))}}}(e,T),O=function(e){function t(e,t,n){(e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=n}function n(e){return 2===e.tag&&null!=e.type.childContextTypes}function r(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||f("108",lt(e)||"Unknown",o);return i({},t,n)}var o=e.createCursor,a=e.push,s=e.pop,l=o(c),u=o(!1),p=c;return{getUnmaskedContext:function(e){return n(e)?p:l.current},cacheContext:t,getMaskedContext:function(e,n){var r=e.type.contextTypes;if(!r)return c;var o=e.stateNode;if(o&&o.__reactInternalMemoizedUnmaskedChildContext===n)return o.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in r)a[i]=n[i];return o&&t(e,n,a),a},hasContextChanged:function(){return u.current},isContextConsumer:function(e){return 2===e.tag&&null!=e.type.contextTypes},isContextProvider:n,popContextProvider:function(e){n(e)&&(s(u,e),s(l,e))},popTopLevelContextObject:function(e){s(u,e),s(l,e)},pushTopLevelContextObject:function(e,t,n){null!=l.cursor&&f("168"),a(l,t,e),a(u,n,e)},processChildContext:r,pushContextProvider:function(e){if(!n(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||c,p=l.current,a(l,t,e),a(u,u.current,e),!0},invalidateContextProvider:function(e,t){var n=e.stateNode;if(n||f("169"),t){var o=r(e,p);n.__reactInternalMemoizedMergedChildContext=o,s(u,e),s(l,e),a(l,o,e)}else s(u,e);a(u,t,e)},findCurrentUnmaskedContext:function(e){for((2!==Kt(e)||2!==e.tag)&&f("170");3!==e.tag;){if(n(e))return e.stateNode.__reactInternalMemoizedMergedChildContext;(e=e.return)||f("171")}return e.stateNode.context}}}(T);T=function(e){var t=e.createCursor,n=e.push,r=e.pop,o=t(null),i=t(null),a=t(0);return{pushProvider:function(e){var t=e.type._context;n(a,t._changedBits,e),n(i,t._currentValue,e),n(o,e,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode},popProvider:function(e){var t=a.current,n=i.current;r(o,e),r(i,e),r(a,e),(e=e.type._context)._currentValue=n,e._changedBits=t}}}(T);var E=function(e){function t(e,t){var n=new qn(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case 5:return null!==(t=i(t,e.type,e.pendingProps))&&(e.stateNode=t,!0);case 6:return null!==(t=a(t,e.pendingProps))&&(e.stateNode=t,!0);default:return!1}}function r(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;p=e}var o=e.shouldSetTextContent;if(!(e=e.hydration))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){f("175")},prepareToHydrateHostTextInstance:function(){f("176")},popHydrationState:function(){return!1}};var i=e.canHydrateInstance,a=e.canHydrateTextInstance,s=e.getNextHydratableSibling,l=e.getFirstHydratableChild,u=e.hydrateInstance,c=e.hydrateTextInstance,p=null,d=null,h=!1;return{enterHydrationState:function(e){return d=l(e.stateNode.containerInfo),p=e,h=!0},resetHydrationState:function(){d=p=null,h=!1},tryToClaimNextHydratableInstance:function(e){if(h){var r=d;if(r){if(!n(e,r)){if(!(r=s(r))||!n(e,r))return e.effectTag|=2,h=!1,void(p=e);t(p,d)}p=e,d=l(r)}else e.effectTag|=2,h=!1,p=e}},prepareToHydrateHostInstance:function(e,t,n){return t=u(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return c(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==p)return!1;if(!h)return r(e),h=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!o(n,e.memoizedProps))for(n=d;n;)t(e,n),n=s(n);return r(e),d=p?s(e.stateNode):null,!0}}}(e),A=gr(e,P,O,T,E,p,u).beginWork,M=function(e,t,n,r,o){function i(e){e.effectTag|=4}var a=e.createInstance,s=e.createTextInstance,l=e.appendInitialChild,u=e.finalizeInitialChildren,c=e.prepareUpdate,p=e.persistence,d=t.getRootHostContainer,h=t.popHostContext,m=t.getHostContext,y=t.popHostContainer,g=n.popContextProvider,v=n.popTopLevelContextObject,b=r.popProvider,k=o.prepareToHydrateHostInstance,x=o.prepareToHydrateHostTextInstance,C=o.popHydrationState,w=void 0,_=void 0,S=void 0;return e.mutation?(w=function(){},_=function(e,t,n){(t.updateQueue=n)&&i(t)},S=function(e,t,n,r){n!==r&&i(t)}):f(p?"235":"236"),{completeWork:function(e,t,n){var r=t.pendingProps;switch(t.tag){case 1:return null;case 2:return g(t),e=t.stateNode,null!==(r=t.updateQueue)&&null!==r.capturedValues&&(t.effectTag&=-65,"function"==typeof e.componentDidCatch?t.effectTag|=256:r.capturedValues=null),null;case 3:return y(t),v(t),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(C(t),t.effectTag&=-3),w(t),null!==(e=t.updateQueue)&&null!==e.capturedValues&&(t.effectTag|=256),null;case 5:h(t),n=d();var o=t.type;if(null!==e&&null!=t.stateNode){var p=e.memoizedProps,T=t.stateNode,P=m();T=c(T,o,p,r,n,P),_(e,t,T,o,p,r,n,P),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!r)return null===t.stateNode&&f("166"),null;if(e=m(),C(t))k(t,n,e)&&i(t);else{p=a(o,r,n,e,t);e:for(P=t.child;null!==P;){if(5===P.tag||6===P.tag)l(p,P.stateNode);else if(4!==P.tag&&null!==P.child){P.child.return=P,P=P.child;continue}if(P===t)break;for(;null===P.sibling;){if(null===P.return||P.return===t)break e;P=P.return}P.sibling.return=P.return,P=P.sibling}u(p,o,r,n,e)&&i(t),t.stateNode=p}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)S(e,t,e.memoizedProps,r);else{if("string"!=typeof r)return null===t.stateNode&&f("166"),null;e=d(),n=m(),C(t)?x(t)&&i(t):t.stateNode=s(r,e,n,t)}return null;case 7:(r=t.memoizedProps)||f("165"),t.tag=8,o=[];e:for((p=t.stateNode)&&(p.return=t);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)f("247");else if(9===p.tag)o.push(p.pendingProps.value);else if(null!==p.child){p.child.return=p,p=p.child;continue}for(;null===p.sibling;){if(null===p.return||p.return===t)break e;p=p.return}p.sibling.return=p.return,p=p.sibling}return r=(p=r.handler)(r.props,o),t.child=mr(t,null!==e?e.child:null,r,n),t.child;case 8:return t.tag=7,null;case 9:case 14:case 10:case 11:return null;case 4:return y(t),w(t),null;case 13:return b(t),null;case 12:return null;case 0:f("167");default:f("156")}}}}(e,P,O,T,E).completeWork,B=(P=function(e,t,n,r,o){var i=e.popHostContainer,a=e.popHostContext,s=t.popContextProvider,l=t.popTopLevelContextObject,u=n.popProvider;return{throwException:function(e,t,n){t.effectTag|=512,t.firstEffect=t.lastEffect=null,t={value:n,source:t,stack:ut(t)};do{switch(e.tag){case 3:return ar(e),e.updateQueue.capturedValues=[t],void(e.effectTag|=1024);case 2:if(n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&!o(n)){ar(e);var r=(n=e.updateQueue).capturedValues;return null===r?n.capturedValues=[t]:r.push(t),void(e.effectTag|=1024)}}e=e.return}while(null!==e)},unwindWork:function(e){switch(e.tag){case 2:s(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return i(e),l(e),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return a(e),null;case 4:return i(e),null;case 13:return u(e),null;default:return null}},unwindInterruptedWork:function(e){switch(e.tag){case 2:s(e);break;case 3:i(e),l(e);break;case 5:a(e);break;case 4:i(e);break;case 13:u(e)}}}}(P,O,T,0,n)).throwException,I=P.unwindWork,F=P.unwindInterruptedWork,N=(P=function(e,t,n,r,o){function i(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){t(e,n)}else n.current=null}function a(e){switch(tr(e),e.tag){case 2:i(e);var n=e.stateNode;if("function"==typeof n.componentWillUnmount)try{n.props=e.memoizedProps,n.state=e.memoizedState,n.componentWillUnmount()}catch(n){t(e,n)}break;case 5:i(e);break;case 7:s(e.stateNode);break;case 4:p&&u(e)}}function s(e){for(var t=e;;)if(a(t),null===t.child||p&&4===t.tag){if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}else t.child.return=t,t=t.child}function l(e){return 5===e.tag||3===e.tag||4===e.tag}function u(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&f("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag)s(t),o?C(r,t.stateNode):x(r,t.stateNode);else if(4===t.tag?r=t.stateNode.containerInfo:a(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}var c=e.getPublicInstance,p=e.mutation;e=e.persistence,p||f(e?"235":"236");var d=p.commitMount,h=p.commitUpdate,m=p.resetTextContent,y=p.commitTextUpdate,g=p.appendChild,v=p.appendChildToContainer,b=p.insertBefore,k=p.insertInContainerBefore,x=p.removeChild,C=p.removeChildFromContainer;return{commitBeforeMutationLifeCycles:function(e,t){switch(t.tag){case 2:if(2048&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;(e=t.stateNode).props=t.memoizedProps,e.state=t.memoizedState,t=e.getSnapshotBeforeUpdate(n,r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:break;default:f("163")}},commitResetTextContent:function(e){m(e.stateNode)},commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(l(t)){var n=t;break e}t=t.return}f("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:f("161")}16&n.effectTag&&(m(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||l(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)n?r?k(t,o.stateNode,n):b(t,o.stateNode,n):r?v(t,o.stateNode):g(t,o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},commitDeletion:function(e){u(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&h(n,i,o,e,r,t)}break;case 6:null===t.stateNode&&f("162"),n=t.memoizedProps,y(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 3:break;default:f("163")}},commitLifeCycles:function(e,t,n){switch(n.tag){case 2:if(e=n.stateNode,4&n.effectTag)if(null===t)e.props=n.memoizedProps,e.state=n.memoizedState,e.componentDidMount();else{var r=t.memoizedProps;t=t.memoizedState,e.props=n.memoizedProps,e.state=n.memoizedState,e.componentDidUpdate(r,t,e.__reactInternalSnapshotBeforeUpdate)}null!==(n=n.updateQueue)&&cr(n,e);break;case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=c(n.child.stateNode);break;case 2:e=n.child.stateNode}cr(t,e)}break;case 5:e=n.stateNode,null===t&&4&n.effectTag&&d(e,n.type,n.memoizedProps,n);break;case 6:case 4:break;default:f("163")}},commitErrorLogging:function(e,t){switch(e.tag){case 2:var n=e.type;t=e.stateNode;var r=e.updateQueue;(null===r||null===r.capturedValues)&&f("264");var i=r.capturedValues;for(r.capturedValues=null,"function"!=typeof n.getDerivedStateFromCatch&&o(t),t.props=e.memoizedProps,t.state=e.memoizedState,n=0;n<i.length;n++){var a=(r=i[n]).value,s=r.stack;vr(e,r),t.componentDidCatch(a,{componentStack:null!==s?s:""})}break;case 3:for((null===(n=e.updateQueue)||null===n.capturedValues)&&f("264"),i=n.capturedValues,n.capturedValues=null,n=0;n<i.length;n++)vr(e,r=i[n]),t(r.value);break;default:f("265")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:e=c(n);break;default:e=n}"function"==typeof t?t(e):t.current=e}},commitDetachRef:function(e){null!==(e=e.ref)&&("function"==typeof e?e(null):e.current=null)}}}(e,l,0,0,function(e){null===ae?ae=new Set([e]):ae.add(e)})).commitBeforeMutationLifeCycles,R=P.commitResetTextContent,j=P.commitPlacement,D=P.commitDeletion,W=P.commitWork,z=P.commitLifeCycles,L=P.commitErrorLogging,U=P.commitAttachRef,H=P.commitDetachRef,V=e.now,q=e.scheduleDeferredCallback,G=e.cancelDeferredCallback,K=e.prepareForCommit,$=e.resetAfterCommit,X=V(),Y=X,Q=0,J=0,Z=!1,ee=null,te=null,ne=0,re=null,oe=!1,ie=!1,ae=null,se=null,le=null,ue=0,ce=-1,fe=!1,pe=null,de=0,he=0,me=!1,ye=!1,ge=null,ve=null,be=!1,ke=!1,xe=!1,Ce=null,we=1e3,_e=0,Se=1;return{recalculateCurrentTime:d,computeExpirationForFiber:u,scheduleWork:p,requestWork:y,flushRoot:function(e,t){fe&&f("253"),pe=e,de=t,C(e,t,!1),b(),x()},batchedUpdates:function(e,t){var n=be;be=!0;try{return e(t)}finally{(be=n)||fe||b()}},unbatchedUpdates:function(e,t){if(be&&!ke){ke=!0;try{return e(t)}finally{ke=!1}}return e(t)},flushSync:function(e,t){fe&&f("187");var n=be;be=!0;try{return h(e,t)}finally{be=n,b()}},flushControlled:function(e){var t=be;be=!0;try{h(e)}finally{(be=t)||fe||k(1,!1,null)}},deferredUpdates:function(e){var t=J;J=25*(1+((d()+500)/25|0));try{return e()}finally{J=t}},syncUpdates:h,interactiveUpdates:function(e,t,n){if(xe)return e(t,n);be||fe||0===he||(k(he,!1,null),he=0);var r=xe,o=be;be=xe=!0;try{return e(t,n)}finally{xe=r,(be=o)||fe||b()}},flushInteractiveUpdates:function(){fe||0===he||(k(he,!1,null),he=0)},computeUniqueAsyncExpiration:function(){var e=25*(1+((d()+500)/25|0));return e<=Q&&(e=Q+1),Q=e},legacyContext:O}}function xr(e){function t(e,t,n,r,o,i){if(r=t.current,n){n=n._reactInternalFiber;var a=u(n);n=f(n)?p(n,a):a}else n=c;return null===t.context?t.context=n:t.pendingContext=n,sr(r,{expirationTime:o,partialState:{element:e},callback:void 0===(t=i)?null:t,isReplace:!1,isForced:!1,capturedValue:null,next:null}),s(r,o),o}function n(e){return null===(e=function(e){if(!(e=Yt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode}var r=e.getPublicInstance,o=(e=kr(e)).recalculateCurrentTime,a=e.computeExpirationForFiber,s=e.scheduleWork,l=e.legacyContext,u=l.findCurrentUnmaskedContext,f=l.isContextProvider,p=l.processChildContext;return{createContainer:function(e,t,n){return e={current:t=new qn(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e},updateContainer:function(e,n,r,i){var s=n.current;return t(e,n,r,o(),s=a(s),i)},updateContainerAtExpirationTime:function(e,n,r,i,a){return t(e,n,r,o(),i,a)},flushRoot:e.flushRoot,requestWork:e.requestWork,computeUniqueAsyncExpiration:e.computeUniqueAsyncExpiration,batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,syncUpdates:e.syncUpdates,interactiveUpdates:e.interactiveUpdates,flushInteractiveUpdates:e.flushInteractiveUpdates,flushControlled:e.flushControlled,flushSync:e.flushSync,getPublicRootInstance:function(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:return r(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:n,findHostInstanceWithNoPortals:function(e){return null===(e=function(e){if(!(e=Yt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},injectIntoDevTools:function(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Qn=Zn(function(e){return t.onCommitFiberRoot(n,e)}),Jn=Zn(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(i({},e,{findHostInstanceByFiber:function(e){return n(e)},findFiberByHostInstance:function(e){return t?t(e):null}}))}}}var Cr=Object.freeze({default:xr}),wr=Cr&&xr||Cr,_r=wr.default?wr.default:wr;var Sr="object"==typeof performance&&"function"==typeof performance.now,Tr=void 0;Tr=Sr?function(){return performance.now()}:function(){return Date.now()};var Pr=void 0,Or=void 0;if(o.canUseDOM)if("function"!=typeof requestIdleCallback||"function"!=typeof cancelIdleCallback){var Er=null,Ar=!1,Mr=-1,Br=!1,Ir=0,Fr=33,Nr=33,Rr=void 0;Rr=Sr?{didTimeout:!1,timeRemaining:function(){var e=Ir-performance.now();return 0<e?e:0}}:{didTimeout:!1,timeRemaining:function(){var e=Ir-Date.now();return 0<e?e:0}};var jr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===jr){if(Ar=!1,e=Tr(),0>=Ir-e){if(!(-1!==Mr&&Mr<=e))return void(Br||(Br=!0,requestAnimationFrame(Dr)));Rr.didTimeout=!0}else Rr.didTimeout=!1;Mr=-1,e=Er,Er=null,null!==e&&e(Rr)}},!1);var Dr=function(e){Br=!1;var t=e-Ir+Nr;t<Nr&&Fr<Nr?(8>t&&(t=8),Nr=t<Fr?Fr:t):Fr=t,Ir=e+Nr,Ar||(Ar=!0,window.postMessage(jr,"*"))};Pr=function(e,t){return Er=e,null!=t&&"number"==typeof t.timeout&&(Mr=Tr()+t.timeout),Br||(Br=!0,requestAnimationFrame(Dr)),0},Or=function(){Er=null,Ar=!1,Mr=-1}}else Pr=window.requestIdleCallback,Or=window.cancelIdleCallback;else Pr=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})})},Or=function(e){clearTimeout(e)};function Wr(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function zr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Lr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function Ur(e,t){return null!=t.dangerouslySetInnerHTML&&f("91"),i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Hr(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&f("92"),Array.isArray(t)&&(1>=t.length||f("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function Vr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function qr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var Gr="http://www.w3.org/1999/xhtml",Kr="http://www.w3.org/2000/svg";function $r(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Xr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?$r(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Yr,Qr=void 0,Jr=(Yr=function(e,t){if(e.namespaceURI!==Kr||"innerHTML"in e)e.innerHTML=t;else{for((Qr=Qr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Qr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return Yr(e,t)})}:Yr);function Zr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var eo={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},to=["Webkit","ms","Moz","O"];function no(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||eo.hasOwnProperty(o)&&eo[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(eo).forEach(function(e){to.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),eo[t]=eo[e]})});var ro=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function oo(e,t,n){t&&(ro[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&f("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&f("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||f("61")),null!=t.style&&"object"!=typeof t.style&&f("62",n()))}function io(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ao=Gr,so=a.thatReturns("");function lo(e,t){var n=In(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++){var o=t[r];n.hasOwnProperty(o)&&n[o]||("topScroll"===o?bn("topScroll","scroll",e):"topFocus"===o||"topBlur"===o?(bn("topFocus","focus",e),bn("topBlur","blur",e),n.topBlur=!0,n.topFocus=!0):"topCancel"===o?(Ve("cancel",!0)&&bn("topCancel","cancel",e),n.topCancel=!0):"topClose"===o?(Ve("close",!0)&&bn("topClose","close",e),n.topClose=!0):On.hasOwnProperty(o)&&vn(o,On[o],e),n[o]=!0)}}function uo(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===ao&&(r=$r(e)),r===ao?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function co(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function fo(e,t,n,r){var o=io(t,n);switch(t){case"iframe":case"object":vn("topLoad","load",e);var s=n;break;case"video":case"audio":for(s in En)En.hasOwnProperty(s)&&vn(s,En[s],e);s=n;break;case"source":vn("topError","error",e),s=n;break;case"img":case"image":case"link":vn("topError","error",e),vn("topLoad","load",e),s=n;break;case"form":vn("topReset","reset",e),vn("topSubmit","submit",e),s=n;break;case"details":vn("topToggle","toggle",e),s=n;break;case"input":bt(e,n),s=vt(e,n),vn("topInvalid","invalid",e),lo(r,"onChange");break;case"option":s=Wr(e,n);break;case"select":Lr(e,n),s=i({},n,{value:void 0}),vn("topInvalid","invalid",e),lo(r,"onChange");break;case"textarea":Hr(e,n),s=Ur(e,n),vn("topInvalid","invalid",e),lo(r,"onChange");break;default:s=n}oo(t,s,so);var l,u=s;for(l in u)if(u.hasOwnProperty(l)){var c=u[l];"style"===l?no(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&Jr(e,c):"children"===l?"string"==typeof c?("textarea"!==t||""!==c)&&Zr(e,c):"number"==typeof c&&Zr(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(b.hasOwnProperty(l)?null!=c&&lo(r,l):null!=c&&gt(e,l,c,o))}switch(t){case"input":Ge(e),Ct(e,n);break;case"textarea":Ge(e),qr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?zr(e,!!n.multiple,t,!1):null!=n.defaultValue&&zr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=a)}}function po(e,t,n,r,o){var s=null;switch(t){case"input":n=vt(e,n),r=vt(e,r),s=[];break;case"option":n=Wr(e,n),r=Wr(e,r),s=[];break;case"select":n=i({},n,{value:void 0}),r=i({},r,{value:void 0}),s=[];break;case"textarea":n=Ur(e,n),r=Ur(e,r),s=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=a)}oo(t,r,so),t=e=void 0;var l=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var u=n[e];for(t in u)u.hasOwnProperty(t)&&(l||(l={}),l[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(b.hasOwnProperty(e)?s||(s=[]):(s=s||[]).push(e,null));for(e in r){var c=r[e];if(u=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&c!==u&&(null!=c||null!=u))if("style"===e)if(u){for(t in u)!u.hasOwnProperty(t)||c&&c.hasOwnProperty(t)||(l||(l={}),l[t]="");for(t in c)c.hasOwnProperty(t)&&u[t]!==c[t]&&(l||(l={}),l[t]=c[t])}else l||(s||(s=[]),s.push(e,l)),l=c;else"dangerouslySetInnerHTML"===e?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(s=s||[]).push(e,""+c)):"children"===e?u===c||"string"!=typeof c&&"number"!=typeof c||(s=s||[]).push(e,""+c):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(b.hasOwnProperty(e)?(null!=c&&lo(o,e),s||u===c||(s=[])):(s=s||[]).push(e,c))}return l&&(s=s||[]).push("style",l),s}function ho(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&kt(e,o),io(n,r),r=io(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],s=t[i+1];"style"===a?no(e,s):"dangerouslySetInnerHTML"===a?Jr(e,s):"children"===a?Zr(e,s):gt(e,a,s,r)}switch(n){case"input":xt(e,o);break;case"textarea":Vr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?zr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?zr(e,!!o.multiple,o.defaultValue,!0):zr(e,!!o.multiple,o.multiple?[]:"",!1))}}function mo(e,t,n,r,o){switch(t){case"iframe":case"object":vn("topLoad","load",e);break;case"video":case"audio":for(var i in En)En.hasOwnProperty(i)&&vn(i,En[i],e);break;case"source":vn("topError","error",e);break;case"img":case"image":case"link":vn("topError","error",e),vn("topLoad","load",e);break;case"form":vn("topReset","reset",e),vn("topSubmit","submit",e);break;case"details":vn("topToggle","toggle",e);break;case"input":bt(e,n),vn("topInvalid","invalid",e),lo(o,"onChange");break;case"select":Lr(e,n),vn("topInvalid","invalid",e),lo(o,"onChange");break;case"textarea":Hr(e,n),vn("topInvalid","invalid",e),lo(o,"onChange")}for(var s in oo(t,n,so),r=null,n)n.hasOwnProperty(s)&&(i=n[s],"children"===s?"string"==typeof i?e.textContent!==i&&(r=["children",i]):"number"==typeof i&&e.textContent!==""+i&&(r=["children",""+i]):b.hasOwnProperty(s)&&null!=i&&lo(o,s));switch(t){case"input":Ge(e),Ct(e,n);break;case"textarea":Ge(e),qr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=a)}return r}function yo(e,t){return e.nodeValue!==t}var go=Object.freeze({createElement:uo,createTextNode:co,setInitialProperties:fo,diffProperties:po,updateProperties:ho,diffHydratedProperties:mo,diffHydratedText:yo,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(xt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=V(r);o||f("90"),Ke(r),xt(r,o)}}}break;case"textarea":Vr(e,n);break;case"select":null!=(t=n.value)&&zr(e,!!n.multiple,t,!1)}}});Me.injectFiberControlledHostComponent(go);var vo=null,bo=null;function ko(e){this._expirationTime=So.computeUniqueAsyncExpiration(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function xo(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Co(e,t,n){this._internalRoot=So.createContainer(e,t,n)}function wo(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function _o(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}ko.prototype.render=function(e){this._defer||f("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new xo;return So.updateContainerAtExpirationTime(e,t,null,n,r._onCommit),r},ko.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ko.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||f("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&f("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,So.flushRoot(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},ko.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},xo.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},xo.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&f("191",n),n()}}},Co.prototype.render=function(e,t){var n=this._internalRoot,r=new xo;return null!==(t=void 0===t?null:t)&&r.then(t),So.updateContainer(e,n,null,r._onCommit),r},Co.prototype.unmount=function(e){var t=this._internalRoot,n=new xo;return null!==(e=void 0===e?null:e)&&n.then(e),So.updateContainer(null,t,null,n._onCommit),n},Co.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new xo;return null!==(n=void 0===n?null:n)&&o.then(n),So.updateContainer(t,r,e,o._onCommit),o},Co.prototype.createBatch=function(){var e=new ko(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e};var So=_r({getRootHostContext:function(e){var t=e.nodeType;switch(t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Xr(null,"");break;default:e=Xr(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}return e},getChildHostContext:function(e,t){return Xr(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){vo=yn;var e=s();if(Rn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=window.getSelection&&window.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,l=-1,u=0,c=0,f=e,p=null;t:for(;;){for(var d;f!==t||0!==r&&3!==f.nodeType||(a=i+r),f!==o||0!==n&&3!==f.nodeType||(l=i+n),3===f.nodeType&&(i+=f.nodeValue.length),null!==(d=f.firstChild);)p=f,f=d;for(;;){if(f===e)break t;if(p===t&&++u===r&&(a=i),p===o&&++c===n&&(l=i),null!==(d=f.nextSibling))break;p=(f=p).parentNode}f=d}t=-1===a||-1===l?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;bo={focusedElem:e,selectionRange:t},gn(!1)},resetAfterCommit:function(){var e=bo,t=s(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&u(document.documentElement,n)){if(Rn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(window.getSelection){t=window.getSelection();var o=n[re()].length;e=Math.min(r.start,o),r=void 0===r.end?e:Math.min(r.end,o),!t.extend&&e>r&&(o=r,r=e,e=o),o=Nn(n,e);var i=Nn(n,r);if(o&&i&&(1!==t.rangeCount||t.anchorNode!==o.node||t.anchorOffset!==o.offset||t.focusNode!==i.node||t.focusOffset!==i.offset)){var a=document.createRange();a.setStart(o.node,o.offset),t.removeAllRanges(),e>r?(t.addRange(a),t.extend(i.node,i.offset)):(a.setEnd(i.node,i.offset),t.addRange(a))}}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}bo=null,gn(vo),vo=null},createInstance:function(e,t,n,r,o){return(e=uo(e,t,n,r))[z]=o,e[L]=t,e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){return fo(e,t,n,r),_o(t,n)},prepareUpdate:function(e,t,n,r,o){return po(e,t,n,r,o)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return(e=co(e,t))[z]=r,e},now:Tr,mutation:{commitMount:function(e,t,n){_o(t,n)&&e.focus()},commitUpdate:function(e,t,n,r,o){e[L]=o,ho(e,t,n,r,o)},resetTextContent:function(e){Zr(e,"")},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){8===e.nodeType?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){8===e.nodeType?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)}},hydration:{canHydrateInstance:function(e,t){return 1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e},canHydrateTextInstance:function(e,t){return""===t||3!==e.nodeType?null:e},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,o,i){return e[z]=i,e[L]=n,mo(e,t,n,o,r)},hydrateTextInstance:function(e,t,n){return e[z]=n,yo(e,t)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:Pr,cancelDeferredCallback:Or}),To=So;function Po(e,t,n,r,o){wo(n)||f("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=So.getPublicRootInstance(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Co(e,!1,t)}(n,r),"function"==typeof o){var s=o;o=function(){var e=So.getPublicRootInstance(i._internalRoot);s.call(e)}}So.unbatchedUpdates(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return So.getPublicRootInstance(i._internalRoot)}function Oo(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return wo(t)||f("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ze,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Re=To.batchedUpdates,je=To.interactiveUpdates,De=To.flushInteractiveUpdates;var Eo={createPortal:Oo,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(t)return So.findHostInstance(t);"function"==typeof e.render?f("188"):f("213",Object.keys(e))},hydrate:function(e,t,n){return Po(null,e,t,!0,n)},render:function(e,t,n){return Po(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&f("38"),Po(e,t,n,!1,r)},unmountComponentAtNode:function(e){return wo(e)||f("40"),!!e._reactRootContainer&&(So.unbatchedUpdates(function(){Po(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Oo.apply(void 0,arguments)},unstable_batchedUpdates:So.batchedUpdates,unstable_deferredUpdates:So.deferredUpdates,flushSync:So.flushSync,unstable_flushControlled:So.flushControlled,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:D,EventPluginRegistry:w,EventPropagators:te,ReactControlledComponent:Ne,ReactDOMComponentTree:q,ReactDOMEventListener:Cn},unstable_createRoot:function(e,t){return new Co(e,!0,null!=t&&!0===t.hydrate)}};So.injectIntoDevTools({findFiberByHostInstance:U,bundleType:0,version:"16.3.1",rendererPackageName:"react-dom"});var Ao=Object.freeze({default:Eo}),Mo=Ao&&Eo||Ao;e.exports=Mo.default?Mo.default:Mo},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(206)},function(e,t,n){"use strict";
/** @license React v16.3.1
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(80),o=n(79),i=n(47),a="function"==typeof Symbol&&Symbol.for,s=a?Symbol.for("react.element"):60103,l=a?Symbol.for("react.portal"):60106,u=a?Symbol.for("react.fragment"):60107,c=a?Symbol.for("react.strict_mode"):60108,f=a?Symbol.for("react.provider"):60109,p=a?Symbol.for("react.context"):60110,d=a?Symbol.for("react.async_mode"):60111,h=a?Symbol.for("react.forward_ref"):60112,m="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function v(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||g}function b(){}function k(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||g}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&y("85"),this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=v.prototype;var x=k.prototype=new b;x.constructor=k,r(x,v.prototype),x.isPureReactComponent=!0;var C={current:null},w=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,o={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:s,type:e,key:i,ref:a,props:o,_owner:C.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===s}var P=/\/+/g,O=[];function E(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function A(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function M(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var i=!1;if(null===e)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case s:case l:i=!0}}if(i)return n(r,e,""===t?"."+B(e,0):t),1;if(i=0,t=""===t?".":t+":",Array.isArray(e))for(var a=0;a<e.length;a++){var u=t+B(o=e[a],a);i+=M(o,u,n,r)}else if(null===e||void 0===e?u=null:u="function"==typeof(u=m&&e[m]||e["@@iterator"])?u:null,"function"==typeof u)for(e=u.call(e),a=0;!(o=e.next()).done;)i+=M(o=o.value,u=t+B(o,a++),n,r);else"object"===o&&y("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return i}function B(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?N(e,r,n,i.thatReturnsArgument):null!=e&&(T(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n,e={$$typeof:s,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function N(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),t=E(t,i,r,o),null==e||M(e,"",F,t),A(t)}var R={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return N(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=E(null,null,t,n),null==e||M(e,"",I,t),A(t)},count:function(e){return null==e?0:M(e,"",i.thatReturnsNull,null)},toArray:function(e){var t=[];return N(e,t,null,i.thatReturnsArgument),t},only:function(e){return T(e)||y("143"),e}},createRef:function(){return{current:null}},Component:v,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_changedBits:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:h,render:e}},Fragment:u,StrictMode:c,unstable_AsyncMode:d,createElement:S,cloneElement:function(e,t,n){var o=void 0,i=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,u=C.current),void 0!==t.key&&(a=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)w.call(t,o)&&!_.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:s,type:e.type,key:a,ref:l,props:i,_owner:u}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:T,version:"16.3.1",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},j=Object.freeze({default:R}),D=j&&R||j;e.exports=D.default?D.default:D},function(e,t,n){"use strict";var r=s(n(24)),o=n(207),i=s(n(199)),a=s(n(107));function s(e){return e&&e.__esModule?e:{default:e}}n(85);(0,o.render)(r.default.createElement(function(){return r.default.createElement(i.default,null,r.default.createElement(a.default,null))},null),document.getElementById("book"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvbGliL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvbXBvbmVudC1lbWl0dGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvdXRpbHMvZ2V0UHJlZml4ZWRWYWx1ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWlvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oaWRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlcmF0b3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb21wb25lbnQtaW5oZXJpdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGFyc2Vxcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdWlkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9saWIvdHJhbnNwb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2xpYi94bWxodHRwcmVxdWVzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLXBhcnNlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWluLWpzLXV0aWxzL2xpYi9pc1ByZWZpeGVkVmFsdWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci91dGlscy9jYXBpdGFsaXplU3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXRlcmlhbC11aS9zdHlsZXMvY29sb3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy1leHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtdG8tc3RyaW5nLXRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbGlicmFyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jdHguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQta2V5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29tcG9uZW50LWJpbmQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NvY2tldC5pby1jbGllbnQvbGliL29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2xpYi9zb2NrZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2luZGV4b2YvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3llYXN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYXMtYmluYXJ5Mi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9saWIvdHJhbnNwb3J0cy9wb2xsaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2xpYi90cmFuc3BvcnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2xpYi9tYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tcGFyc2VyL2lzLWJ1ZmZlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGFyc2V1cmkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1pbi1qcy11dGlscy9saWIvaHlwaGVuYXRlUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci91dGlscy9pc09iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5saW5lLXN0eWxlLXByZWZpeGVyL3V0aWxzL2FkZE5ld1ZhbHVlc09ubHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci91dGlscy9wcmVmaXhWYWx1ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtdWkvdXRpbHMvY29sb3JNYW5pcHVsYXRvci5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kb20tY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qtc2FwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovLy8uL2NsaWVudC9hc3NldHMvbWFpbi5zY3NzIiwid2VicGFjazovLy8uL2NsaWVudC9hc3NldHMvbWFpbi5zY3NzP2QyMmEiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhY2tvMi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdG8tYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvbGliL3RyYW5zcG9ydHMvd2Vic29ja2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2xpYi90cmFuc3BvcnRzL3BvbGxpbmctanNvbnAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jsb2IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1hcnJheWJ1ZmZlci9saWIvYmFzZTY0LWFycmF5YnVmZmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tcGFyc2VyL2xpYi91dGY4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hZnRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXJyYXlidWZmZXIuc2xpY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1wYXJzZXIvbGliL2tleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvbGliL3RyYW5zcG9ydHMvcG9sbGluZy14aHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhcy1jb3JzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2xpYi9zb2NrZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tcGFyc2VyL2JpbmFyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9kZWJ1Zy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2xpYi91cmwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NvY2tldC5pby1jbGllbnQvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NsaWVudC9jb21wb25lbnRzL0Jvb2suanN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXRlcmlhbC11aS9zdHlsZXMvdHlwb2dyYXBoeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVjb21wb3NlL2NvbXBvc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hdGVyaWFsLXVpL3V0aWxzL3J0bC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtdWkvdXRpbHMvY2FsbE9uY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci9zdGF0aWMvcGx1Z2lucy90cmFuc2l0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvc2l6aW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvZ3JhZGllbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci9zdGF0aWMvcGx1Z2lucy9mbGV4Ym94T2xkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvZmxleGJveElFLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvZmxleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5saW5lLXN0eWxlLXByZWZpeGVyL3N0YXRpYy9wbHVnaW5zL2NhbGMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hdGVyaWFsLXVpL3V0aWxzL2F1dG9wcmVmaXhlclN0YXRpYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHlwaGVuYXRlLXN0eWxlLW5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvdHJhbnNpdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5saW5lLXN0eWxlLXByZWZpeGVyL2R5bmFtaWMvcGx1Z2lucy9zaXppbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvZ3JhZGllbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvZmxleGJveE9sZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5saW5lLXN0eWxlLXByZWZpeGVyL2R5bmFtaWMvcGx1Z2lucy9mbGV4Ym94SUUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvZmxleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5saW5lLXN0eWxlLXByZWZpeGVyL2R5bmFtaWMvcGx1Z2lucy9jYWxjLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXRlcmlhbC11aS91dGlscy9hdXRvcHJlZml4ZXJEeW5hbWljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvdXRpbHMvZ2V0UHJlZml4ZWRLZXlmcmFtZXMuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2FtZC1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jvd3Nlci9zcmMvYm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvdXRpbHMvZ2V0QnJvd3NlckluZm9ybWF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvZHluYW1pYy9jcmVhdGVQcmVmaXhlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5saW5lLXN0eWxlLXByZWZpeGVyL3V0aWxzL3ByZWZpeFByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL2NyZWF0ZVByZWZpeGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXRlcmlhbC11aS91dGlscy9hdXRvcHJlZml4ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hdGVyaWFsLXVpL3N0eWxlcy96SW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hdGVyaWFsLXVpL3N0eWxlcy9zcGFjaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXRlcmlhbC11aS9zdHlsZXMvYmFzZVRoZW1lcy9saWdodEJhc2VUaGVtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLm1lcmdlL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jbGFzc29mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS1pdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL2FycmF5L2Zyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9hcnJheS9mcm9tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hdGVyaWFsLXVpL3N0eWxlcy9nZXRNdWlUaGVtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4tZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19tZXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1zdGVwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHBzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zdHJpbmctYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hLWZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXRlcmlhbC11aS9zdHlsZXMvTXVpVGhlbWVQcm92aWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc1RleHROb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jb250YWluc05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL3NoYWxsb3dFcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZ2V0QWN0aXZlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9jbGllbnQvaW5kZXguanN4Il0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsInZhbHVlIiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJnIiwidGhpcyIsIkZ1bmN0aW9uIiwiZXZhbCIsImUiLCJ3aW5kb3ciLCJjb3JlIiwidmVyc2lvbiIsIl9fZSIsInN0b3JlIiwidWlkIiwiU3ltYm9sIiwiVVNFX1NZTUJPTCIsInByb2Nlc3MiLCJsb2FkIiwic3RvcmFnZSIsImRlYnVnIiwiZW52IiwiREVCVUciLCJsb2ciLCJjb25zb2xlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJmb3JtYXRBcmdzIiwiYXJncyIsInVzZUNvbG9ycyIsIm5hbWVzcGFjZSIsImh1bWFuaXplIiwiZGlmZiIsImNvbG9yIiwic3BsaWNlIiwiaW5kZXgiLCJsYXN0QyIsInJlcGxhY2UiLCJtYXRjaCIsInNhdmUiLCJuYW1lc3BhY2VzIiwicmVtb3ZlSXRlbSIsInR5cGUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ0b0xvd2VyQ2FzZSIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic3R5bGUiLCJXZWJraXRBcHBlYXJhbmNlIiwiZmlyZWJ1ZyIsImV4Y2VwdGlvbiIsInRhYmxlIiwicGFyc2VJbnQiLCJSZWdFeHAiLCIkMSIsImNocm9tZSIsImxvY2FsIiwibG9jYWxTdG9yYWdlIiwibG9jYWxzdG9yYWdlIiwiY29sb3JzIiwiZm9ybWF0dGVycyIsImoiLCJ2IiwiSlNPTiIsInN0cmluZ2lmeSIsImVyciIsIm1lc3NhZ2UiLCJlbmFibGUiLCJhbk9iamVjdCIsIklFOF9ET01fREVGSU5FIiwidG9QcmltaXRpdmUiLCJkUCIsImYiLCJPIiwiUCIsIkF0dHJpYnV0ZXMiLCJUeXBlRXJyb3IiLCJnbG9iYWwiLCJNYXRoIiwic2VsZiIsIl9fZyIsImEiLCJjdHgiLCJoaWRlIiwiaGFzIiwiJGV4cG9ydCIsInNvdXJjZSIsImtleSIsIm93biIsIm91dCIsIklTX0ZPUkNFRCIsIkYiLCJJU19HTE9CQUwiLCJHIiwiSVNfU1RBVElDIiwiUyIsIklTX1BST1RPIiwiSVNfQklORCIsIkIiLCJJU19XUkFQIiwiVyIsImV4cFByb3RvIiwidGFyZ2V0IiwidW5kZWZpbmVkIiwiQyIsImIiLCJsZW5ndGgiLCJ2aXJ0dWFsIiwiUiIsIlUiLCJpdCIsImJhc2U2NGVuY29kZXIiLCJrZXlzIiwiaGFzQmluYXJ5Iiwic2xpY2VCdWZmZXIiLCJhZnRlciIsInV0ZjgiLCJBcnJheUJ1ZmZlciIsImlzQW5kcm9pZCIsInRlc3QiLCJpc1BoYW50b21KUyIsImRvbnRTZW5kQmxvYnMiLCJwcm90b2NvbCIsInBhY2tldHMiLCJvcGVuIiwiY2xvc2UiLCJwaW5nIiwicG9uZyIsInVwZ3JhZGUiLCJub29wIiwicGFja2V0c2xpc3QiLCJkYXRhIiwiQmxvYiIsIm1hcCIsImFyeSIsImVhY2giLCJkb25lIiwicmVzdWx0IiwiQXJyYXkiLCJuZXh0IiwiZWFjaFdpdGhJbmRleCIsImVsIiwiY2IiLCJlcnJvciIsIm1zZyIsImVuY29kZVBhY2tldCIsInBhY2tldCIsInN1cHBvcnRzQmluYXJ5IiwidXRmOGVuY29kZSIsImNhbGxiYWNrIiwiYnVmZmVyIiwiZW5jb2RlQmFzZTY0UGFja2V0IiwiY29udGVudEFycmF5IiwiVWludDhBcnJheSIsInJlc3VsdEJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJlbmNvZGVBcnJheUJ1ZmZlciIsImZyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsInJlYWRBc0FycmF5QnVmZmVyIiwiZW5jb2RlQmxvYkFzQXJyYXlCdWZmZXIiLCJibG9iIiwiZW5jb2RlQmxvYiIsImJhc2U2NCIsImVuY29kZUJhc2U2NE9iamVjdCIsImVuY29kZWQiLCJlbmNvZGUiLCJTdHJpbmciLCJzdHJpY3QiLCJiNjRkYXRhIiwiYjY0Iiwic3BsaXQiLCJyZWFkQXNEYXRhVVJMIiwiZnJvbUNoYXJDb2RlIiwidHlwZWQiLCJiYXNpYyIsImJ0b2EiLCJkZWNvZGVQYWNrZXQiLCJiaW5hcnlUeXBlIiwidXRmOGRlY29kZSIsImNoYXJBdCIsImRlY29kZUJhc2U2NFBhY2tldCIsInN1YnN0ciIsImRlY29kZSIsInRyeURlY29kZSIsIk51bWJlciIsInN1YnN0cmluZyIsInJlc3QiLCJlbmNvZGVQYXlsb2FkIiwiaXNCaW5hcnkiLCJlbmNvZGVQYXlsb2FkQXNCbG9iIiwiZW5jb2RlUGF5bG9hZEFzQXJyYXlCdWZmZXIiLCJkb25lQ2FsbGJhY2siLCJzZXRMZW5ndGhIZWFkZXIiLCJyZXN1bHRzIiwiam9pbiIsImRlY29kZVBheWxvYWQiLCJkZWNvZGVQYXlsb2FkQXNCaW5hcnkiLCJjaHIiLCJlbmNvZGVkUGFja2V0cyIsInRvdGFsTGVuZ3RoIiwicmVkdWNlIiwiYWNjIiwibGVuIiwidG9TdHJpbmciLCJyZXN1bHRBcnJheSIsImJ1ZmZlckluZGV4IiwiZm9yRWFjaCIsImlzU3RyaW5nIiwiYWIiLCJ2aWV3IiwiY2hhckNvZGVBdCIsImxlblN0ciIsImJpbmFyeUlkZW50aWZpZXIiLCJzaXplIiwibGVuZ3RoQXJ5IiwiYnVmZmVyVGFpbCIsImJ1ZmZlcnMiLCJ0YWlsQXJyYXkiLCJtc2dMZW5ndGgiLCJwdXNoIiwidG90YWwiLCJFbWl0dGVyIiwib2JqIiwibWl4aW4iLCJvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImZuIiwiX2NhbGxiYWNrcyIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjYWxsYmFja3MiLCJlbWl0Iiwic2xpY2UiLCJsaXN0ZW5lcnMiLCJoYXNMaXN0ZW5lcnMiLCJkZWZhdWx0IiwicHJlZml4ZWRWYWx1ZSIsImtlZXBVbnByZWZpeGVkIiwiSU9iamVjdCIsImRlZmluZWQiLCJpc09iamVjdCIsImNyZWF0ZURlc2MiLCJiaXRtYXAiLCJ3cml0YWJsZSIsImV4ZWMiLCJjb25zdHJ1Y3RvciIsInN0ciIsImVuY29kZVVSSUNvbXBvbmVudCIsInFzIiwicXJ5IiwicGFpcnMiLCJwYWlyIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiJGtleXMiLCJlbnVtQnVnS2V5cyIsImlkIiwicHgiLCJyYW5kb20iLCJjb25jYXQiLCJwYXJzZXIiLCJUcmFuc3BvcnQiLCJvcHRzIiwicGF0aCIsImhvc3RuYW1lIiwicG9ydCIsInNlY3VyZSIsInF1ZXJ5IiwidGltZXN0YW1wUGFyYW0iLCJ0aW1lc3RhbXBSZXF1ZXN0cyIsInJlYWR5U3RhdGUiLCJhZ2VudCIsInNvY2tldCIsImVuYWJsZXNYRFIiLCJwZngiLCJwYXNzcGhyYXNlIiwiY2VydCIsImNhIiwiY2lwaGVycyIsInJlamVjdFVuYXV0aG9yaXplZCIsImZvcmNlTm9kZSIsImV4dHJhSGVhZGVycyIsImxvY2FsQWRkcmVzcyIsIm9uRXJyb3IiLCJkZXNjIiwiRXJyb3IiLCJkZXNjcmlwdGlvbiIsImRvT3BlbiIsImRvQ2xvc2UiLCJvbkNsb3NlIiwic2VuZCIsIndyaXRlIiwib25PcGVuIiwib25EYXRhIiwib25QYWNrZXQiLCJoYXNDT1JTIiwieGRvbWFpbiIsInhzY2hlbWUiLCJYTUxIdHRwUmVxdWVzdCIsIlhEb21haW5SZXF1ZXN0IiwiaXNBcnJheSIsImFyciIsImJpbmFyeSIsImlzQnVmIiwiRW5jb2RlciIsInR5cGVzIiwiQ09OTkVDVCIsIkRJU0NPTk5FQ1QiLCJFVkVOVCIsIkFDSyIsIkVSUk9SIiwiQklOQVJZX0VWRU5UIiwiQklOQVJZX0FDSyIsIkRlY29kZXIiLCJFUlJPUl9QQUNLRVQiLCJlbmNvZGVBc1N0cmluZyIsImF0dGFjaG1lbnRzIiwibnNwIiwicGF5bG9hZCIsInRyeVN0cmluZ2lmeSIsInJlY29uc3RydWN0b3IiLCJCaW5hcnlSZWNvbnN0cnVjdG9yIiwicmVjb25QYWNrIiwicmVtb3ZlQmxvYnMiLCJibG9ibGVzc0RhdGEiLCJkZWNvbnN0cnVjdGlvbiIsImRlY29uc3RydWN0UGFja2V0IiwicGFjayIsInVuc2hpZnQiLCJlbmNvZGVBc0JpbmFyeSIsImFkZCIsImJ1ZiIsInBhcnNlIiwidHJ5UGFyc2UiLCJpc1BheWxvYWRWYWxpZCIsImRlY29kZVN0cmluZyIsInRha2VCaW5hcnlEYXRhIiwiZGVzdHJveSIsImZpbmlzaGVkUmVjb25zdHJ1Y3Rpb24iLCJiaW5EYXRhIiwicmVjb25zdHJ1Y3RQYWNrZXQiLCJyZWdleCIsInRvVXBwZXJDYXNlIiwicmVkNTAiLCJyZWQxMDAiLCJyZWQyMDAiLCJyZWQzMDAiLCJyZWQ0MDAiLCJyZWQ1MDAiLCJyZWQ2MDAiLCJyZWQ3MDAiLCJyZWQ4MDAiLCJyZWQ5MDAiLCJyZWRBMTAwIiwicmVkQTIwMCIsInJlZEE0MDAiLCJyZWRBNzAwIiwicGluazUwIiwicGluazEwMCIsInBpbmsyMDAiLCJwaW5rMzAwIiwicGluazQwMCIsInBpbms1MDAiLCJwaW5rNjAwIiwicGluazcwMCIsInBpbms4MDAiLCJwaW5rOTAwIiwicGlua0ExMDAiLCJwaW5rQTIwMCIsInBpbmtBNDAwIiwicGlua0E3MDAiLCJwdXJwbGU1MCIsInB1cnBsZTEwMCIsInB1cnBsZTIwMCIsInB1cnBsZTMwMCIsInB1cnBsZTQwMCIsInB1cnBsZTUwMCIsInB1cnBsZTYwMCIsInB1cnBsZTcwMCIsInB1cnBsZTgwMCIsInB1cnBsZTkwMCIsInB1cnBsZUExMDAiLCJwdXJwbGVBMjAwIiwicHVycGxlQTQwMCIsInB1cnBsZUE3MDAiLCJkZWVwUHVycGxlNTAiLCJkZWVwUHVycGxlMTAwIiwiZGVlcFB1cnBsZTIwMCIsImRlZXBQdXJwbGUzMDAiLCJkZWVwUHVycGxlNDAwIiwiZGVlcFB1cnBsZTUwMCIsImRlZXBQdXJwbGU2MDAiLCJkZWVwUHVycGxlNzAwIiwiZGVlcFB1cnBsZTgwMCIsImRlZXBQdXJwbGU5MDAiLCJkZWVwUHVycGxlQTEwMCIsImRlZXBQdXJwbGVBMjAwIiwiZGVlcFB1cnBsZUE0MDAiLCJkZWVwUHVycGxlQTcwMCIsImluZGlnbzUwIiwiaW5kaWdvMTAwIiwiaW5kaWdvMjAwIiwiaW5kaWdvMzAwIiwiaW5kaWdvNDAwIiwiaW5kaWdvNTAwIiwiaW5kaWdvNjAwIiwiaW5kaWdvNzAwIiwiaW5kaWdvODAwIiwiaW5kaWdvOTAwIiwiaW5kaWdvQTEwMCIsImluZGlnb0EyMDAiLCJpbmRpZ29BNDAwIiwiaW5kaWdvQTcwMCIsImJsdWU1MCIsImJsdWUxMDAiLCJibHVlMjAwIiwiYmx1ZTMwMCIsImJsdWU0MDAiLCJibHVlNTAwIiwiYmx1ZTYwMCIsImJsdWU3MDAiLCJibHVlODAwIiwiYmx1ZTkwMCIsImJsdWVBMTAwIiwiYmx1ZUEyMDAiLCJibHVlQTQwMCIsImJsdWVBNzAwIiwibGlnaHRCbHVlNTAiLCJsaWdodEJsdWUxMDAiLCJsaWdodEJsdWUyMDAiLCJsaWdodEJsdWUzMDAiLCJsaWdodEJsdWU0MDAiLCJsaWdodEJsdWU1MDAiLCJsaWdodEJsdWU2MDAiLCJsaWdodEJsdWU3MDAiLCJsaWdodEJsdWU4MDAiLCJsaWdodEJsdWU5MDAiLCJsaWdodEJsdWVBMTAwIiwibGlnaHRCbHVlQTIwMCIsImxpZ2h0Qmx1ZUE0MDAiLCJsaWdodEJsdWVBNzAwIiwiY3lhbjUwIiwiY3lhbjEwMCIsImN5YW4yMDAiLCJjeWFuMzAwIiwiY3lhbjQwMCIsImN5YW41MDAiLCJjeWFuNjAwIiwiY3lhbjcwMCIsImN5YW44MDAiLCJjeWFuOTAwIiwiY3lhbkExMDAiLCJjeWFuQTIwMCIsImN5YW5BNDAwIiwiY3lhbkE3MDAiLCJ0ZWFsNTAiLCJ0ZWFsMTAwIiwidGVhbDIwMCIsInRlYWwzMDAiLCJ0ZWFsNDAwIiwidGVhbDUwMCIsInRlYWw2MDAiLCJ0ZWFsNzAwIiwidGVhbDgwMCIsInRlYWw5MDAiLCJ0ZWFsQTEwMCIsInRlYWxBMjAwIiwidGVhbEE0MDAiLCJ0ZWFsQTcwMCIsImdyZWVuNTAiLCJncmVlbjEwMCIsImdyZWVuMjAwIiwiZ3JlZW4zMDAiLCJncmVlbjQwMCIsImdyZWVuNTAwIiwiZ3JlZW42MDAiLCJncmVlbjcwMCIsImdyZWVuODAwIiwiZ3JlZW45MDAiLCJncmVlbkExMDAiLCJncmVlbkEyMDAiLCJncmVlbkE0MDAiLCJncmVlbkE3MDAiLCJsaWdodEdyZWVuNTAiLCJsaWdodEdyZWVuMTAwIiwibGlnaHRHcmVlbjIwMCIsImxpZ2h0R3JlZW4zMDAiLCJsaWdodEdyZWVuNDAwIiwibGlnaHRHcmVlbjUwMCIsImxpZ2h0R3JlZW42MDAiLCJsaWdodEdyZWVuNzAwIiwibGlnaHRHcmVlbjgwMCIsImxpZ2h0R3JlZW45MDAiLCJsaWdodEdyZWVuQTEwMCIsImxpZ2h0R3JlZW5BMjAwIiwibGlnaHRHcmVlbkE0MDAiLCJsaWdodEdyZWVuQTcwMCIsImxpbWU1MCIsImxpbWUxMDAiLCJsaW1lMjAwIiwibGltZTMwMCIsImxpbWU0MDAiLCJsaW1lNTAwIiwibGltZTYwMCIsImxpbWU3MDAiLCJsaW1lODAwIiwibGltZTkwMCIsImxpbWVBMTAwIiwibGltZUEyMDAiLCJsaW1lQTQwMCIsImxpbWVBNzAwIiwieWVsbG93NTAiLCJ5ZWxsb3cxMDAiLCJ5ZWxsb3cyMDAiLCJ5ZWxsb3czMDAiLCJ5ZWxsb3c0MDAiLCJ5ZWxsb3c1MDAiLCJ5ZWxsb3c2MDAiLCJ5ZWxsb3c3MDAiLCJ5ZWxsb3c4MDAiLCJ5ZWxsb3c5MDAiLCJ5ZWxsb3dBMTAwIiwieWVsbG93QTIwMCIsInllbGxvd0E0MDAiLCJ5ZWxsb3dBNzAwIiwiYW1iZXI1MCIsImFtYmVyMTAwIiwiYW1iZXIyMDAiLCJhbWJlcjMwMCIsImFtYmVyNDAwIiwiYW1iZXI1MDAiLCJhbWJlcjYwMCIsImFtYmVyNzAwIiwiYW1iZXI4MDAiLCJhbWJlcjkwMCIsImFtYmVyQTEwMCIsImFtYmVyQTIwMCIsImFtYmVyQTQwMCIsImFtYmVyQTcwMCIsIm9yYW5nZTUwIiwib3JhbmdlMTAwIiwib3JhbmdlMjAwIiwib3JhbmdlMzAwIiwib3JhbmdlNDAwIiwib3JhbmdlNTAwIiwib3JhbmdlNjAwIiwib3JhbmdlNzAwIiwib3JhbmdlODAwIiwib3JhbmdlOTAwIiwib3JhbmdlQTEwMCIsIm9yYW5nZUEyMDAiLCJvcmFuZ2VBNDAwIiwib3JhbmdlQTcwMCIsImRlZXBPcmFuZ2U1MCIsImRlZXBPcmFuZ2UxMDAiLCJkZWVwT3JhbmdlMjAwIiwiZGVlcE9yYW5nZTMwMCIsImRlZXBPcmFuZ2U0MDAiLCJkZWVwT3JhbmdlNTAwIiwiZGVlcE9yYW5nZTYwMCIsImRlZXBPcmFuZ2U3MDAiLCJkZWVwT3JhbmdlODAwIiwiZGVlcE9yYW5nZTkwMCIsImRlZXBPcmFuZ2VBMTAwIiwiZGVlcE9yYW5nZUEyMDAiLCJkZWVwT3JhbmdlQTQwMCIsImRlZXBPcmFuZ2VBNzAwIiwiYnJvd241MCIsImJyb3duMTAwIiwiYnJvd24yMDAiLCJicm93bjMwMCIsImJyb3duNDAwIiwiYnJvd241MDAiLCJicm93bjYwMCIsImJyb3duNzAwIiwiYnJvd244MDAiLCJicm93bjkwMCIsImJsdWVHcmV5NTAiLCJibHVlR3JleTEwMCIsImJsdWVHcmV5MjAwIiwiYmx1ZUdyZXkzMDAiLCJibHVlR3JleTQwMCIsImJsdWVHcmV5NTAwIiwiYmx1ZUdyZXk2MDAiLCJibHVlR3JleTcwMCIsImJsdWVHcmV5ODAwIiwiYmx1ZUdyZXk5MDAiLCJncmV5NTAiLCJncmV5MTAwIiwiZ3JleTIwMCIsImdyZXkzMDAiLCJncmV5NDAwIiwiZ3JleTUwMCIsImdyZXk2MDAiLCJncmV5NzAwIiwiZ3JleTgwMCIsImdyZXk5MDAiLCJibGFjayIsIndoaXRlIiwidHJhbnNwYXJlbnQiLCJmdWxsQmxhY2siLCJkYXJrQmxhY2siLCJsaWdodEJsYWNrIiwibWluQmxhY2siLCJmYWludEJsYWNrIiwiZnVsbFdoaXRlIiwiZGFya1doaXRlIiwibGlnaHRXaGl0ZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiTElCUkFSWSIsIndrc0V4dCIsIiRTeW1ib2wiLCJkZWYiLCJUQUciLCJ0YWciLCJzdGF0IiwiZFBzIiwiSUVfUFJPVE8iLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsImRpc3BsYXkiLCJhcHBlbmRDaGlsZCIsInNyYyIsImNvbnRlbnRXaW5kb3ciLCJsdCIsImNyZWF0ZSIsIlByb3BlcnRpZXMiLCJjZWlsIiwiZmxvb3IiLCJpc05hTiIsInZhbCIsInZhbHVlT2YiLCJhRnVuY3Rpb24iLCJ0aGF0Iiwic2hhcmVkIiwibWFrZUVtcHR5RnVuY3Rpb24iLCJhcmciLCJlbXB0eUZ1bmN0aW9uIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsImV2IiwidG9BcnJheSIsImJpbmQiLCJwYXJzZXFzIiwiaGFzQmluIiwiU29ja2V0IiwiZXZlbnRzIiwiY29ubmVjdCIsImNvbm5lY3RfZXJyb3IiLCJjb25uZWN0X3RpbWVvdXQiLCJjb25uZWN0aW5nIiwiZGlzY29ubmVjdCIsInJlY29ubmVjdCIsInJlY29ubmVjdF9hdHRlbXB0IiwicmVjb25uZWN0X2ZhaWxlZCIsInJlY29ubmVjdF9lcnJvciIsInJlY29ubmVjdGluZyIsImlvIiwianNvbiIsImlkcyIsImFja3MiLCJyZWNlaXZlQnVmZmVyIiwic2VuZEJ1ZmZlciIsImNvbm5lY3RlZCIsImRpc2Nvbm5lY3RlZCIsImZsYWdzIiwiYXV0b0Nvbm5lY3QiLCJzdWJFdmVudHMiLCJzdWJzIiwib25vcGVuIiwib3B0aW9ucyIsImNvbXByZXNzIiwicG9wIiwib25jbG9zZSIsInJlYXNvbiIsIm9ucGFja2V0Iiwib25jb25uZWN0Iiwib25ldmVudCIsIm9uYWNrIiwib25kaXNjb25uZWN0IiwiYWNrIiwic2VudCIsImVtaXRCdWZmZXJlZCIsImluZGV4T2YiLCJwcmV2IiwiYWxwaGFiZXQiLCJzZWVkIiwibnVtIiwieWVhc3QiLCJub3ciLCJEYXRlIiwiZGVjb2RlZCIsIndpdGhOYXRpdmVCbG9iIiwid2l0aE5hdGl2ZUZpbGUiLCJGaWxlIiwiQnVmZmVyIiwiaXNCdWZmZXIiLCJ0b0pTT04iLCJpbmhlcml0IiwiUG9sbGluZyIsImhhc1hIUjIiLCJyZXNwb25zZVR5cGUiLCJmb3JjZUJhc2U2NCIsInBvbGwiLCJwYXVzZSIsIm9uUGF1c2UiLCJwb2xsaW5nIiwiZG9Qb2xsIiwiY2FsbGJhY2tmbiIsImRvV3JpdGUiLCJ1cmkiLCJzY2hlbWEiLCJzaWQiLCJYSFIiLCJKU09OUCIsIndlYnNvY2tldCIsInhkIiwieHMiLCJqc29ucCIsImxvY2F0aW9uIiwiaXNTU0wiLCJmb3JjZUpTT05QIiwiZWlvIiwiQmFja29mZiIsIk1hbmFnZXIiLCJuc3BzIiwicmVjb25uZWN0aW9uIiwicmVjb25uZWN0aW9uQXR0ZW1wdHMiLCJJbmZpbml0eSIsInJlY29ubmVjdGlvbkRlbGF5IiwicmVjb25uZWN0aW9uRGVsYXlNYXgiLCJyYW5kb21pemF0aW9uRmFjdG9yIiwiYmFja29mZiIsIm1pbiIsIm1heCIsImppdHRlciIsInRpbWVvdXQiLCJsYXN0UGluZyIsImVuY29kaW5nIiwicGFja2V0QnVmZmVyIiwiX3BhcnNlciIsImVuY29kZXIiLCJkZWNvZGVyIiwiZW1pdEFsbCIsInVwZGF0ZVNvY2tldElkcyIsImdlbmVyYXRlSWQiLCJlbmdpbmUiLCJfcmVjb25uZWN0aW9uIiwiX3JlY29ubmVjdGlvbkF0dGVtcHRzIiwiX3JlY29ubmVjdGlvbkRlbGF5Iiwic2V0TWluIiwiX3JhbmRvbWl6YXRpb25GYWN0b3IiLCJzZXRKaXR0ZXIiLCJfcmVjb25uZWN0aW9uRGVsYXlNYXgiLCJzZXRNYXgiLCJfdGltZW91dCIsIm1heWJlUmVjb25uZWN0T25PcGVuIiwiYXR0ZW1wdHMiLCJza2lwUmVjb25uZWN0Iiwib3BlblN1YiIsImVycm9yU3ViIiwiY2xlYW51cCIsInRpbWVyIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsIm9ucGluZyIsIm9ucG9uZyIsIm9uZGF0YSIsIm9uZGVjb2RlZCIsIm9uZXJyb3IiLCJvbkNvbm5lY3RpbmciLCJwcm9jZXNzUGFja2V0UXVldWUiLCJzaGlmdCIsInN1YnNMZW5ndGgiLCJyZXNldCIsImRlbGF5IiwiZHVyYXRpb24iLCJvbnJlY29ubmVjdCIsImF0dGVtcHQiLCJ3aXRoTmF0aXZlQnVmZmVyIiwid2l0aE5hdGl2ZUFycmF5QnVmZmVyIiwiaXNWaWV3IiwicmUiLCJwYXJ0cyIsImhvc3QiLCJhdXRob3JpdHkiLCJpcHY2dXJpIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZTIiLCJfaHlwaGVuYXRlU3R5bGVOYW1lIiwiYWRkSWZOZXciLCJsaXN0IiwidmFsdWVzIiwicGx1Z2lucyIsIm1ldGFEYXRhIiwicHJvY2Vzc2VkVmFsdWUiLCJjb252ZXJ0Q29sb3JUb1N0cmluZyIsImNvbnZlcnRIZXhUb1JHQiIsImRlY29tcG9zZUNvbG9yIiwiZ2V0Q29udHJhc3RSYXRpbyIsImZvcmVncm91bmQiLCJiYWNrZ3JvdW5kIiwibHVtQSIsImdldEx1bWluYW5jZSIsImx1bUIiLCJjb250cmFzdFJhdGlvIiwidG9GaXhlZCIsImVtcGhhc2l6ZSIsImNvZWZmaWNpZW50IiwiZGFya2VuIiwibGlnaHRlbiIsImZhZGUiLCJjbGFtcCIsIl93YXJuaW5nIiwiY29sb3JTdHJpbmciLCJleHRlbmRlZENvbG9yIiwibWFya2VyIiwicGFyc2VGbG9hdCIsInJnYiIsInBvdyIsIndlYnBhY2tQb2x5ZmlsbCIsImRlcHJlY2F0ZSIsInBhdGhzIiwiY2hpbGRyZW4iLCJwSUUiLCJ0b0lPYmplY3QiLCJnT1BEIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiaGlkZGVuS2V5cyIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJ0b0ludGVnZXIiLCJhcnJheUluZGV4T2YiLCJuYW1lcyIsInJlZGVmaW5lIiwiSXRlcmF0b3JzIiwiJGl0ZXJDcmVhdGUiLCJzZXRUb1N0cmluZ1RhZyIsImdldFByb3RvdHlwZU9mIiwiSVRFUkFUT1IiLCJCVUdHWSIsInJldHVyblRoaXMiLCJCYXNlIiwiTkFNRSIsIkNvbnN0cnVjdG9yIiwiREVGQVVMVCIsIklTX1NFVCIsIkZPUkNFRCIsIm1ldGhvZHMiLCJJdGVyYXRvclByb3RvdHlwZSIsImdldE1ldGhvZCIsImtpbmQiLCJwcm90byIsIkRFRl9WQUxVRVMiLCJWQUxVRVNfQlVHIiwiJG5hdGl2ZSIsIiRkZWZhdWx0IiwiJGVudHJpZXMiLCIkYW55TmF0aXZlIiwiZW50cmllcyIsIiRhdCIsIml0ZXJhdGVkIiwiX3QiLCJfaSIsInBvaW50IiwiX2l0ZXJhdG9yMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfc3ltYm9sMiIsIl90eXBlb2YiLCJpbnN0YW5jZSIsImlzIiwiY3JlYXRlRWxlbWVudCIsImZhaWxzIiwiS0VZIiwiZXhwIiwidG9PYmplY3QiLCJPYmplY3RQcm90byIsInByb3BJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsInRlc3QyIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwiY3NzIiwiYmFzZVVybCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJ0cmltIiwibWVtbyIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsImFsbCIsImF0b2IiLCJnZXRFbGVtZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJpdGVtIiwiZG9tU3R5bGUiLCJyZWZzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJuZXdTdHlsZXMiLCJiYXNlIiwicGFydCIsIm1lZGlhIiwic291cmNlTWFwIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwiaW5zZXJ0SW50byIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJhdHRycyIsImFkZEF0dHJzIiwic2V0QXR0cmlidXRlIiwidXBkYXRlIiwicmVtb3ZlIiwidHJhbnNmb3JtIiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJsaW5rIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsInVuZXNjYXBlIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsInVzZVNvdXJjZU1hcCIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImhtciIsImxvY2FscyIsIm1zIiwiZmFjdG9yIiwicmFuZCIsImRldmlhdGlvbiIsImFycmF5IiwiTm9kZVdlYlNvY2tldCIsIkJyb3dzZXJXZWJTb2NrZXQiLCJXZWJTb2NrZXQiLCJNb3pXZWJTb2NrZXQiLCJXUyIsInBlck1lc3NhZ2VEZWZsYXRlIiwidXNpbmdCcm93c2VyV2ViU29ja2V0IiwicHJvdG9jb2xzIiwiY2hlY2siLCJoZWFkZXJzIiwid3MiLCJzdXBwb3J0cyIsImFkZEV2ZW50TGlzdGVuZXJzIiwib25tZXNzYWdlIiwidGhyZXNob2xkIiwiSlNPTlBQb2xsaW5nIiwick5ld2xpbmUiLCJyRXNjYXBlZE5ld2xpbmUiLCJlbXB0eSIsIl9fX2VpbyIsInNjcmlwdCIsImZvcm0iLCJhc3luYyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYm9keSIsImFyZWEiLCJpZnJhbWVJZCIsImNsYXNzTmFtZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsIm1ldGhvZCIsImNvbXBsZXRlIiwiaW5pdElmcmFtZSIsImh0bWwiLCJhY3Rpb24iLCJzdWJtaXQiLCJhdHRhY2hFdmVudCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsIkJsb2JCdWlsZGVyIiwiV2ViS2l0QmxvYkJ1aWxkZXIiLCJNU0Jsb2JCdWlsZGVyIiwiTW96QmxvYkJ1aWxkZXIiLCJibG9iU3VwcG9ydGVkIiwiYmxvYlN1cHBvcnRzQXJyYXlCdWZmZXJWaWV3IiwiYmxvYkJ1aWxkZXJTdXBwb3J0ZWQiLCJhcHBlbmQiLCJnZXRCbG9iIiwibWFwQXJyYXlCdWZmZXJWaWV3cyIsImNodW5rIiwiY29weSIsInNldCIsImJ5dGVPZmZzZXQiLCJCbG9iQnVpbGRlckNvbnN0cnVjdG9yIiwiYmIiLCJCbG9iQ29uc3RydWN0b3IiLCJjaGFycyIsImxvb2t1cCIsImFycmF5YnVmZmVyIiwiYnl0ZXMiLCJlbmNvZGVkMSIsImVuY29kZWQyIiwiZW5jb2RlZDMiLCJlbmNvZGVkNCIsImJ1ZmZlckxlbmd0aCIsIl9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fIiwicm9vdCIsImZyZWVFeHBvcnRzIiwiZnJlZUdsb2JhbCIsImJ5dGVBcnJheSIsImJ5dGVDb3VudCIsImJ5dGVJbmRleCIsInN0cmluZ0Zyb21DaGFyQ29kZSIsInVjczJkZWNvZGUiLCJzdHJpbmciLCJleHRyYSIsIm91dHB1dCIsImNvdW50ZXIiLCJjaGVja1NjYWxhclZhbHVlIiwiY29kZVBvaW50IiwiY3JlYXRlQnl0ZSIsImVuY29kZUNvZGVQb2ludCIsInN5bWJvbCIsInJlYWRDb250aW51YXRpb25CeXRlIiwiY29udGludWF0aW9uQnl0ZSIsImRlY29kZVN5bWJvbCIsImJ5dGUxIiwiY29kZVBvaW50cyIsImJ5dGVTdHJpbmciLCJ0bXAiLCJ1Y3MyZW5jb2RlIiwiY291bnQiLCJlcnJfY2IiLCJiYWlsIiwicHJveHkiLCJzdGFydCIsImVuZCIsImFidiIsImlpIiwicmVxdWVzdFRpbWVvdXQiLCJSZXF1ZXN0IiwidW5sb2FkSGFuZGxlciIsInJlcXVlc3RzIiwiYWJvcnQiLCJyZXF1ZXN0IiwicmVxIiwic2VuZFhociIsInBvbGxYaHIiLCJ4aHIiLCJzZXREaXNhYmxlSGVhZGVyQ2hlY2siLCJzZXRSZXF1ZXN0SGVhZGVyIiwid2l0aENyZWRlbnRpYWxzIiwiaGFzWERSIiwib25Mb2FkIiwicmVzcG9uc2VUZXh0IiwiY29udGVudFR5cGUiLCJnZXRSZXNwb25zZUhlYWRlciIsInN0YXR1cyIsInJlcXVlc3RzQ291bnQiLCJvblN1Y2Nlc3MiLCJmcm9tRXJyb3IiLCJyZXNwb25zZSIsInRyYW5zcG9ydHMiLCJwYXJzZXVyaSIsInRyYW5zcG9ydE9wdGlvbnMiLCJ3cml0ZUJ1ZmZlciIsInByZXZCdWZmZXJMZW4iLCJwb2xpY3lQb3J0IiwicmVtZW1iZXJVcGdyYWRlIiwib25seUJpbmFyeVVwZ3JhZGVzIiwidXBncmFkZXMiLCJwaW5nSW50ZXJ2YWwiLCJwaW5nVGltZW91dCIsInBpbmdJbnRlcnZhbFRpbWVyIiwicGluZ1RpbWVvdXRUaW1lciIsInByaW9yV2Vic29ja2V0U3VjY2VzcyIsImNyZWF0ZVRyYW5zcG9ydCIsImNsb25lIiwiRUlPIiwidHJhbnNwb3J0Iiwic2V0VHJhbnNwb3J0Iiwib25EcmFpbiIsInByb2JlIiwiZmFpbGVkIiwib25UcmFuc3BvcnRPcGVuIiwidXBncmFkZUxvc2VzQmluYXJ5IiwidXBncmFkaW5nIiwiZmx1c2giLCJmcmVlemVUcmFuc3BvcnQiLCJvblRyYW5zcG9ydENsb3NlIiwib251cGdyYWRlIiwib25IYW5kc2hha2UiLCJzZXRQaW5nIiwiY29kZSIsImZpbHRlclVwZ3JhZGVzIiwib25IZWFydGJlYXQiLCJzZW5kUGFja2V0Iiwid2FpdEZvclVwZ3JhZGUiLCJjbGVhbnVwQW5kQ2xvc2UiLCJmaWx0ZXJlZFVwZ3JhZGVzIiwicGFja2V0RGF0YSIsIl9kZWNvbnN0cnVjdFBhY2tldCIsInBsYWNlaG9sZGVyIiwiX3BsYWNlaG9sZGVyIiwibmV3RGF0YSIsIl9yZWNvbnN0cnVjdFBhY2tldCIsInBlbmRpbmdCbG9icyIsIl9yZW1vdmVCbG9icyIsImN1cktleSIsImNvbnRhaW5pbmdPYmplY3QiLCJmaWxlUmVhZGVyIiwiaCIsInkiLCJwbHVyYWwiLCJsb25nIiwicm91bmQiLCJmbXRTaG9ydCIsImNyZWF0ZURlYnVnIiwicHJldlRpbWUiLCJlbmFibGVkIiwiY3VyciIsImNvZXJjZSIsImZvcm1hdCIsImZvcm1hdHRlciIsImhhc2giLCJhYnMiLCJzZWxlY3RDb2xvciIsImluaXQiLCJpbnN0YW5jZXMiLCJzdGFjayIsImRpc2FibGUiLCJza2lwcyIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjdXJyZW50UXVldWUiLCJxdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJydW4iLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwibmV4dFRpY2siLCJ0aXRsZSIsImJyb3dzZXIiLCJhcmd2IiwidmVyc2lvbnMiLCJhZGRMaXN0ZW5lciIsInByZXBlbmRMaXN0ZW5lciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJiaW5kaW5nIiwiY3dkIiwiY2hkaXIiLCJkaXIiLCJ1bWFzayIsImxvYyIsInVybCIsImNhY2hlIiwibWFuYWdlcnMiLCJwYXJzZWQiLCJzYW1lTmFtZXNwYWNlIiwiZm9yY2VOZXciLCJtdWx0aXBsZXgiLCJfcmVhY3QiLCJTdG9jayIsInByb3BzIiwiX2NsYXNzQ2FsbENoZWNrIiwiX3RoaXMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsInNvY2tldElvIiwiX3NvY2tldDIiLCJzdGF0ZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY2xhc3NDYWxsQ2hlY2szIiwiX2NvbG9ycyIsIlR5cG9ncmFwaHkiLCJ0ZXh0RnVsbEJsYWNrIiwidGV4dERhcmtCbGFjayIsInRleHRMaWdodEJsYWNrIiwidGV4dE1pbkJsYWNrIiwidGV4dEZ1bGxXaGl0ZSIsInRleHREYXJrV2hpdGUiLCJ0ZXh0TGlnaHRXaGl0ZSIsImZvbnRXZWlnaHRMaWdodCIsImZvbnRXZWlnaHROb3JtYWwiLCJmb250V2VpZ2h0TWVkaXVtIiwiZm9udFN0eWxlQnV0dG9uRm9udFNpemUiLCJfbGVuIiwiZnVuY3MiLCJfa2V5IiwiX2tleXMiLCJfa2V5czIiLCJtdWlUaGVtZSIsImlzUnRsIiwiZGlyZWN0aW9uSW52YXJpYW50IiwiZmxpcHBlZEF0dHJpYnV0ZXMiLCJyaWdodCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luTGVmdCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdMZWZ0IiwiYm9yZGVyUmlnaHQiLCJib3JkZXJMZWZ0IiwibmV3U3R5bGUiLCJhdHRyaWJ1dGUiLCJtYXRjaGVzIiwicmVUcmFuc2xhdGUiLCJyZVNrZXciLCJwcm9wZXJ0eVByZWZpeE1hcCIsInByb3BlcnRpZXMiLCJvdXRwdXRWYWx1ZSIsIl9pc1ByZWZpeGVkVmFsdWUyIiwibXVsdGlwbGVWYWx1ZXMiLCJzaW5nbGVWYWx1ZSIsImRhc2hDYXNlUHJvcGVydHkiLCJfaHlwaGVuYXRlUHJvcGVydHkyIiwicHJlZml4ZXMiLCJwTGVuIiwicHJlZml4TWFwcGluZyIsInByZWZpeFZhbHVlIiwid2Via2l0T3V0cHV0IiwibW96T3V0cHV0IiwiX2NhcGl0YWxpemVTdHJpbmcyIiwidHJhbnNpdGlvbiIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIldlYmtpdFRyYW5zaXRpb24iLCJXZWJraXRUcmFuc2l0aW9uUHJvcGVydHkiLCJNb3pUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvblByb3BlcnR5IiwiV2Via2l0IiwiTW96IiwicHJlZml4IiwibWF4SGVpZ2h0IiwibWF4V2lkdGgiLCJ3aWR0aCIsImhlaWdodCIsImNvbHVtbldpZHRoIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJtaW4tY29udGVudCIsIm1heC1jb250ZW50IiwiZmlsbC1hdmFpbGFibGUiLCJmaXQtY29udGVudCIsImNvbnRhaW4tZmxvYXRzIiwiX2lzUHJlZml4ZWRWYWx1ZSIsIldlYmtpdEJveE9yaWVudCIsIldlYmtpdEJveERpcmVjdGlvbiIsImFsdGVybmF0aXZlUHJvcHMiLCJhbHRlcm5hdGl2ZVZhbHVlcyIsInNwYWNlLWFyb3VuZCIsInNwYWNlLWJldHdlZW4iLCJmbGV4LXN0YXJ0IiwiZmxleC1lbmQiLCJ3cmFwLXJldmVyc2UiLCJ3cmFwIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleFdyYXAiLCJhbGlnbkNvbnRlbnQiLCJhbGlnblNlbGYiLCJvcmRlciIsImZsZXhHcm93IiwiZmxleFNocmluayIsImZsZXhCYXNpcyIsImZsZXgiLCJpbmxpbmUtZmxleCIsIl9jYWxjMiIsIl9mbGV4MiIsIl9mbGV4Ym94SUUyIiwiX2ZsZXhib3hPbGQyIiwiX2dyYWRpZW50MiIsIl9zaXppbmcyIiwiX3RyYW5zaXRpb24yIiwicHJlZml4TWFwIiwidHJhbnNmb3JtT3JpZ2luIiwidHJhbnNmb3JtT3JpZ2luWCIsInRyYW5zZm9ybU9yaWdpblkiLCJiYWNrZmFjZVZpc2liaWxpdHkiLCJwZXJzcGVjdGl2ZSIsInBlcnNwZWN0aXZlT3JpZ2luIiwidHJhbnNmb3JtU3R5bGUiLCJ0cmFuc2Zvcm1PcmlnaW5aIiwiYW5pbWF0aW9uIiwiYW5pbWF0aW9uRGVsYXkiLCJhbmltYXRpb25EaXJlY3Rpb24iLCJhbmltYXRpb25GaWxsTW9kZSIsImFuaW1hdGlvbkR1cmF0aW9uIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJhbmltYXRpb25OYW1lIiwiYW5pbWF0aW9uUGxheVN0YXRlIiwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb24iLCJhcHBlYXJhbmNlIiwidXNlclNlbGVjdCIsImZvbnRLZXJuaW5nIiwidGV4dEVtcGhhc2lzUG9zaXRpb24iLCJ0ZXh0RW1waGFzaXMiLCJ0ZXh0RW1waGFzaXNTdHlsZSIsInRleHRFbXBoYXNpc0NvbG9yIiwiYm94RGVjb3JhdGlvbkJyZWFrIiwiY2xpcFBhdGgiLCJtYXNrSW1hZ2UiLCJtYXNrTW9kZSIsIm1hc2tSZXBlYXQiLCJtYXNrUG9zaXRpb24iLCJtYXNrQ2xpcCIsIm1hc2tPcmlnaW4iLCJtYXNrU2l6ZSIsIm1hc2tDb21wb3NpdGUiLCJtYXNrIiwibWFza0JvcmRlclNvdXJjZSIsIm1hc2tCb3JkZXJNb2RlIiwibWFza0JvcmRlclNsaWNlIiwibWFza0JvcmRlcldpZHRoIiwibWFza0JvcmRlck91dHNldCIsIm1hc2tCb3JkZXJSZXBlYXQiLCJtYXNrQm9yZGVyIiwibWFza1R5cGUiLCJ0ZXh0RGVjb3JhdGlvblN0eWxlIiwidGV4dERlY29yYXRpb25Ta2lwIiwidGV4dERlY29yYXRpb25MaW5lIiwidGV4dERlY29yYXRpb25Db2xvciIsImZvbnRGZWF0dXJlU2V0dGluZ3MiLCJicmVha0FmdGVyIiwiYnJlYWtCZWZvcmUiLCJicmVha0luc2lkZSIsImNvbHVtbkNvdW50IiwiY29sdW1uRmlsbCIsImNvbHVtbkdhcCIsImNvbHVtblJ1bGUiLCJjb2x1bW5SdWxlQ29sb3IiLCJjb2x1bW5SdWxlU3R5bGUiLCJjb2x1bW5SdWxlV2lkdGgiLCJjb2x1bW5zIiwiY29sdW1uU3BhbiIsImZsZXhEaXJlY3Rpb24iLCJmbGV4RmxvdyIsInRyYW5zaXRpb25EZWxheSIsInRyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiIsImJhY2tkcm9wRmlsdGVyIiwic2Nyb2xsU25hcFR5cGUiLCJzY3JvbGxTbmFwUG9pbnRzWCIsInNjcm9sbFNuYXBQb2ludHNZIiwic2Nyb2xsU25hcERlc3RpbmF0aW9uIiwic2Nyb2xsU25hcENvb3JkaW5hdGUiLCJzaGFwZUltYWdlVGhyZXNob2xkIiwic2hhcGVJbWFnZU1hcmdpbiIsInNoYXBlSW1hZ2VPdXRzaWRlIiwiaHlwaGVucyIsImZsb3dJbnRvIiwiZmxvd0Zyb20iLCJyZWdpb25GcmFnbWVudCIsImJveFNpemluZyIsInRleHRBbGlnbkxhc3QiLCJ0YWJTaXplIiwid3JhcEZsb3ciLCJ3cmFwVGhyb3VnaCIsIndyYXBNYXJnaW4iLCJ0b3VjaEFjdGlvbiIsImdyaWRUZW1wbGF0ZUNvbHVtbnMiLCJncmlkVGVtcGxhdGVSb3dzIiwiZ3JpZFRlbXBsYXRlQXJlYXMiLCJncmlkVGVtcGxhdGUiLCJncmlkQXV0b0NvbHVtbnMiLCJncmlkQXV0b1Jvd3MiLCJncmlkQXV0b0Zsb3ciLCJncmlkIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtblN0YXJ0IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3ciLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5HYXAiLCJncmlkUm93R2FwIiwiZ3JpZEFyZWEiLCJncmlkR2FwIiwidGV4dFNpemVBZGp1c3QiLCJib3JkZXJJbWFnZSIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VSZXBlYXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VTb3VyY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwidXBwZXJjYXNlUGF0dGVybiIsIm1zUGF0dGVybiIsIl9yZWYiLCJjc3NQcmVmaXgiLCJyZXF1aXJlc1ByZWZpeCIsInJlcXVpcmVzUHJlZml4RGFzaENhc2VkIiwicHJvcCIsIl9oeXBoZW5hdGVQcm9wZXJ0eSIsIl9nZXRQcmVmaXhlZFZhbHVlMiIsIl9nZXRQcmVmaXhlZFZhbHVlIiwiYnJvd3Nlck5hbWUiLCJicm93c2VyVmVyc2lvbiIsInNhZmFyaSIsImZpcmVmb3giLCJvcGVyYSIsImllIiwiZWRnZSIsImlvc19zYWYiLCJhbmRyb2lkIiwiYW5kX2NociIsImFuZF91YyIsIm9wX21pbmkiLCJkZWZpbml0aW9uIiwidCIsImRldGVjdCIsInVhIiwiZ2V0Rmlyc3RNYXRjaCIsImdldFNlY29uZE1hdGNoIiwiaW9zZGV2aWNlIiwibmV4dXNNb2JpbGUiLCJuZXh1c1RhYmxldCIsImNocm9tZW9zIiwic2lsayIsInNhaWxmaXNoIiwidGl6ZW4iLCJ3ZWJvcyIsIndpbmRvd3NwaG9uZSIsIndpbmRvd3MiLCJtYWMiLCJsaW51eCIsImVkZ2VWZXJzaW9uIiwidmVyc2lvbklkZW50aWZpZXIiLCJ0YWJsZXQiLCJtb2JpbGUiLCJ4Ym94Iiwic2Ftc3VuZ0Jyb3dzZXIiLCJjb2FzdCIsInlhbmRleGJyb3dzZXIiLCJ1Y2Jyb3dzZXIiLCJtYXh0aG9uIiwiZXBpcGhhbnkiLCJwdWZmaW4iLCJzbGVpcG5pciIsImtNZWxlb24iLCJvc25hbWUiLCJtc2VkZ2UiLCJtc2llIiwiY2hyb21lQm9vayIsInZpdmFsZGkiLCJzZWFtb25rZXkiLCJmaXJlZm94b3MiLCJwaGFudG9tIiwic2xpbWVyIiwiYmxhY2tiZXJyeSIsInRvdWNocGFkIiwiYmFkYSIsInF1cHppbGxhIiwiY2hyb21pdW0iLCJnb29nbGVib3QiLCJibGluayIsIndlYmtpdCIsImdlY2tvIiwiaW9zIiwib3NWZXJzaW9uIiwiZ2V0V2luZG93c1ZlcnNpb24iLCJvc3ZlcnNpb24iLCJvc01ham9yVmVyc2lvbiIsIngiLCJib3dzZXIiLCJnZXRWZXJzaW9uUHJlY2lzaW9uIiwiaXRlcmF0b3IiLCJjb21wYXJlVmVyc2lvbnMiLCJwcmVjaXNpb24iLCJjaHVua3MiLCJkZWx0YSIsInJldmVyc2UiLCJpc1Vuc3VwcG9ydGVkQnJvd3NlciIsIm1pblZlcnNpb25zIiwic3RyaWN0TW9kZSIsIl9ib3dzZXIiLCJicm93c2VyTGlzdCIsImJyb3dzZXJJdGVtIiwiX2RldGVjdCIsImJyb3dzZXJJbmZvIiwiX2Jvd3NlcjIiLCJwcmVmaXhCeUJyb3dzZXIiLCJqc1ByZWZpeCIsImJyb3dzZXJCeUNhbkl1c2VBbGlhcyIsImdldEJyb3dzZXJOYW1lIiwic2VhbW9uZXkiLCJmaXJmb3giLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVzY3JpcHRvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsImZhbGxiYWNrIiwiUHJlZml4ZXIiLCJkZWZhdWx0VXNlckFnZW50IiwiX3VzZXJBZ2VudCIsIl9rZWVwVW5wcmVmaXhlZCIsIl9icm93c2VySW5mbyIsIl9nZXRCcm93c2VySW5mb3JtYXRpb24yIiwiX3VzZUZhbGxiYWNrIiwicHJlZml4ZWRLZXlmcmFtZXMiLCJfZ2V0UHJlZml4ZWRLZXlmcmFtZXMyIiwicHJlZml4RGF0YSIsIl9yZXF1aXJlc1ByZWZpeCIsIl9oYXNQcm9wc1JlcXVpcmluZ1ByZWZpeCIsIl9tZXRhRGF0YSIsIl9wcmVmaXhTdHlsZSIsIl9pc09iamVjdDIiLCJjb21iaW5lZFZhbHVlIiwiX3ByZWZpeFZhbHVlMiIsIl9hZGROZXdWYWx1ZXNPbmx5MiIsIl9wcm9jZXNzZWRWYWx1ZSIsInByZWZpeFByb3BlcnRpZXMiLCJyZXF1aXJlZFByZWZpeGVzIiwiX2NhcGl0YWxpemVTdHJpbmciLCJwcmVmaXhBbGwiLCJfcHJlZml4UHJvcGVydHkyIiwiaXNDbGllbnQiLCJoYXNXYXJuZWRBYm91dFVzZXJBZ2VudCIsIl9jcmVhdGVQcmVmaXhlcjIiLCJfYXV0b3ByZWZpeGVyU3RhdGljMiIsImlzRmxleCIsInN0eWxlUHJlZml4ZWQiLCJwcmVmaXhlciIsIl9jcmVhdGVQcmVmaXhlcjQiLCJfYXV0b3ByZWZpeGVyRHluYW1pYzIiLCJtZW51IiwiYXBwQmFyIiwiZHJhd2VyT3ZlcmxheSIsImRyYXdlciIsImRpYWxvZ092ZXJsYXkiLCJkaWFsb2ciLCJsYXllciIsInBvcG92ZXIiLCJzbmFja2JhciIsInRvb2x0aXAiLCJpY29uU2l6ZSIsImRlc2t0b3BHdXR0ZXIiLCJkZXNrdG9wR3V0dGVyTW9yZSIsImRlc2t0b3BHdXR0ZXJMZXNzIiwiZGVza3RvcEd1dHRlck1pbmkiLCJkZXNrdG9wS2V5bGluZUluY3JlbWVudCIsImRlc2t0b3BEcm9wRG93bk1lbnVJdGVtSGVpZ2h0IiwiZGVza3RvcERyb3BEb3duTWVudUZvbnRTaXplIiwiZGVza3RvcERyYXdlck1lbnVJdGVtSGVpZ2h0IiwiZGVza3RvcFN1YmhlYWRlckhlaWdodCIsImRlc2t0b3BUb29sYmFySGVpZ2h0IiwiX2NvbG9yTWFuaXB1bGF0b3IiLCJfc3BhY2luZyIsIl9zcGFjaW5nMiIsInNwYWNpbmciLCJmb250RmFtaWx5IiwiYm9yZGVyUmFkaXVzIiwicGFsZXR0ZSIsInByaW1hcnkxQ29sb3IiLCJwcmltYXJ5MkNvbG9yIiwicHJpbWFyeTNDb2xvciIsImFjY2VudDFDb2xvciIsImFjY2VudDJDb2xvciIsImFjY2VudDNDb2xvciIsInRleHRDb2xvciIsInNlY29uZGFyeVRleHRDb2xvciIsImFsdGVybmF0ZVRleHRDb2xvciIsImNhbnZhc0NvbG9yIiwiYm9yZGVyQ29sb3IiLCJkaXNhYmxlZENvbG9yIiwicGlja2VySGVhZGVyQ29sb3IiLCJjbG9ja0NpcmNsZUNvbG9yIiwic2hhZG93Q29sb3IiLCJMQVJHRV9BUlJBWV9TSVpFIiwiSEFTSF9VTkRFRklORUQiLCJIT1RfQ09VTlQiLCJIT1RfU1BBTiIsIk1BWF9TQUZFX0lOVEVHRVIiLCJhcmdzVGFnIiwiYXN5bmNUYWciLCJmdW5jVGFnIiwiZ2VuVGFnIiwibnVsbFRhZyIsIm9iamVjdFRhZyIsInByb3h5VGFnIiwidW5kZWZpbmVkVGFnIiwicmVJc0hvc3RDdG9yIiwicmVJc1VpbnQiLCJ0eXBlZEFycmF5VGFncyIsImZyZWVTZWxmIiwibm9kZVR5cGUiLCJmcmVlTW9kdWxlIiwibW9kdWxlRXhwb3J0cyIsImZyZWVQcm9jZXNzIiwibm9kZVV0aWwiLCJub2RlSXNUeXBlZEFycmF5IiwiaXNUeXBlZEFycmF5Iiwic2FmZUdldCIsImZ1bmMiLCJhcnJheVByb3RvIiwiZnVuY1Byb3RvIiwib2JqZWN0UHJvdG8iLCJjb3JlSnNEYXRhIiwiZnVuY1RvU3RyaW5nIiwibWFza1NyY0tleSIsIm5hdGl2ZU9iamVjdFRvU3RyaW5nIiwib2JqZWN0Q3RvclN0cmluZyIsInJlSXNOYXRpdmUiLCJhbGxvY1Vuc2FmZSIsImdldFByb3RvdHlwZSIsIm9iamVjdENyZWF0ZSIsInN5bVRvU3RyaW5nVGFnIiwidG9TdHJpbmdUYWciLCJnZXROYXRpdmUiLCJuYXRpdmVJc0J1ZmZlciIsIm5hdGl2ZU1heCIsIm5hdGl2ZU5vdyIsIk1hcCIsIm5hdGl2ZUNyZWF0ZSIsImJhc2VDcmVhdGUiLCJIYXNoIiwiY2xlYXIiLCJlbnRyeSIsIkxpc3RDYWNoZSIsIk1hcENhY2hlIiwiU3RhY2siLCJfX2RhdGFfXyIsImFycmF5TGlrZUtleXMiLCJpbmhlcml0ZWQiLCJpc0FyciIsImlzQXJnIiwiaXNBcmd1bWVudHMiLCJpc0J1ZmYiLCJpc1R5cGUiLCJza2lwSW5kZXhlcyIsIml0ZXJhdGVlIiwiYmFzZVRpbWVzIiwiaXNJbmRleCIsImFzc2lnbk1lcmdlVmFsdWUiLCJlcSIsImJhc2VBc3NpZ25WYWx1ZSIsImFzc2lnblZhbHVlIiwib2JqVmFsdWUiLCJhc3NvY0luZGV4T2YiLCJnZXRNYXBEYXRhIiwiZnJvbVJpZ2h0IiwiYmFzZUZvciIsImtleXNGdW5jIiwiaXRlcmFibGUiLCJiYXNlR2V0VGFnIiwiaXNPd24iLCJ1bm1hc2tlZCIsImdldFJhd1RhZyIsIm9iamVjdFRvU3RyaW5nIiwiYmFzZUlzQXJndW1lbnRzIiwiaXNPYmplY3RMaWtlIiwiYmFzZUlzTmF0aXZlIiwiaXNGdW5jdGlvbiIsInRvU291cmNlIiwiYmFzZUtleXNJbiIsIm5hdGl2ZUtleXNJbiIsImlzUHJvdG8iLCJpc1Byb3RvdHlwZSIsImJhc2VNZXJnZSIsInNyY0luZGV4IiwiY3VzdG9taXplciIsInNyY1ZhbHVlIiwibWVyZ2VGdW5jIiwic3RhY2tlZCIsIm5ld1ZhbHVlIiwiaXNDb21tb24iLCJpc1R5cGVkIiwiaXNBcnJheUxpa2UiLCJjb3B5QXJyYXkiLCJpc0RlZXAiLCJjbG9uZUJ1ZmZlciIsInR5cGVkQXJyYXkiLCJhcnJheUJ1ZmZlciIsIkN0b3IiLCJpc1BsYWluT2JqZWN0IiwiaXNOZXciLCJjb3B5T2JqZWN0Iiwia2V5c0luIiwidG9QbGFpbk9iamVjdCIsImluaXRDbG9uZU9iamVjdCIsImJhc2VNZXJnZURlZXAiLCJiYXNlUmVzdCIsInNldFRvU3RyaW5nIiwib3RoZXJBcmdzIiwidGhpc0FyZyIsIm92ZXJSZXN0IiwiaWRlbnRpdHkiLCJnZXRWYWx1ZSIsImxhc3RDYWxsZWQiLCJzdGFtcCIsInJlbWFpbmluZyIsInNob3J0T3V0Iiwib3RoZXIiLCJpc0xlbmd0aCIsImJhc2VVbmFyeSIsImFzc2lnbmVyIiwibWVyZ2UiLCJndWFyZCIsImlzSXRlcmF0ZWVDYWxsIiwiU0FGRV9DTE9TSU5HIiwicml0ZXIiLCJza2lwQ2xvc2luZyIsInNhZmUiLCJpdGVyIiwiY29mIiwiQVJHIiwiVCIsInRyeUdldCIsImNhbGxlZSIsImNsYXNzb2YiLCJnZXRJdGVyYXRvck1ldGhvZCIsIiRkZWZpbmVQcm9wZXJ0eSIsIkFycmF5UHJvdG8iLCJyZXQiLCJpc0FycmF5SXRlciIsInRvTGVuZ3RoIiwiY3JlYXRlUHJvcGVydHkiLCJnZXRJdGVyRm4iLCJhcnJheUxpa2UiLCJzdGVwIiwiYUxlbiIsIm1hcGZuIiwibWFwcGluZyIsIml0ZXJGbiIsIl9mcm9tIiwiX2Zyb20yIiwiYXJyMiIsIl90b0NvbnN1bWFibGVBcnJheTMiLCJtb3JlIiwiX211aVRoZW1lIiwiX2xvZGFzaDIiLCJ6SW5kZXgiLCJfekluZGV4MiIsIl9saWdodEJhc2VUaGVtZTIiLCJiYXNlVGhlbWUiLCJ0aXRsZUZvbnRXZWlnaHQiLCJfdHlwb2dyYXBoeTIiLCJwYWRkaW5nIiwiYXZhdGFyIiwiYmFja2dyb3VuZENvbG9yIiwiYmFkZ2UiLCJwcmltYXJ5Q29sb3IiLCJwcmltYXJ5VGV4dENvbG9yIiwic2Vjb25kYXJ5Q29sb3IiLCJmb250V2VpZ2h0IiwiYm90dG9tTmF2aWdhdGlvbiIsInVuc2VsZWN0ZWRDb2xvciIsInNlbGVjdGVkQ29sb3IiLCJ1bnNlbGVjdGVkRm9udFNpemUiLCJzZWxlY3RlZEZvbnRTaXplIiwiYnV0dG9uIiwiaWNvbkJ1dHRvblNpemUiLCJjYXJkIiwidGl0bGVDb2xvciIsInN1YnRpdGxlQ29sb3IiLCJjYXJkTWVkaWEiLCJvdmVybGF5Q29udGVudEJhY2tncm91bmQiLCJjYXJkVGV4dCIsImNoZWNrYm94IiwiYm94Q29sb3IiLCJjaGVja2VkQ29sb3IiLCJyZXF1aXJlZENvbG9yIiwibGFiZWxDb2xvciIsImxhYmVsRGlzYWJsZWRDb2xvciIsImNoaXAiLCJkZWxldGVJY29uQ29sb3IiLCJmb250U2l6ZSIsInNoYWRvdyIsImRhdGVQaWNrZXIiLCJjYWxlbmRhclRleHRDb2xvciIsInNlbGVjdFRleHRDb2xvciIsImNhbGVuZGFyWWVhckJhY2tncm91bmRDb2xvciIsImhlYWRlckNvbG9yIiwidGl0bGVGb250U2l6ZSIsImJvZHlGb250U2l6ZSIsImJvZHlDb2xvciIsImRyb3BEb3duTWVudSIsImFjY2VudENvbG9yIiwiZW5oYW5jZWRCdXR0b24iLCJ0YXBIaWdobGlnaHRDb2xvciIsImZsYXRCdXR0b24iLCJidXR0b25GaWx0ZXJDb2xvciIsImRpc2FibGVkVGV4dENvbG9yIiwiZmxvYXRpbmdBY3Rpb25CdXR0b24iLCJidXR0b25TaXplIiwibWluaVNpemUiLCJpY29uQ29sb3IiLCJzZWNvbmRhcnlJY29uQ29sb3IiLCJncmlkVGlsZSIsImljb24iLCJpbmtCYXIiLCJsaXN0SXRlbSIsIm5lc3RlZExldmVsRGVwdGgiLCJsZWZ0SWNvbkNvbG9yIiwicmlnaHRJY29uQ29sb3IiLCJjb250YWluZXJCYWNrZ3JvdW5kQ29sb3IiLCJtZW51SXRlbSIsImRhdGFIZWlnaHQiLCJob3ZlckNvbG9yIiwic2VsZWN0ZWRUZXh0Q29sb3IiLCJyaWdodEljb25EZXNrdG9wRmlsbCIsIm1lbnVTdWJoZWFkZXIiLCJvdmVybGF5IiwicGFwZXIiLCJ6RGVwdGhTaGFkb3dzIiwicmFkaW9CdXR0b24iLCJyYWlzZWRCdXR0b24iLCJyZWZyZXNoSW5kaWNhdG9yIiwic3Ryb2tlQ29sb3IiLCJsb2FkaW5nU3Ryb2tlQ29sb3IiLCJyaXBwbGUiLCJzbGlkZXIiLCJ0cmFja1NpemUiLCJ0cmFja0NvbG9yIiwidHJhY2tDb2xvclNlbGVjdGVkIiwiaGFuZGxlU2l6ZSIsImhhbmRsZVNpemVEaXNhYmxlZCIsImhhbmRsZVNpemVBY3RpdmUiLCJoYW5kbGVDb2xvclplcm8iLCJoYW5kbGVGaWxsQ29sb3IiLCJzZWxlY3Rpb25Db2xvciIsInJpcHBsZUNvbG9yIiwiYWN0aW9uQ29sb3IiLCJzdWJoZWFkZXIiLCJzdGVwcGVyIiwiaG92ZXJCYWNrZ3JvdW5kQ29sb3IiLCJob3ZlcmVkSWNvbkNvbG9yIiwiaW5hY3RpdmVJY29uQ29sb3IiLCJjb25uZWN0b3JMaW5lQ29sb3IiLCJzdmdJY29uIiwidGFibGVGb290ZXIiLCJ0YWJsZUhlYWRlciIsInRhYmxlSGVhZGVyQ29sdW1uIiwidGFibGVSb3ciLCJzdHJpcGVDb2xvciIsInRhYmxlUm93Q29sdW1uIiwidGFicyIsInRleHRGaWVsZCIsImhpbnRDb2xvciIsImZsb2F0aW5nTGFiZWxDb2xvciIsImVycm9yQ29sb3IiLCJmb2N1c0NvbG9yIiwidGltZVBpY2tlciIsImNsb2NrQ29sb3IiLCJ0b2dnbGUiLCJ0aHVtYk9uQ29sb3IiLCJ0aHVtYk9mZkNvbG9yIiwidGh1bWJEaXNhYmxlZENvbG9yIiwidGh1bWJSZXF1aXJlZENvbG9yIiwidHJhY2tPbkNvbG9yIiwidHJhY2tPZmZDb2xvciIsInRyYWNrRGlzYWJsZWRDb2xvciIsInRyYWNrUmVxdWlyZWRDb2xvciIsInRvb2xiYXIiLCJzZXBhcmF0b3JDb2xvciIsIm1lbnVIb3ZlckNvbG9yIiwicmlwcGxlQmFja2dyb3VuZENvbG9yIiwib3BhY2l0eSIsInJhd1RoZW1lIiwidHJhbnNmb3JtZXJzIiwiX2F1dG9wcmVmaXhlcjIiLCJfcnRsMiIsIl9jYWxsT25jZTIiLCJwcmVwYXJlU3R5bGVzIiwiX2NvbXBvc2UyIiwidmFsaWRhdGVGb3JtYXQiLCJjb25kaXRpb24iLCJhcmdJbmRleCIsImZyYW1lc1RvUG9wIiwiaW52YXJpYW50IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImJvb2wiLCJudW1iZXIiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudCIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIiRPYmplY3QiLCJEIiwic2V0UHJvdG90eXBlT2YiLCJidWdneSIsIl9zZXRQcm90b3R5cGVPZjIiLCJfY3JlYXRlMiIsIl90eXBlb2YzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiZ09QTiIsIndpbmRvd05hbWVzIiwiZ2V0V2luZG93TmFtZXMiLCJnZXRLZXlzIiwiZ09QUyIsImdldFN5bWJvbHMiLCJpc0VudW0iLCJNRVRBIiwic2V0RGVzYyIsImlzRXh0ZW5zaWJsZSIsIkZSRUVaRSIsInByZXZlbnRFeHRlbnNpb25zIiwic2V0TWV0YSIsInciLCJtZXRhIiwiTkVFRCIsImZhc3RLZXkiLCJnZXRXZWFrIiwib25GcmVlemUiLCJERVNDUklQVE9SUyIsIiRmYWlscyIsIndrcyIsIndrc0RlZmluZSIsImVudW1LZXlzIiwiX2NyZWF0ZSIsImdPUE5FeHQiLCIkR09QRCIsIiREUCIsIiRKU09OIiwiX3N0cmluZ2lmeSIsIkhJRERFTiIsIlRPX1BSSU1JVElWRSIsIlN5bWJvbFJlZ2lzdHJ5IiwiQWxsU3ltYm9scyIsIk9QU3ltYm9scyIsIlVTRV9OQVRJVkUiLCJRT2JqZWN0Iiwic2V0dGVyIiwiZmluZENoaWxkIiwic2V0U3ltYm9sRGVzYyIsInByb3RvRGVzYyIsInN5bSIsIl9rIiwiaXNTeW1ib2wiLCIkZGVmaW5lUHJvcGVydGllcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkUiLCIkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiJGdldE93blByb3BlcnR5TmFtZXMiLCIkZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiSVNfT1AiLCIkc2V0IiwiZXM2U3ltYm9scyIsIndlbGxLbm93blN5bWJvbHMiLCJrIiwiZm9yIiwia2V5Rm9yIiwidXNlU2V0dGVyIiwidXNlU2ltcGxlIiwicmVwbGFjZXIiLCIkcmVwbGFjZXIiLCJhZGRUb1Vuc2NvcGFibGVzIiwiQXJndW1lbnRzIiwiVE9fU1RSSU5HX1RBRyIsIkRPTUl0ZXJhYmxlcyIsIkNvbGxlY3Rpb24iLCJ0b0Fic29sdXRlSW5kZXgiLCJJU19JTkNMVURFUyIsIiR0aGlzIiwiZnJvbUluZGV4IiwiVE9fU1RSSU5HIiwicG9zIiwiX3R5cGVvZjIiLCJSZWZlcmVuY2VFcnJvciIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9kZWZpbmVQcm9wZXJ0eTIiLCIkZ2V0UHJvdG90eXBlT2YiLCJfZ2V0UHJvdG90eXBlT2YyIiwiX2NyZWF0ZUNsYXNzMyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMyIsIl9pbmhlcml0czMiLCJfcHJvcFR5cGVzMiIsIl9nZXRNdWlUaGVtZTIiLCJNdWlUaGVtZVByb3ZpZGVyIiwiX0NvbXBvbmVudCIsIkNvbXBvbmVudCIsImNoaWxkQ29udGV4dFR5cGVzIiwicHJvcFR5cGVzIiwiZGVmYXVsdFZpZXciLCJvd25lckRvY3VtZW50IiwiTm9kZSIsIm5vZGVOYW1lIiwiaXNOb2RlIiwiaXNUZXh0Tm9kZSIsImNvbnRhaW5zTm9kZSIsIm91dGVyTm9kZSIsImlubmVyTm9kZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJvYmpBIiwib2JqQiIsImtleXNBIiwia2V5c0IiLCJkb2MiLCJhY3RpdmVFbGVtZW50IiwiY2FuVXNlRE9NIiwiRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJjYW5Vc2VXb3JrZXJzIiwiV29ya2VyIiwiY2FuVXNlRXZlbnRMaXN0ZW5lcnMiLCJjYW5Vc2VWaWV3cG9ydCIsInNjcmVlbiIsImlzSW5Xb3JrZXIiLCJiYSIsIkEiLCJlYSIsImZhIiwiaGEiLCJqYSIsIl9jYXVnaHRFcnJvciIsIl9oYXNDYXVnaHRFcnJvciIsIl9yZXRocm93RXJyb3IiLCJfaGFzUmV0aHJvd0Vycm9yIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yIiwiaGFzQ2F1Z2h0RXJyb3IiLCJjbGVhckNhdWdodEVycm9yIiwicmV0aHJvd0NhdWdodEVycm9yIiwibmEiLCJvYSIsInBhIiwicWEiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInJhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJzYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ0YSIsImRlcGVuZGVuY2llcyIsInZhIiwid2EiLCJ4YSIsImZyZWV6ZSIsImV2ZW50TmFtZURpc3BhdGNoQ29uZmlncyIsInJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzIiwicmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llcyIsInBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXMiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJjdXJyZW50VGFyZ2V0IiwiR2EiLCJIYSIsIklhIiwiSmEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJLYSIsIkxhIiwiTWEiLCJOYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiT2EiLCJQYSIsIlFhIiwiaW5qZWN0aW9uIiwiZ2V0TGlzdGVuZXIiLCJydW5FdmVudHNJbkJhdGNoIiwicnVuRXh0cmFjdGVkRXZlbnRzSW5CYXRjaCIsIlJhIiwiU2EiLCJUYSIsIlVhIiwiVmEiLCJYYSIsInByZWNhY2hlRmliZXJOb2RlIiwiZ2V0Q2xvc2VzdEluc3RhbmNlRnJvbU5vZGUiLCJnZXRJbnN0YW5jZUZyb21Ob2RlIiwiZ2V0Tm9kZUZyb21JbnN0YW5jZSIsImdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGUiLCJ1cGRhdGVGaWJlclByb3BzIiwiTCIsImRpc3BhdGNoQ29uZmlnIiwiZGIiLCJfdGFyZ2V0SW5zdCIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJhbHRlcm5hdGUiLCJqYiIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwia2IiLCJsYiIsIk0iLCJfcm9vdCIsIl9zdGFydFRleHQiLCJfZmFsbGJhY2tUZXh0IiwibWIiLCJuYiIsIm9iIiwicGIiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJkZWZhdWx0UHJldmVudGVkIiwiaXNUcnVzdGVkIiwiTiIsIm5hdGl2ZUV2ZW50IiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJyYiIsImV2ZW50UG9vbCIsInNiIiwiZGVzdHJ1Y3RvciIsInFiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXh0ZW5kIiwidGIiLCJ1YiIsInZiIiwid2IiLCJ4YiIsImRvY3VtZW50TW9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIktiIiwiTGIiLCJrZXlDb2RlIiwiTWIiLCJkZXRhaWwiLCJOYiIsIlFiIiwid2hpY2giLCJPYiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsIlBiIiwiUmIiLCJTYiIsIlRiIiwiVWIiLCJyZXN0b3JlQ29udHJvbGxlZFN0YXRlIiwiVmIiLCJpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50IiwiV2IiLCJYYiIsIlliIiwiWmIiLCJlbnF1ZXVlU3RhdGVSZXN0b3JlIiwibmVlZHNTdGF0ZVJlc3RvcmUiLCJyZXN0b3JlU3RhdGVJZk5lZWRlZCIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJmYyIsImdjIiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJoYyIsImljIiwia2MiLCJfdmFsdWVUcmFja2VyIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJqYyIsImxjIiwiY2hlY2tlZCIsIm1jIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsIm5jIiwib2MiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwidWMiLCJ2YyIsIndjIiwieGMiLCJ5YyIsInpjIiwiZGlzcGxheU5hbWUiLCJBYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiQmMiLCJDYyIsIkRjIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsIlYiLCJIYyIsIlNjIiwiVGMiLCJGYyIsIkdjIiwiRWMiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIlVjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJWYyIsIldjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIlhjIiwiWWMiLCJaYyIsIiRjIiwidGFiSW5kZXgiLCJhZCIsImNoYW5nZSIsImJkIiwiY2QiLCJkZCIsImVkIiwiZmQiLCJnZCIsImhkIiwiZGV0YWNoRXZlbnQiLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwicGQiLCJxZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJyZCIsImdldE1vZGlmaWVyU3RhdGUiLCJzZCIsInRkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJzcmNFbGVtZW50IiwidG9FbGVtZW50IiwidWQiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInZkIiwicGFyZW50V2luZG93Iiwid2QiLCJlZmZlY3RUYWciLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwieWQiLCJ6ZCIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJDZCIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIkRkIiwiY2xpcGJvYXJkRGF0YSIsIkVkIiwiRmQiLCJjaGFyQ29kZSIsIkdkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIkhkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIklkIiwicmVwZWF0IiwibG9jYWxlIiwiSmQiLCJkYXRhVHJhbnNmZXIiLCJLZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJMZCIsIk1kIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJOZCIsIk9kIiwiUGQiLCJpc0ludGVyYWN0aXZlIiwiUWQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJSZCIsIlNkIiwiVGQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIlVkIiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIl9lbmFibGVkIiwic2V0RW5hYmxlZCIsImlzRW5hYmxlZCIsInRyYXBCdWJibGVkRXZlbnQiLCJ0cmFwQ2FwdHVyZWRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCIkZCIsImFlIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiYmUiLCJjZSIsImRlIiwiZWUiLCJ0b3BBbmltYXRpb25FbmQiLCJ0b3BBbmltYXRpb25JdGVyYXRpb24iLCJ0b3BBbmltYXRpb25TdGFydCIsInRvcEJsdXIiLCJ0b3BDYW5jZWwiLCJ0b3BDaGFuZ2UiLCJ0b3BDbGljayIsInRvcENsb3NlIiwidG9wQ29tcG9zaXRpb25FbmQiLCJ0b3BDb21wb3NpdGlvblN0YXJ0IiwidG9wQ29tcG9zaXRpb25VcGRhdGUiLCJ0b3BDb250ZXh0TWVudSIsInRvcENvcHkiLCJ0b3BDdXQiLCJ0b3BEb3VibGVDbGljayIsInRvcERyYWciLCJ0b3BEcmFnRW5kIiwidG9wRHJhZ0VudGVyIiwidG9wRHJhZ0V4aXQiLCJ0b3BEcmFnTGVhdmUiLCJ0b3BEcmFnT3ZlciIsInRvcERyYWdTdGFydCIsInRvcERyb3AiLCJ0b3BGb2N1cyIsInRvcElucHV0IiwidG9wS2V5RG93biIsInRvcEtleVByZXNzIiwidG9wS2V5VXAiLCJ0b3BMb2FkIiwidG9wTG9hZFN0YXJ0IiwidG9wTW91c2VEb3duIiwidG9wTW91c2VNb3ZlIiwidG9wTW91c2VPdXQiLCJ0b3BNb3VzZU92ZXIiLCJ0b3BNb3VzZVVwIiwidG9wUGFzdGUiLCJ0b3BTY3JvbGwiLCJ0b3BTZWxlY3Rpb25DaGFuZ2UiLCJ0b3BUZXh0SW5wdXQiLCJ0b3BUb2dnbGUiLCJ0b3BUb3VjaENhbmNlbCIsInRvcFRvdWNoRW5kIiwidG9wVG91Y2hNb3ZlIiwidG9wVG91Y2hTdGFydCIsInRvcFRyYW5zaXRpb25FbmQiLCJ0b3BXaGVlbCIsImZlIiwidG9wQWJvcnQiLCJ0b3BDYW5QbGF5IiwidG9wQ2FuUGxheVRocm91Z2giLCJ0b3BEdXJhdGlvbkNoYW5nZSIsInRvcEVtcHRpZWQiLCJ0b3BFbmNyeXB0ZWQiLCJ0b3BFbmRlZCIsInRvcEVycm9yIiwidG9wTG9hZGVkRGF0YSIsInRvcExvYWRlZE1ldGFkYXRhIiwidG9wUGF1c2UiLCJ0b3BQbGF5IiwidG9wUGxheWluZyIsInRvcFByb2dyZXNzIiwidG9wUmF0ZUNoYW5nZSIsInRvcFNlZWtlZCIsInRvcFNlZWtpbmciLCJ0b3BTdGFsbGVkIiwidG9wU3VzcGVuZCIsInRvcFRpbWVVcGRhdGUiLCJ0b3BWb2x1bWVDaGFuZ2UiLCJ0b3BXYWl0aW5nIiwiZ2UiLCJoZSIsImplIiwia2UiLCJsZSIsInRleHRDb250ZW50Iiwib2Zmc2V0IiwibWUiLCJjb250ZW50RWRpdGFibGUiLCJuZSIsIm9lIiwic2VsZWN0IiwicGUiLCJxZSIsInNlIiwidWUiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIndlIiwib25TZWxlY3QiLCJ4ZSIsInJlZiIsInBlbmRpbmdQcm9wcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJtb2RlIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImV4cGlyYXRpb25UaW1lIiwieWUiLCJ6ZSIsImlzUmVhY3RDb21wb25lbnQiLCJBZSIsIiQkdHlwZW9mIiwiQmUiLCJDZSIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsImJhc2VTdGF0ZSIsImZpcnN0IiwibGFzdCIsImNhbGxiYWNrTGlzdCIsImhhc0ZvcmNlVXBkYXRlIiwiaXNJbml0aWFsaXplZCIsImNhcHR1cmVkVmFsdWVzIiwiS2UiLCJTZXQiLCJMZSIsIk1lIiwiTmUiLCJPZSIsIlBlIiwicGFydGlhbFN0YXRlIiwiUWUiLCJpc1JlcGxhY2UiLCJpc0ZvcmNlZCIsImNhcHR1cmVkVmFsdWUiLCJSZSIsIlRlIiwiVWUiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiVmUiLCJXZSIsInoiLCJxIiwidSIsIlEiLCJIIiwiWGUiLCJZZSIsIlplIiwicmVuZGVyIiwicGVuZGluZ0NvbnRleHQiLCJjb250ZXh0IiwiWSIsInNob3VsZFNldFRleHRDb250ZW50Iiwic2hvdWxkRGVwcmlvcml0aXplU3VidHJlZSIsInB1c2hIb3N0Q29udGV4dCIsInB1c2hIb3N0Q29udGFpbmVyIiwicHVzaFByb3ZpZGVyIiwiZ2V0TWFza2VkQ29udGV4dCIsImdldFVubWFza2VkQ29udGV4dCIsImhhc0NvbnRleHRDaGFuZ2VkIiwicHVzaENvbnRleHRQcm92aWRlciIsInB1c2hUb3BMZXZlbENvbnRleHRPYmplY3QiLCJpbnZhbGlkYXRlQ29udGV4dFByb3ZpZGVyIiwiZW50ZXJIeWRyYXRpb25TdGF0ZSIsIldhIiwicmVzZXRIeWRyYXRpb25TdGF0ZSIsIkNiIiwidHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2UiLCJKYyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwidXBkYXRlciIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJjYWNoZUNvbnRleHQiLCJpc0NvbnRleHRDb25zdW1lciIsImlzTW91bnRlZCIsImVucXVldWVTZXRTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsImFkb3B0Q2xhc3NJbnN0YW5jZSIsImNhbGxHZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJjb25zdHJ1Y3RDbGFzc0luc3RhbmNlIiwibW91bnRDbGFzc0luc3RhbmNlIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJyZXN1bWVNb3VudENsYXNzSW5zdGFuY2UiLCJ1cGRhdGVDbGFzc0luc3RhbmNlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiU2UiLCJLYyIsIkxjIiwiRGIiLCJNYyIsIkViIiwiYmVnaW5Xb3JrIiwiaHlkcmF0ZSIsIl9jb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsImJmIiwic3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZyIsImRmIiwia2YiLCJJIiwiWWEiLCJaIiwiTmMiLCJ5YSIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsIk9jIiwiWmEiLCJnZXREZXJpdmVkU3RhdGVGcm9tQ2F0Y2giLCJjb21wb25lbnREaWRDYXRjaCIsImlhIiwiemEiLCJkYSIsIkZiIiwid2ciLCJ2ZSIsIkljIiwiUGMiLCJHYiIsInlnIiwiUWMiLCJsZyIsIm5leHRTY2hlZHVsZWRSb290IiwicmVtYWluaW5nRXhwaXJhdGlvblRpbWUiLCJLIiwibGEiLCJKIiwiSGIiLCJhYSIsIiRhIiwiSWIiLCJBYSIsIl9vbkNvbXBsZXRlIiwidmciLCJCYSIsIkpiIiwiZmluaXNoZWRXb3JrIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInpnIiwia2ciLCJ0ZSIsImdnIiwiQWciLCJoZyIsImlnIiwiamciLCJ0aW1lUmVtYWluaW5nIiwiQmciLCJjcmVhdGVDdXJzb3IiLCJpc0VtcHR5IiwiY2hlY2tUaGF0U3RhY2tJc0VtcHR5IiwicmVzZXRTdGFja0FmdGVyRmF0YWxFcnJvckluRGV2IiwiamYiLCJnZXRDaGlsZEhvc3RDb250ZXh0IiwiZ2V0Um9vdEhvc3RDb250ZXh0IiwiZ2V0SG9zdENvbnRleHQiLCJnZXRSb290SG9zdENvbnRhaW5lciIsInBvcEhvc3RDb250YWluZXIiLCJwb3BIb3N0Q29udGV4dCIsImVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiZ2V0Q2hpbGRDb250ZXh0IiwiY29udGV4dFR5cGVzIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJwb3BDb250ZXh0UHJvdmlkZXIiLCJwb3BUb3BMZXZlbENvbnRleHRPYmplY3QiLCJjdXJzb3IiLCJwcm9jZXNzQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJmaW5kQ3VycmVudFVubWFza2VkQ29udGV4dCIsImdmIiwicG9wUHJvdmlkZXIiLCJoZiIsImh5ZHJhdGlvbiIsInByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2UiLCJwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSIsInBvcEh5ZHJhdGlvblN0YXRlIiwiY2FuSHlkcmF0ZUluc3RhbmNlIiwiY2FuSHlkcmF0ZVRleHRJbnN0YW5jZSIsImdldE5leHRIeWRyYXRhYmxlU2libGluZyIsImdldEZpcnN0SHlkcmF0YWJsZUNoaWxkIiwiaHlkcmF0ZUluc3RhbmNlIiwiaHlkcmF0ZVRleHRJbnN0YW5jZSIsImZmIiwiY3JlYXRlSW5zdGFuY2UiLCJjcmVhdGVUZXh0SW5zdGFuY2UiLCJhcHBlbmRJbml0aWFsQ2hpbGQiLCJmaW5hbGl6ZUluaXRpYWxDaGlsZHJlbiIsInByZXBhcmVVcGRhdGUiLCJwZXJzaXN0ZW5jZSIsIm11dGF0aW9uIiwiY29tcGxldGVXb3JrIiwiaGFuZGxlciIsIiRlIiwidGhyb3dFeGNlcHRpb24iLCJ1bndpbmRXb3JrIiwidW53aW5kSW50ZXJydXB0ZWRXb3JrIiwiYWYiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImdldFB1YmxpY0luc3RhbmNlIiwiY29tbWl0TW91bnQiLCJjb21taXRVcGRhdGUiLCJyZXNldFRleHRDb250ZW50IiwiY29tbWl0VGV4dFVwZGF0ZSIsImFwcGVuZENoaWxkVG9Db250YWluZXIiLCJpbnNlcnRJbkNvbnRhaW5lckJlZm9yZSIsInJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lciIsImNvbW1pdEJlZm9yZU11dGF0aW9uTGlmZUN5Y2xlcyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiY29tbWl0UmVzZXRUZXh0Q29udGVudCIsImNvbW1pdFBsYWNlbWVudCIsImNvbW1pdERlbGV0aW9uIiwiY29tbWl0V29yayIsImNvbW1pdExpZmVDeWNsZXMiLCJjb21taXRFcnJvckxvZ2dpbmciLCJjb21wb25lbnRTdGFjayIsImNvbW1pdEF0dGFjaFJlZiIsImNvbW1pdERldGFjaFJlZiIsImNmIiwic2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrIiwiY2FuY2VsRGVmZXJyZWRDYWxsYmFjayIsInByZXBhcmVGb3JDb21taXQiLCJyZXNldEFmdGVyQ29tbWl0IiwiUmMiLCJyZWNhbGN1bGF0ZUN1cnJlbnRUaW1lIiwiY29tcHV0ZUV4cGlyYXRpb25Gb3JGaWJlciIsInNjaGVkdWxlV29yayIsInJlcXVlc3RXb3JrIiwiZmx1c2hSb290IiwiYmF0Y2hlZFVwZGF0ZXMiLCJ1bmJhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiZmx1c2hDb250cm9sbGVkIiwiZGVmZXJyZWRVcGRhdGVzIiwic3luY1VwZGF0ZXMiLCJpbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaEludGVyYWN0aXZlVXBkYXRlcyIsImNvbXB1dGVVbmlxdWVBc3luY0V4cGlyYXRpb24iLCJsZWdhY3lDb250ZXh0IiwibGYiLCJBZCIsImNyZWF0ZUNvbnRhaW5lciIsInVwZGF0ZUNvbnRhaW5lciIsInVwZGF0ZUNvbnRhaW5lckF0RXhwaXJhdGlvblRpbWUiLCJnZXRQdWJsaWNSb290SW5zdGFuY2UiLCJmaW5kSG9zdEluc3RhbmNlIiwiZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHMiLCJCZCIsImluamVjdEludG9EZXZUb29scyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiR2UiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsIm1mIiwibmYiLCJvZiIsInFmIiwicGVyZm9ybWFuY2UiLCJyZiIsInNmIiwidGYiLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsImRpZFRpbWVvdXQiLCJDZiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIkRmIiwicG9zdE1lc3NhZ2UiLCJGZiIsIkNoaWxkcmVuIiwiRWYiLCJHZiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiSGYiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwiSWYiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkpmIiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwiUmYiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJTZiIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJmbGV4UG9zaXRpdmUiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93U3BhbiIsImdyaWRDb2x1bW5TcGFuIiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiVGYiLCJVZiIsInNldFByb3BlcnR5IiwiVmYiLCJtZW51aXRlbSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImNyZWF0ZUVsZW1lbnROUyIsImJnIiwiY2ciLCJfX2h0bWwiLCJvbkNsaWNrIiwib25jbGljayIsImRnIiwiZWciLCJmZyIsIm1nIiwibmciLCJzZXRJbml0aWFsUHJvcGVydGllcyIsImRpZmZQcm9wZXJ0aWVzIiwidXBkYXRlUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFByb3BlcnRpZXMiLCJkaWZmSHlkcmF0ZWRUZXh0Iiwid2FybkZvclVubWF0Y2hlZFRleHQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50Iiwid2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dCIsIndhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudCIsIndhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJvZyIsInBnIiwicWciLCJYIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJyZyIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJzZyIsIl9pbnRlcm5hbFJvb3QiLCJ0ZyIsInVnIiwiYXV0b0ZvY3VzIiwidGhlbiIsImNvbW1pdCIsInVubW91bnQiLCJsZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJjcmVhdGVCYXRjaCIsInRhZ05hbWUiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsInNjcm9sbExlZnQiLCJzY3JvbGxUb3AiLCJmb2N1cyIsImhpZGRlbiIsImRpZE5vdE1hdGNoSHlkcmF0ZWRDb250YWluZXJUZXh0SW5zdGFuY2UiLCJkaWROb3RNYXRjaEh5ZHJhdGVkVGV4dEluc3RhbmNlIiwiZGlkTm90SHlkcmF0ZUNvbnRhaW5lckluc3RhbmNlIiwiZGlkTm90SHlkcmF0ZUluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVyVGV4dEluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlVGV4dEluc3RhbmNlIiwiQ2ciLCJFZyIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJoYXNBdHRyaWJ1dGUiLCJEZyIsIkZnIiwicGYiLCJHZyIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudFBsdWdpbkh1YiIsIkV2ZW50UGx1Z2luUmVnaXN0cnkiLCJFdmVudFByb3BhZ2F0b3JzIiwiUmVhY3RDb250cm9sbGVkQ29tcG9uZW50IiwiUmVhY3RET01Db21wb25lbnRUcmVlIiwiUmVhY3RET01FdmVudExpc3RlbmVyIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiSGciLCJJZyIsImNoZWNrRENFIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZGVmYXVsdFByb3BzIiwia2V5UHJlZml4IiwiPSIsIjoiLCJlc2NhcGUiLCJvbmx5IiwiY3JlYXRlUmVmIiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfZGVmYXVsdFZhbHVlIiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImZvcndhcmRSZWYiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJ1bnN0YWJsZV9Bc3luY01vZGUiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJfcmVhY3REb20iLCJfcmVhY3QyIiwiX011aVRoZW1lUHJvdmlkZXIyIiwiX0Jvb2syIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUNBSyxjQUFBLEVBQ0FDLFlBQUEsRUFDQUMs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REFBdUZDLGtCQUFBaVgsRUFBQTN0RCxPQUFBMTRCLElBQThCc0gsRUFBQWhILE9BQUFxa0UsUUFBa0J4MEQsUUFBQTZnRSxJQUFVOHFCLEVBQUF4MEYsR0FBQTBwRSxHQUFBMXBFLEVBQzVjM0gsRUFBQUQsUUFBQW84RixFQUFBLFFBQUFBLEVBQUEsUUFBQUEsZ0NDckJBLFFBQUF0OEYsRUFBQSxLQUNBZ2lHLEVBQUFoaUcsRUFBQSxTQUNBQSxFQUFBLFVBRUFBLEVBQUEseURBQ0FBLEVBQUEsS0FRQSxFQUFBZ2lHLEVBQUEvYSxRQUFPZ2IsRUFBQXR4RixRQUFBZ29CLGNBTkssa0JBQ1ZzcEUsRUFBQXR4RixRQUFBZ29CLGNBQUF1cEUsRUFBQXZ4RixRQUFBLEtBQ0VzeEYsRUFBQXR4RixRQUFBZ29CLGNBQUF3cEUsRUFBQXh4RixRQUFBLFFBSUcsTUFBUXBNLFNBQVM2OUYsZUFBZSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvcHVibGljL2Fzc2V0cy9cIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIwOSk7XG4iLCJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSwgZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoIChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjUuNScgfTtcbmlmICh0eXBlb2YgX19lID09ICdudW1iZXInKSBfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJ2YXIgc3RvcmUgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnd2tzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuU3ltYm9sO1xudmFyIFVTRV9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09ICdmdW5jdGlvbic7XG5cbnZhciAkZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuIHN0b3JlW25hbWVdIHx8IChzdG9yZVtuYW1lXSA9XG4gICAgVVNFX1NZTUJPTCAmJiBTeW1ib2xbbmFtZV0gfHwgKFVTRV9TWU1CT0wgPyBTeW1ib2wgOiB1aWQpKCdTeW1ib2wuJyArIG5hbWUpKTtcbn07XG5cbiRleHBvcnRzLnN0b3JlID0gc3RvcmU7XG4iLCIvKipcbiAqIFRoaXMgaXMgdGhlIHdlYiBicm93c2VyIGltcGxlbWVudGF0aW9uIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kZWJ1ZycpO1xuZXhwb3J0cy5sb2cgPSBsb2c7XG5leHBvcnRzLmZvcm1hdEFyZ3MgPSBmb3JtYXRBcmdzO1xuZXhwb3J0cy5zYXZlID0gc2F2ZTtcbmV4cG9ydHMubG9hZCA9IGxvYWQ7XG5leHBvcnRzLnVzZUNvbG9ycyA9IHVzZUNvbG9ycztcbmV4cG9ydHMuc3RvcmFnZSA9ICd1bmRlZmluZWQnICE9IHR5cGVvZiBjaHJvbWVcbiAgICAgICAgICAgICAgICYmICd1bmRlZmluZWQnICE9IHR5cGVvZiBjaHJvbWUuc3RvcmFnZVxuICAgICAgICAgICAgICAgICAgPyBjaHJvbWUuc3RvcmFnZS5sb2NhbFxuICAgICAgICAgICAgICAgICAgOiBsb2NhbHN0b3JhZ2UoKTtcblxuLyoqXG4gKiBDb2xvcnMuXG4gKi9cblxuZXhwb3J0cy5jb2xvcnMgPSBbXG4gICcjMDAwMENDJywgJyMwMDAwRkYnLCAnIzAwMzNDQycsICcjMDAzM0ZGJywgJyMwMDY2Q0MnLCAnIzAwNjZGRicsICcjMDA5OUNDJyxcbiAgJyMwMDk5RkYnLCAnIzAwQ0MwMCcsICcjMDBDQzMzJywgJyMwMENDNjYnLCAnIzAwQ0M5OScsICcjMDBDQ0NDJywgJyMwMENDRkYnLFxuICAnIzMzMDBDQycsICcjMzMwMEZGJywgJyMzMzMzQ0MnLCAnIzMzMzNGRicsICcjMzM2NkNDJywgJyMzMzY2RkYnLCAnIzMzOTlDQycsXG4gICcjMzM5OUZGJywgJyMzM0NDMDAnLCAnIzMzQ0MzMycsICcjMzNDQzY2JywgJyMzM0NDOTknLCAnIzMzQ0NDQycsICcjMzNDQ0ZGJyxcbiAgJyM2NjAwQ0MnLCAnIzY2MDBGRicsICcjNjYzM0NDJywgJyM2NjMzRkYnLCAnIzY2Q0MwMCcsICcjNjZDQzMzJywgJyM5OTAwQ0MnLFxuICAnIzk5MDBGRicsICcjOTkzM0NDJywgJyM5OTMzRkYnLCAnIzk5Q0MwMCcsICcjOTlDQzMzJywgJyNDQzAwMDAnLCAnI0NDMDAzMycsXG4gICcjQ0MwMDY2JywgJyNDQzAwOTknLCAnI0NDMDBDQycsICcjQ0MwMEZGJywgJyNDQzMzMDAnLCAnI0NDMzMzMycsICcjQ0MzMzY2JyxcbiAgJyNDQzMzOTknLCAnI0NDMzNDQycsICcjQ0MzM0ZGJywgJyNDQzY2MDAnLCAnI0NDNjYzMycsICcjQ0M5OTAwJywgJyNDQzk5MzMnLFxuICAnI0NDQ0MwMCcsICcjQ0NDQzMzJywgJyNGRjAwMDAnLCAnI0ZGMDAzMycsICcjRkYwMDY2JywgJyNGRjAwOTknLCAnI0ZGMDBDQycsXG4gICcjRkYwMEZGJywgJyNGRjMzMDAnLCAnI0ZGMzMzMycsICcjRkYzMzY2JywgJyNGRjMzOTknLCAnI0ZGMzNDQycsICcjRkYzM0ZGJyxcbiAgJyNGRjY2MDAnLCAnI0ZGNjYzMycsICcjRkY5OTAwJywgJyNGRjk5MzMnLCAnI0ZGQ0MwMCcsICcjRkZDQzMzJ1xuXTtcblxuLyoqXG4gKiBDdXJyZW50bHkgb25seSBXZWJLaXQtYmFzZWQgV2ViIEluc3BlY3RvcnMsIEZpcmVmb3ggPj0gdjMxLFxuICogYW5kIHRoZSBGaXJlYnVnIGV4dGVuc2lvbiAoYW55IEZpcmVmb3ggdmVyc2lvbikgYXJlIGtub3duXG4gKiB0byBzdXBwb3J0IFwiJWNcIiBDU1MgY3VzdG9taXphdGlvbnMuXG4gKlxuICogVE9ETzogYWRkIGEgYGxvY2FsU3RvcmFnZWAgdmFyaWFibGUgdG8gZXhwbGljaXRseSBlbmFibGUvZGlzYWJsZSBjb2xvcnNcbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIE5COiBJbiBhbiBFbGVjdHJvbiBwcmVsb2FkIHNjcmlwdCwgZG9jdW1lbnQgd2lsbCBiZSBkZWZpbmVkIGJ1dCBub3QgZnVsbHlcbiAgLy8gaW5pdGlhbGl6ZWQuIFNpbmNlIHdlIGtub3cgd2UncmUgaW4gQ2hyb21lLCB3ZSdsbCBqdXN0IGRldGVjdCB0aGlzIGNhc2VcbiAgLy8gZXhwbGljaXRseVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnByb2Nlc3MgJiYgd2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gSW50ZXJuZXQgRXhwbG9yZXIgYW5kIEVkZ2UgZG8gbm90IHN1cHBvcnQgY29sb3JzLlxuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkubWF0Y2goLyhlZGdlfHRyaWRlbnQpXFwvKFxcZCspLykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBpcyB3ZWJraXQ/IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE2NDU5NjA2LzM3Njc3M1xuICAvLyBkb2N1bWVudCBpcyB1bmRlZmluZWQgaW4gcmVhY3QtbmF0aXZlOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QtbmF0aXZlL3B1bGwvMTYzMlxuICByZXR1cm4gKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZSAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuV2Via2l0QXBwZWFyYW5jZSkgfHxcbiAgICAvLyBpcyBmaXJlYnVnPyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zOTgxMjAvMzc2NzczXG4gICAgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5jb25zb2xlICYmICh3aW5kb3cuY29uc29sZS5maXJlYnVnIHx8ICh3aW5kb3cuY29uc29sZS5leGNlcHRpb24gJiYgd2luZG93LmNvbnNvbGUudGFibGUpKSkgfHxcbiAgICAvLyBpcyBmaXJlZm94ID49IHYzMT9cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1Rvb2xzL1dlYl9Db25zb2xlI1N0eWxpbmdfbWVzc2FnZXNcbiAgICAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkubWF0Y2goL2ZpcmVmb3hcXC8oXFxkKykvKSAmJiBwYXJzZUludChSZWdFeHAuJDEsIDEwKSA+PSAzMSkgfHxcbiAgICAvLyBkb3VibGUgY2hlY2sgd2Via2l0IGluIHVzZXJBZ2VudCBqdXN0IGluIGNhc2Ugd2UgYXJlIGluIGEgd29ya2VyXG4gICAgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9hcHBsZXdlYmtpdFxcLyhcXGQrKS8pKTtcbn1cblxuLyoqXG4gKiBNYXAgJWogdG8gYEpTT04uc3RyaW5naWZ5KClgLCBzaW5jZSBubyBXZWIgSW5zcGVjdG9ycyBkbyB0aGF0IGJ5IGRlZmF1bHQuXG4gKi9cblxuZXhwb3J0cy5mb3JtYXR0ZXJzLmogPSBmdW5jdGlvbih2KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHYpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4gJ1tVbmV4cGVjdGVkSlNPTlBhcnNlRXJyb3JdOiAnICsgZXJyLm1lc3NhZ2U7XG4gIH1cbn07XG5cblxuLyoqXG4gKiBDb2xvcml6ZSBsb2cgYXJndW1lbnRzIGlmIGVuYWJsZWQuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXRBcmdzKGFyZ3MpIHtcbiAgdmFyIHVzZUNvbG9ycyA9IHRoaXMudXNlQ29sb3JzO1xuXG4gIGFyZ3NbMF0gPSAodXNlQ29sb3JzID8gJyVjJyA6ICcnKVxuICAgICsgdGhpcy5uYW1lc3BhY2VcbiAgICArICh1c2VDb2xvcnMgPyAnICVjJyA6ICcgJylcbiAgICArIGFyZ3NbMF1cbiAgICArICh1c2VDb2xvcnMgPyAnJWMgJyA6ICcgJylcbiAgICArICcrJyArIGV4cG9ydHMuaHVtYW5pemUodGhpcy5kaWZmKTtcblxuICBpZiAoIXVzZUNvbG9ycykgcmV0dXJuO1xuXG4gIHZhciBjID0gJ2NvbG9yOiAnICsgdGhpcy5jb2xvcjtcbiAgYXJncy5zcGxpY2UoMSwgMCwgYywgJ2NvbG9yOiBpbmhlcml0JylcblxuICAvLyB0aGUgZmluYWwgXCIlY1wiIGlzIHNvbWV3aGF0IHRyaWNreSwgYmVjYXVzZSB0aGVyZSBjb3VsZCBiZSBvdGhlclxuICAvLyBhcmd1bWVudHMgcGFzc2VkIGVpdGhlciBiZWZvcmUgb3IgYWZ0ZXIgdGhlICVjLCBzbyB3ZSBuZWVkIHRvXG4gIC8vIGZpZ3VyZSBvdXQgdGhlIGNvcnJlY3QgaW5kZXggdG8gaW5zZXJ0IHRoZSBDU1MgaW50b1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGFzdEMgPSAwO1xuICBhcmdzWzBdLnJlcGxhY2UoLyVbYS16QS1aJV0vZywgZnVuY3Rpb24obWF0Y2gpIHtcbiAgICBpZiAoJyUlJyA9PT0gbWF0Y2gpIHJldHVybjtcbiAgICBpbmRleCsrO1xuICAgIGlmICgnJWMnID09PSBtYXRjaCkge1xuICAgICAgLy8gd2Ugb25seSBhcmUgaW50ZXJlc3RlZCBpbiB0aGUgKmxhc3QqICVjXG4gICAgICAvLyAodGhlIHVzZXIgbWF5IGhhdmUgcHJvdmlkZWQgdGhlaXIgb3duKVxuICAgICAgbGFzdEMgPSBpbmRleDtcbiAgICB9XG4gIH0pO1xuXG4gIGFyZ3Muc3BsaWNlKGxhc3RDLCAwLCBjKTtcbn1cblxuLyoqXG4gKiBJbnZva2VzIGBjb25zb2xlLmxvZygpYCB3aGVuIGF2YWlsYWJsZS5cbiAqIE5vLW9wIHdoZW4gYGNvbnNvbGUubG9nYCBpcyBub3QgYSBcImZ1bmN0aW9uXCIuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBsb2coKSB7XG4gIC8vIHRoaXMgaGFja2VyeSBpcyByZXF1aXJlZCBmb3IgSUU4LzksIHdoZXJlXG4gIC8vIHRoZSBgY29uc29sZS5sb2dgIGZ1bmN0aW9uIGRvZXNuJ3QgaGF2ZSAnYXBwbHknXG4gIHJldHVybiAnb2JqZWN0JyA9PT0gdHlwZW9mIGNvbnNvbGVcbiAgICAmJiBjb25zb2xlLmxvZ1xuICAgICYmIEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseS5jYWxsKGNvbnNvbGUubG9nLCBjb25zb2xlLCBhcmd1bWVudHMpO1xufVxuXG4vKipcbiAqIFNhdmUgYG5hbWVzcGFjZXNgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzYXZlKG5hbWVzcGFjZXMpIHtcbiAgdHJ5IHtcbiAgICBpZiAobnVsbCA9PSBuYW1lc3BhY2VzKSB7XG4gICAgICBleHBvcnRzLnN0b3JhZ2UucmVtb3ZlSXRlbSgnZGVidWcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLmRlYnVnID0gbmFtZXNwYWNlcztcbiAgICB9XG4gIH0gY2F0Y2goZSkge31cbn1cblxuLyoqXG4gKiBMb2FkIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcmV0dXJuIHtTdHJpbmd9IHJldHVybnMgdGhlIHByZXZpb3VzbHkgcGVyc2lzdGVkIGRlYnVnIG1vZGVzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBsb2FkKCkge1xuICB2YXIgcjtcbiAgdHJ5IHtcbiAgICByID0gZXhwb3J0cy5zdG9yYWdlLmRlYnVnO1xuICB9IGNhdGNoKGUpIHt9XG5cbiAgLy8gSWYgZGVidWcgaXNuJ3Qgc2V0IGluIExTLCBhbmQgd2UncmUgaW4gRWxlY3Ryb24sIHRyeSB0byBsb2FkICRERUJVR1xuICBpZiAoIXIgJiYgdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmICdlbnYnIGluIHByb2Nlc3MpIHtcbiAgICByID0gcHJvY2Vzcy5lbnYuREVCVUc7XG4gIH1cblxuICByZXR1cm4gcjtcbn1cblxuLyoqXG4gKiBFbmFibGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gYGxvY2FsU3RvcmFnZS5kZWJ1Z2AgaW5pdGlhbGx5LlxuICovXG5cbmV4cG9ydHMuZW5hYmxlKGxvYWQoKSk7XG5cbi8qKlxuICogTG9jYWxzdG9yYWdlIGF0dGVtcHRzIHRvIHJldHVybiB0aGUgbG9jYWxzdG9yYWdlLlxuICpcbiAqIFRoaXMgaXMgbmVjZXNzYXJ5IGJlY2F1c2Ugc2FmYXJpIHRocm93c1xuICogd2hlbiBhIHVzZXIgZGlzYWJsZXMgY29va2llcy9sb2NhbHN0b3JhZ2VcbiAqIGFuZCB5b3UgYXR0ZW1wdCB0byBhY2Nlc3MgaXQuXG4gKlxuICogQHJldHVybiB7TG9jYWxTdG9yYWdlfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9jYWxzdG9yYWdlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICB9IGNhdGNoIChlKSB7fVxufVxuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyICRleHBvcnQgPSBmdW5jdGlvbiAodHlwZSwgbmFtZSwgc291cmNlKSB7XG4gIHZhciBJU19GT1JDRUQgPSB0eXBlICYgJGV4cG9ydC5GO1xuICB2YXIgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuRztcbiAgdmFyIElTX1NUQVRJQyA9IHR5cGUgJiAkZXhwb3J0LlM7XG4gIHZhciBJU19QUk9UTyA9IHR5cGUgJiAkZXhwb3J0LlA7XG4gIHZhciBJU19CSU5EID0gdHlwZSAmICRleHBvcnQuQjtcbiAgdmFyIElTX1dSQVAgPSB0eXBlICYgJGV4cG9ydC5XO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV07XG4gIHZhciB0YXJnZXQgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIga2V5LCBvd24sIG91dDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICBpZiAob3duICYmIGhhcyhleHBvcnRzLCBrZXkpKSBjb250aW51ZTtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IG93biA/IHRhcmdldFtrZXldIDogc291cmNlW2tleV07XG4gICAgLy8gcHJldmVudCBnbG9iYWwgcG9sbHV0aW9uIGZvciBuYW1lc3BhY2VzXG4gICAgZXhwb3J0c1trZXldID0gSVNfR0xPQkFMICYmIHR5cGVvZiB0YXJnZXRba2V5XSAhPSAnZnVuY3Rpb24nID8gc291cmNlW2tleV1cbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIDogSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpXG4gICAgLy8gd3JhcCBnbG9iYWwgY29uc3RydWN0b3JzIGZvciBwcmV2ZW50IGNoYW5nZSB0aGVtIGluIGxpYnJhcnlcbiAgICA6IElTX1dSQVAgJiYgdGFyZ2V0W2tleV0gPT0gb3V0ID8gKGZ1bmN0aW9uIChDKSB7XG4gICAgICB2YXIgRiA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICAgIGlmICh0aGlzIGluc3RhbmNlb2YgQykge1xuICAgICAgICAgIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IEMoKTtcbiAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIG5ldyBDKGEpO1xuICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gbmV3IEMoYSwgYik7XG4gICAgICAgICAgfSByZXR1cm4gbmV3IEMoYSwgYiwgYyk7XG4gICAgICAgIH0gcmV0dXJuIEMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgICBGW1BST1RPVFlQRV0gPSBDW1BST1RPVFlQRV07XG4gICAgICByZXR1cm4gRjtcbiAgICAvLyBtYWtlIHN0YXRpYyB2ZXJzaW9ucyBmb3IgcHJvdG90eXBlIG1ldGhvZHNcbiAgICB9KShvdXQpIDogSVNfUFJPVE8gJiYgdHlwZW9mIG91dCA9PSAnZnVuY3Rpb24nID8gY3R4KEZ1bmN0aW9uLmNhbGwsIG91dCkgOiBvdXQ7XG4gICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLm1ldGhvZHMuJU5BTUUlXG4gICAgaWYgKElTX1BST1RPKSB7XG4gICAgICAoZXhwb3J0cy52aXJ0dWFsIHx8IChleHBvcnRzLnZpcnR1YWwgPSB7fSkpW2tleV0gPSBvdXQ7XG4gICAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUucHJvdG90eXBlLiVOQU1FJVxuICAgICAgaWYgKHR5cGUgJiAkZXhwb3J0LlIgJiYgZXhwUHJvdG8gJiYgIWV4cFByb3RvW2tleV0pIGhpZGUoZXhwUHJvdG8sIGtleSwgb3V0KTtcbiAgICB9XG4gIH1cbn07XG4vLyB0eXBlIGJpdG1hcFxuJGV4cG9ydC5GID0gMTsgICAvLyBmb3JjZWRcbiRleHBvcnQuRyA9IDI7ICAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgIC8vIHN0YXRpY1xuJGV4cG9ydC5QID0gODsgICAvLyBwcm90b1xuJGV4cG9ydC5CID0gMTY7ICAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgIC8vIHdyYXBcbiRleHBvcnQuVSA9IDY0OyAgLy8gc2FmZVxuJGV4cG9ydC5SID0gMTI4OyAvLyByZWFsIHByb3RvIG1ldGhvZCBmb3IgYGxpYnJhcnlgXG5tb2R1bGUuZXhwb3J0cyA9ICRleHBvcnQ7XG4iLCJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIiwiLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciBrZXlzID0gcmVxdWlyZSgnLi9rZXlzJyk7XG52YXIgaGFzQmluYXJ5ID0gcmVxdWlyZSgnaGFzLWJpbmFyeTInKTtcbnZhciBzbGljZUJ1ZmZlciA9IHJlcXVpcmUoJ2FycmF5YnVmZmVyLnNsaWNlJyk7XG52YXIgYWZ0ZXIgPSByZXF1aXJlKCdhZnRlcicpO1xudmFyIHV0ZjggPSByZXF1aXJlKCcuL3V0ZjgnKTtcblxudmFyIGJhc2U2NGVuY29kZXI7XG5pZiAoZ2xvYmFsICYmIGdsb2JhbC5BcnJheUJ1ZmZlcikge1xuICBiYXNlNjRlbmNvZGVyID0gcmVxdWlyZSgnYmFzZTY0LWFycmF5YnVmZmVyJyk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgd2UgYXJlIHJ1bm5pbmcgYW4gYW5kcm9pZCBicm93c2VyLiBUaGF0IHJlcXVpcmVzIHVzIHRvIHVzZVxuICogQXJyYXlCdWZmZXIgd2l0aCBwb2xsaW5nIHRyYW5zcG9ydHMuLi5cbiAqXG4gKiBodHRwOi8vZ2hpbmRhLm5ldC9qcGVnLWJsb2ItYWpheC1hbmRyb2lkL1xuICovXG5cbnZhciBpc0FuZHJvaWQgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiAvQW5kcm9pZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbi8qKlxuICogQ2hlY2sgaWYgd2UgYXJlIHJ1bm5pbmcgaW4gUGhhbnRvbUpTLlxuICogVXBsb2FkaW5nIGEgQmxvYiB3aXRoIFBoYW50b21KUyBkb2VzIG5vdCB3b3JrIGNvcnJlY3RseSwgYXMgcmVwb3J0ZWQgaGVyZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hcml5YS9waGFudG9tanMvaXNzdWVzLzExMzk1XG4gKiBAdHlwZSBib29sZWFuXG4gKi9cbnZhciBpc1BoYW50b21KUyA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIC9QaGFudG9tSlMvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuXG4vKipcbiAqIFdoZW4gdHJ1ZSwgYXZvaWRzIHVzaW5nIEJsb2JzIHRvIGVuY29kZSBwYXlsb2Fkcy5cbiAqIEB0eXBlIGJvb2xlYW5cbiAqL1xudmFyIGRvbnRTZW5kQmxvYnMgPSBpc0FuZHJvaWQgfHwgaXNQaGFudG9tSlM7XG5cbi8qKlxuICogQ3VycmVudCBwcm90b2NvbCB2ZXJzaW9uLlxuICovXG5cbmV4cG9ydHMucHJvdG9jb2wgPSAzO1xuXG4vKipcbiAqIFBhY2tldCB0eXBlcy5cbiAqL1xuXG52YXIgcGFja2V0cyA9IGV4cG9ydHMucGFja2V0cyA9IHtcbiAgICBvcGVuOiAgICAgMCAgICAvLyBub24td3NcbiAgLCBjbG9zZTogICAgMSAgICAvLyBub24td3NcbiAgLCBwaW5nOiAgICAgMlxuICAsIHBvbmc6ICAgICAzXG4gICwgbWVzc2FnZTogIDRcbiAgLCB1cGdyYWRlOiAgNVxuICAsIG5vb3A6ICAgICA2XG59O1xuXG52YXIgcGFja2V0c2xpc3QgPSBrZXlzKHBhY2tldHMpO1xuXG4vKipcbiAqIFByZW1hZGUgZXJyb3IgcGFja2V0LlxuICovXG5cbnZhciBlcnIgPSB7IHR5cGU6ICdlcnJvcicsIGRhdGE6ICdwYXJzZXIgZXJyb3InIH07XG5cbi8qKlxuICogQ3JlYXRlIGEgYmxvYiBhcGkgZXZlbiBmb3IgYmxvYiBidWlsZGVyIHdoZW4gdmVuZG9yIHByZWZpeGVzIGV4aXN0XG4gKi9cblxudmFyIEJsb2IgPSByZXF1aXJlKCdibG9iJyk7XG5cbi8qKlxuICogRW5jb2RlcyBhIHBhY2tldC5cbiAqXG4gKiAgICAgPHBhY2tldCB0eXBlIGlkPiBbIDxkYXRhPiBdXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiAgICAgNWhlbGxvIHdvcmxkXG4gKiAgICAgM1xuICogICAgIDRcbiAqXG4gKiBCaW5hcnkgaXMgZW5jb2RlZCBpbiBhbiBpZGVudGljYWwgcHJpbmNpcGxlXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5lbmNvZGVQYWNrZXQgPSBmdW5jdGlvbiAocGFja2V0LCBzdXBwb3J0c0JpbmFyeSwgdXRmOGVuY29kZSwgY2FsbGJhY2spIHtcbiAgaWYgKHR5cGVvZiBzdXBwb3J0c0JpbmFyeSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gc3VwcG9ydHNCaW5hcnk7XG4gICAgc3VwcG9ydHNCaW5hcnkgPSBmYWxzZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdXRmOGVuY29kZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gdXRmOGVuY29kZTtcbiAgICB1dGY4ZW5jb2RlID0gbnVsbDtcbiAgfVxuXG4gIHZhciBkYXRhID0gKHBhY2tldC5kYXRhID09PSB1bmRlZmluZWQpXG4gICAgPyB1bmRlZmluZWRcbiAgICA6IHBhY2tldC5kYXRhLmJ1ZmZlciB8fCBwYWNrZXQuZGF0YTtcblxuICBpZiAoZ2xvYmFsLkFycmF5QnVmZmVyICYmIGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBlbmNvZGVBcnJheUJ1ZmZlcihwYWNrZXQsIHN1cHBvcnRzQmluYXJ5LCBjYWxsYmFjayk7XG4gIH0gZWxzZSBpZiAoQmxvYiAmJiBkYXRhIGluc3RhbmNlb2YgZ2xvYmFsLkJsb2IpIHtcbiAgICByZXR1cm4gZW5jb2RlQmxvYihwYWNrZXQsIHN1cHBvcnRzQmluYXJ5LCBjYWxsYmFjayk7XG4gIH1cblxuICAvLyBtaWdodCBiZSBhbiBvYmplY3Qgd2l0aCB7IGJhc2U2NDogdHJ1ZSwgZGF0YTogZGF0YUFzQmFzZTY0U3RyaW5nIH1cbiAgaWYgKGRhdGEgJiYgZGF0YS5iYXNlNjQpIHtcbiAgICByZXR1cm4gZW5jb2RlQmFzZTY0T2JqZWN0KHBhY2tldCwgY2FsbGJhY2spO1xuICB9XG5cbiAgLy8gU2VuZGluZyBkYXRhIGFzIGEgdXRmLTggc3RyaW5nXG4gIHZhciBlbmNvZGVkID0gcGFja2V0c1twYWNrZXQudHlwZV07XG5cbiAgLy8gZGF0YSBmcmFnbWVudCBpcyBvcHRpb25hbFxuICBpZiAodW5kZWZpbmVkICE9PSBwYWNrZXQuZGF0YSkge1xuICAgIGVuY29kZWQgKz0gdXRmOGVuY29kZSA/IHV0ZjguZW5jb2RlKFN0cmluZyhwYWNrZXQuZGF0YSksIHsgc3RyaWN0OiBmYWxzZSB9KSA6IFN0cmluZyhwYWNrZXQuZGF0YSk7XG4gIH1cblxuICByZXR1cm4gY2FsbGJhY2soJycgKyBlbmNvZGVkKTtcblxufTtcblxuZnVuY3Rpb24gZW5jb2RlQmFzZTY0T2JqZWN0KHBhY2tldCwgY2FsbGJhY2spIHtcbiAgLy8gcGFja2V0IGRhdGEgaXMgYW4gb2JqZWN0IHsgYmFzZTY0OiB0cnVlLCBkYXRhOiBkYXRhQXNCYXNlNjRTdHJpbmcgfVxuICB2YXIgbWVzc2FnZSA9ICdiJyArIGV4cG9ydHMucGFja2V0c1twYWNrZXQudHlwZV0gKyBwYWNrZXQuZGF0YS5kYXRhO1xuICByZXR1cm4gY2FsbGJhY2sobWVzc2FnZSk7XG59XG5cbi8qKlxuICogRW5jb2RlIHBhY2tldCBoZWxwZXJzIGZvciBiaW5hcnkgdHlwZXNcbiAqL1xuXG5mdW5jdGlvbiBlbmNvZGVBcnJheUJ1ZmZlcihwYWNrZXQsIHN1cHBvcnRzQmluYXJ5LCBjYWxsYmFjaykge1xuICBpZiAoIXN1cHBvcnRzQmluYXJ5KSB7XG4gICAgcmV0dXJuIGV4cG9ydHMuZW5jb2RlQmFzZTY0UGFja2V0KHBhY2tldCwgY2FsbGJhY2spO1xuICB9XG5cbiAgdmFyIGRhdGEgPSBwYWNrZXQuZGF0YTtcbiAgdmFyIGNvbnRlbnRBcnJheSA9IG5ldyBVaW50OEFycmF5KGRhdGEpO1xuICB2YXIgcmVzdWx0QnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoMSArIGRhdGEuYnl0ZUxlbmd0aCk7XG5cbiAgcmVzdWx0QnVmZmVyWzBdID0gcGFja2V0c1twYWNrZXQudHlwZV07XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY29udGVudEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0QnVmZmVyW2krMV0gPSBjb250ZW50QXJyYXlbaV07XG4gIH1cblxuICByZXR1cm4gY2FsbGJhY2socmVzdWx0QnVmZmVyLmJ1ZmZlcik7XG59XG5cbmZ1bmN0aW9uIGVuY29kZUJsb2JBc0FycmF5QnVmZmVyKHBhY2tldCwgc3VwcG9ydHNCaW5hcnksIGNhbGxiYWNrKSB7XG4gIGlmICghc3VwcG9ydHNCaW5hcnkpIHtcbiAgICByZXR1cm4gZXhwb3J0cy5lbmNvZGVCYXNlNjRQYWNrZXQocGFja2V0LCBjYWxsYmFjayk7XG4gIH1cblxuICB2YXIgZnIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICBmci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBwYWNrZXQuZGF0YSA9IGZyLnJlc3VsdDtcbiAgICBleHBvcnRzLmVuY29kZVBhY2tldChwYWNrZXQsIHN1cHBvcnRzQmluYXJ5LCB0cnVlLCBjYWxsYmFjayk7XG4gIH07XG4gIHJldHVybiBmci5yZWFkQXNBcnJheUJ1ZmZlcihwYWNrZXQuZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGVuY29kZUJsb2IocGFja2V0LCBzdXBwb3J0c0JpbmFyeSwgY2FsbGJhY2spIHtcbiAgaWYgKCFzdXBwb3J0c0JpbmFyeSkge1xuICAgIHJldHVybiBleHBvcnRzLmVuY29kZUJhc2U2NFBhY2tldChwYWNrZXQsIGNhbGxiYWNrKTtcbiAgfVxuXG4gIGlmIChkb250U2VuZEJsb2JzKSB7XG4gICAgcmV0dXJuIGVuY29kZUJsb2JBc0FycmF5QnVmZmVyKHBhY2tldCwgc3VwcG9ydHNCaW5hcnksIGNhbGxiYWNrKTtcbiAgfVxuXG4gIHZhciBsZW5ndGggPSBuZXcgVWludDhBcnJheSgxKTtcbiAgbGVuZ3RoWzBdID0gcGFja2V0c1twYWNrZXQudHlwZV07XG4gIHZhciBibG9iID0gbmV3IEJsb2IoW2xlbmd0aC5idWZmZXIsIHBhY2tldC5kYXRhXSk7XG5cbiAgcmV0dXJuIGNhbGxiYWNrKGJsb2IpO1xufVxuXG4vKipcbiAqIEVuY29kZXMgYSBwYWNrZXQgd2l0aCBiaW5hcnkgZGF0YSBpbiBhIGJhc2U2NCBzdHJpbmdcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFja2V0LCBoYXMgYHR5cGVgIGFuZCBgZGF0YWBcbiAqIEByZXR1cm4ge1N0cmluZ30gYmFzZTY0IGVuY29kZWQgbWVzc2FnZVxuICovXG5cbmV4cG9ydHMuZW5jb2RlQmFzZTY0UGFja2V0ID0gZnVuY3Rpb24ocGFja2V0LCBjYWxsYmFjaykge1xuICB2YXIgbWVzc2FnZSA9ICdiJyArIGV4cG9ydHMucGFja2V0c1twYWNrZXQudHlwZV07XG4gIGlmIChCbG9iICYmIHBhY2tldC5kYXRhIGluc3RhbmNlb2YgZ2xvYmFsLkJsb2IpIHtcbiAgICB2YXIgZnIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIGZyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGI2NCA9IGZyLnJlc3VsdC5zcGxpdCgnLCcpWzFdO1xuICAgICAgY2FsbGJhY2sobWVzc2FnZSArIGI2NCk7XG4gICAgfTtcbiAgICByZXR1cm4gZnIucmVhZEFzRGF0YVVSTChwYWNrZXQuZGF0YSk7XG4gIH1cblxuICB2YXIgYjY0ZGF0YTtcbiAgdHJ5IHtcbiAgICBiNjRkYXRhID0gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCBuZXcgVWludDhBcnJheShwYWNrZXQuZGF0YSkpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gaVBob25lIFNhZmFyaSBkb2Vzbid0IGxldCB5b3UgYXBwbHkgd2l0aCB0eXBlZCBhcnJheXNcbiAgICB2YXIgdHlwZWQgPSBuZXcgVWludDhBcnJheShwYWNrZXQuZGF0YSk7XG4gICAgdmFyIGJhc2ljID0gbmV3IEFycmF5KHR5cGVkLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0eXBlZC5sZW5ndGg7IGkrKykge1xuICAgICAgYmFzaWNbaV0gPSB0eXBlZFtpXTtcbiAgICB9XG4gICAgYjY0ZGF0YSA9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgYmFzaWMpO1xuICB9XG4gIG1lc3NhZ2UgKz0gZ2xvYmFsLmJ0b2EoYjY0ZGF0YSk7XG4gIHJldHVybiBjYWxsYmFjayhtZXNzYWdlKTtcbn07XG5cbi8qKlxuICogRGVjb2RlcyBhIHBhY2tldC4gQ2hhbmdlcyBmb3JtYXQgdG8gQmxvYiBpZiByZXF1ZXN0ZWQuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fSB3aXRoIGB0eXBlYCBhbmQgYGRhdGFgIChpZiBhbnkpXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmRlY29kZVBhY2tldCA9IGZ1bmN0aW9uIChkYXRhLCBiaW5hcnlUeXBlLCB1dGY4ZGVjb2RlKSB7XG4gIGlmIChkYXRhID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gZXJyO1xuICB9XG4gIC8vIFN0cmluZyBkYXRhXG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAoZGF0YS5jaGFyQXQoMCkgPT09ICdiJykge1xuICAgICAgcmV0dXJuIGV4cG9ydHMuZGVjb2RlQmFzZTY0UGFja2V0KGRhdGEuc3Vic3RyKDEpLCBiaW5hcnlUeXBlKTtcbiAgICB9XG5cbiAgICBpZiAodXRmOGRlY29kZSkge1xuICAgICAgZGF0YSA9IHRyeURlY29kZShkYXRhKTtcbiAgICAgIGlmIChkYXRhID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgICAgfVxuICAgIH1cbiAgICB2YXIgdHlwZSA9IGRhdGEuY2hhckF0KDApO1xuXG4gICAgaWYgKE51bWJlcih0eXBlKSAhPSB0eXBlIHx8ICFwYWNrZXRzbGlzdFt0eXBlXSkge1xuICAgICAgcmV0dXJuIGVycjtcbiAgICB9XG5cbiAgICBpZiAoZGF0YS5sZW5ndGggPiAxKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBwYWNrZXRzbGlzdFt0eXBlXSwgZGF0YTogZGF0YS5zdWJzdHJpbmcoMSkgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgdHlwZTogcGFja2V0c2xpc3RbdHlwZV0gfTtcbiAgICB9XG4gIH1cblxuICB2YXIgYXNBcnJheSA9IG5ldyBVaW50OEFycmF5KGRhdGEpO1xuICB2YXIgdHlwZSA9IGFzQXJyYXlbMF07XG4gIHZhciByZXN0ID0gc2xpY2VCdWZmZXIoZGF0YSwgMSk7XG4gIGlmIChCbG9iICYmIGJpbmFyeVR5cGUgPT09ICdibG9iJykge1xuICAgIHJlc3QgPSBuZXcgQmxvYihbcmVzdF0pO1xuICB9XG4gIHJldHVybiB7IHR5cGU6IHBhY2tldHNsaXN0W3R5cGVdLCBkYXRhOiByZXN0IH07XG59O1xuXG5mdW5jdGlvbiB0cnlEZWNvZGUoZGF0YSkge1xuICB0cnkge1xuICAgIGRhdGEgPSB1dGY4LmRlY29kZShkYXRhLCB7IHN0cmljdDogZmFsc2UgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogRGVjb2RlcyBhIHBhY2tldCBlbmNvZGVkIGluIGEgYmFzZTY0IHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBiYXNlNjQgZW5jb2RlZCBtZXNzYWdlXG4gKiBAcmV0dXJuIHtPYmplY3R9IHdpdGggYHR5cGVgIGFuZCBgZGF0YWAgKGlmIGFueSlcbiAqL1xuXG5leHBvcnRzLmRlY29kZUJhc2U2NFBhY2tldCA9IGZ1bmN0aW9uKG1zZywgYmluYXJ5VHlwZSkge1xuICB2YXIgdHlwZSA9IHBhY2tldHNsaXN0W21zZy5jaGFyQXQoMCldO1xuICBpZiAoIWJhc2U2NGVuY29kZXIpIHtcbiAgICByZXR1cm4geyB0eXBlOiB0eXBlLCBkYXRhOiB7IGJhc2U2NDogdHJ1ZSwgZGF0YTogbXNnLnN1YnN0cigxKSB9IH07XG4gIH1cblxuICB2YXIgZGF0YSA9IGJhc2U2NGVuY29kZXIuZGVjb2RlKG1zZy5zdWJzdHIoMSkpO1xuXG4gIGlmIChiaW5hcnlUeXBlID09PSAnYmxvYicgJiYgQmxvYikge1xuICAgIGRhdGEgPSBuZXcgQmxvYihbZGF0YV0pO1xuICB9XG5cbiAgcmV0dXJuIHsgdHlwZTogdHlwZSwgZGF0YTogZGF0YSB9O1xufTtcblxuLyoqXG4gKiBFbmNvZGVzIG11bHRpcGxlIG1lc3NhZ2VzIChwYXlsb2FkKS5cbiAqXG4gKiAgICAgPGxlbmd0aD46ZGF0YVxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogICAgIDExOmhlbGxvIHdvcmxkMjpoaVxuICpcbiAqIElmIGFueSBjb250ZW50cyBhcmUgYmluYXJ5LCB0aGV5IHdpbGwgYmUgZW5jb2RlZCBhcyBiYXNlNjQgc3RyaW5ncy4gQmFzZTY0XG4gKiBlbmNvZGVkIHN0cmluZ3MgYXJlIG1hcmtlZCB3aXRoIGEgYiBiZWZvcmUgdGhlIGxlbmd0aCBzcGVjaWZpZXJcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBwYWNrZXRzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmVuY29kZVBheWxvYWQgPSBmdW5jdGlvbiAocGFja2V0cywgc3VwcG9ydHNCaW5hcnksIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2Ygc3VwcG9ydHNCaW5hcnkgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IHN1cHBvcnRzQmluYXJ5O1xuICAgIHN1cHBvcnRzQmluYXJ5ID0gbnVsbDtcbiAgfVxuXG4gIHZhciBpc0JpbmFyeSA9IGhhc0JpbmFyeShwYWNrZXRzKTtcblxuICBpZiAoc3VwcG9ydHNCaW5hcnkgJiYgaXNCaW5hcnkpIHtcbiAgICBpZiAoQmxvYiAmJiAhZG9udFNlbmRCbG9icykge1xuICAgICAgcmV0dXJuIGV4cG9ydHMuZW5jb2RlUGF5bG9hZEFzQmxvYihwYWNrZXRzLCBjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGV4cG9ydHMuZW5jb2RlUGF5bG9hZEFzQXJyYXlCdWZmZXIocGFja2V0cywgY2FsbGJhY2spO1xuICB9XG5cbiAgaWYgKCFwYWNrZXRzLmxlbmd0aCkge1xuICAgIHJldHVybiBjYWxsYmFjaygnMDonKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldExlbmd0aEhlYWRlcihtZXNzYWdlKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2UubGVuZ3RoICsgJzonICsgbWVzc2FnZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVuY29kZU9uZShwYWNrZXQsIGRvbmVDYWxsYmFjaykge1xuICAgIGV4cG9ydHMuZW5jb2RlUGFja2V0KHBhY2tldCwgIWlzQmluYXJ5ID8gZmFsc2UgOiBzdXBwb3J0c0JpbmFyeSwgZmFsc2UsIGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgIGRvbmVDYWxsYmFjayhudWxsLCBzZXRMZW5ndGhIZWFkZXIobWVzc2FnZSkpO1xuICAgIH0pO1xuICB9XG5cbiAgbWFwKHBhY2tldHMsIGVuY29kZU9uZSwgZnVuY3Rpb24oZXJyLCByZXN1bHRzKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKHJlc3VsdHMuam9pbignJykpO1xuICB9KTtcbn07XG5cbi8qKlxuICogQXN5bmMgYXJyYXkgbWFwIHVzaW5nIGFmdGVyXG4gKi9cblxuZnVuY3Rpb24gbWFwKGFyeSwgZWFjaCwgZG9uZSkge1xuICB2YXIgcmVzdWx0ID0gbmV3IEFycmF5KGFyeS5sZW5ndGgpO1xuICB2YXIgbmV4dCA9IGFmdGVyKGFyeS5sZW5ndGgsIGRvbmUpO1xuXG4gIHZhciBlYWNoV2l0aEluZGV4ID0gZnVuY3Rpb24oaSwgZWwsIGNiKSB7XG4gICAgZWFjaChlbCwgZnVuY3Rpb24oZXJyb3IsIG1zZykge1xuICAgICAgcmVzdWx0W2ldID0gbXNnO1xuICAgICAgY2IoZXJyb3IsIHJlc3VsdCk7XG4gICAgfSk7XG4gIH07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnkubGVuZ3RoOyBpKyspIHtcbiAgICBlYWNoV2l0aEluZGV4KGksIGFyeVtpXSwgbmV4dCk7XG4gIH1cbn1cblxuLypcbiAqIERlY29kZXMgZGF0YSB3aGVuIGEgcGF5bG9hZCBpcyBtYXliZSBleHBlY3RlZC4gUG9zc2libGUgYmluYXJ5IGNvbnRlbnRzIGFyZVxuICogZGVjb2RlZCBmcm9tIHRoZWlyIGJhc2U2NCByZXByZXNlbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhLCBjYWxsYmFjayBtZXRob2RcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy5kZWNvZGVQYXlsb2FkID0gZnVuY3Rpb24gKGRhdGEsIGJpbmFyeVR5cGUsIGNhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgZGF0YSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZXhwb3J0cy5kZWNvZGVQYXlsb2FkQXNCaW5hcnkoZGF0YSwgYmluYXJ5VHlwZSwgY2FsbGJhY2spO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBiaW5hcnlUeXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBiaW5hcnlUeXBlO1xuICAgIGJpbmFyeVR5cGUgPSBudWxsO1xuICB9XG5cbiAgdmFyIHBhY2tldDtcbiAgaWYgKGRhdGEgPT09ICcnKSB7XG4gICAgLy8gcGFyc2VyIGVycm9yIC0gaWdub3JpbmcgcGF5bG9hZFxuICAgIHJldHVybiBjYWxsYmFjayhlcnIsIDAsIDEpO1xuICB9XG5cbiAgdmFyIGxlbmd0aCA9ICcnLCBuLCBtc2c7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBkYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBjaHIgPSBkYXRhLmNoYXJBdChpKTtcblxuICAgIGlmIChjaHIgIT09ICc6Jykge1xuICAgICAgbGVuZ3RoICs9IGNocjtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChsZW5ndGggPT09ICcnIHx8IChsZW5ndGggIT0gKG4gPSBOdW1iZXIobGVuZ3RoKSkpKSB7XG4gICAgICAvLyBwYXJzZXIgZXJyb3IgLSBpZ25vcmluZyBwYXlsb2FkXG4gICAgICByZXR1cm4gY2FsbGJhY2soZXJyLCAwLCAxKTtcbiAgICB9XG5cbiAgICBtc2cgPSBkYXRhLnN1YnN0cihpICsgMSwgbik7XG5cbiAgICBpZiAobGVuZ3RoICE9IG1zZy5sZW5ndGgpIHtcbiAgICAgIC8vIHBhcnNlciBlcnJvciAtIGlnbm9yaW5nIHBheWxvYWRcbiAgICAgIHJldHVybiBjYWxsYmFjayhlcnIsIDAsIDEpO1xuICAgIH1cblxuICAgIGlmIChtc2cubGVuZ3RoKSB7XG4gICAgICBwYWNrZXQgPSBleHBvcnRzLmRlY29kZVBhY2tldChtc2csIGJpbmFyeVR5cGUsIGZhbHNlKTtcblxuICAgICAgaWYgKGVyci50eXBlID09PSBwYWNrZXQudHlwZSAmJiBlcnIuZGF0YSA9PT0gcGFja2V0LmRhdGEpIHtcbiAgICAgICAgLy8gcGFyc2VyIGVycm9yIGluIGluZGl2aWR1YWwgcGFja2V0IC0gaWdub3JpbmcgcGF5bG9hZFxuICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyLCAwLCAxKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJldCA9IGNhbGxiYWNrKHBhY2tldCwgaSArIG4sIGwpO1xuICAgICAgaWYgKGZhbHNlID09PSByZXQpIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBhZHZhbmNlIGN1cnNvclxuICAgIGkgKz0gbjtcbiAgICBsZW5ndGggPSAnJztcbiAgfVxuXG4gIGlmIChsZW5ndGggIT09ICcnKSB7XG4gICAgLy8gcGFyc2VyIGVycm9yIC0gaWdub3JpbmcgcGF5bG9hZFxuICAgIHJldHVybiBjYWxsYmFjayhlcnIsIDAsIDEpO1xuICB9XG5cbn07XG5cbi8qKlxuICogRW5jb2RlcyBtdWx0aXBsZSBtZXNzYWdlcyAocGF5bG9hZCkgYXMgYmluYXJ5LlxuICpcbiAqIDwxID0gYmluYXJ5LCAwID0gc3RyaW5nPjxudW1iZXIgZnJvbSAwLTk+PG51bWJlciBmcm9tIDAtOT5bLi4uXTxudW1iZXJcbiAqIDI1NT48ZGF0YT5cbiAqXG4gKiBFeGFtcGxlOlxuICogMSAzIDI1NSAxIDIgMywgaWYgdGhlIGJpbmFyeSBjb250ZW50cyBhcmUgaW50ZXJwcmV0ZWQgYXMgOCBiaXQgaW50ZWdlcnNcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBwYWNrZXRzXG4gKiBAcmV0dXJuIHtBcnJheUJ1ZmZlcn0gZW5jb2RlZCBwYXlsb2FkXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmVuY29kZVBheWxvYWRBc0FycmF5QnVmZmVyID0gZnVuY3Rpb24ocGFja2V0cywgY2FsbGJhY2spIHtcbiAgaWYgKCFwYWNrZXRzLmxlbmd0aCkge1xuICAgIHJldHVybiBjYWxsYmFjayhuZXcgQXJyYXlCdWZmZXIoMCkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZW5jb2RlT25lKHBhY2tldCwgZG9uZUNhbGxiYWNrKSB7XG4gICAgZXhwb3J0cy5lbmNvZGVQYWNrZXQocGFja2V0LCB0cnVlLCB0cnVlLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICByZXR1cm4gZG9uZUNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgIH0pO1xuICB9XG5cbiAgbWFwKHBhY2tldHMsIGVuY29kZU9uZSwgZnVuY3Rpb24oZXJyLCBlbmNvZGVkUGFja2V0cykge1xuICAgIHZhciB0b3RhbExlbmd0aCA9IGVuY29kZWRQYWNrZXRzLnJlZHVjZShmdW5jdGlvbihhY2MsIHApIHtcbiAgICAgIHZhciBsZW47XG4gICAgICBpZiAodHlwZW9mIHAgPT09ICdzdHJpbmcnKXtcbiAgICAgICAgbGVuID0gcC5sZW5ndGg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZW4gPSBwLmJ5dGVMZW5ndGg7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjICsgbGVuLnRvU3RyaW5nKCkubGVuZ3RoICsgbGVuICsgMjsgLy8gc3RyaW5nL2JpbmFyeSBpZGVudGlmaWVyICsgc2VwYXJhdG9yID0gMlxuICAgIH0sIDApO1xuXG4gICAgdmFyIHJlc3VsdEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkodG90YWxMZW5ndGgpO1xuXG4gICAgdmFyIGJ1ZmZlckluZGV4ID0gMDtcbiAgICBlbmNvZGVkUGFja2V0cy5mb3JFYWNoKGZ1bmN0aW9uKHApIHtcbiAgICAgIHZhciBpc1N0cmluZyA9IHR5cGVvZiBwID09PSAnc3RyaW5nJztcbiAgICAgIHZhciBhYiA9IHA7XG4gICAgICBpZiAoaXNTdHJpbmcpIHtcbiAgICAgICAgdmFyIHZpZXcgPSBuZXcgVWludDhBcnJheShwLmxlbmd0aCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZpZXdbaV0gPSBwLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIH1cbiAgICAgICAgYWIgPSB2aWV3LmJ1ZmZlcjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzU3RyaW5nKSB7IC8vIG5vdCB0cnVlIGJpbmFyeVxuICAgICAgICByZXN1bHRBcnJheVtidWZmZXJJbmRleCsrXSA9IDA7XG4gICAgICB9IGVsc2UgeyAvLyB0cnVlIGJpbmFyeVxuICAgICAgICByZXN1bHRBcnJheVtidWZmZXJJbmRleCsrXSA9IDE7XG4gICAgICB9XG5cbiAgICAgIHZhciBsZW5TdHIgPSBhYi5ieXRlTGVuZ3RoLnRvU3RyaW5nKCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlblN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHRBcnJheVtidWZmZXJJbmRleCsrXSA9IHBhcnNlSW50KGxlblN0cltpXSk7XG4gICAgICB9XG4gICAgICByZXN1bHRBcnJheVtidWZmZXJJbmRleCsrXSA9IDI1NTtcblxuICAgICAgdmFyIHZpZXcgPSBuZXcgVWludDhBcnJheShhYik7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZpZXcubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0QXJyYXlbYnVmZmVySW5kZXgrK10gPSB2aWV3W2ldO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNhbGxiYWNrKHJlc3VsdEFycmF5LmJ1ZmZlcik7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBFbmNvZGUgYXMgQmxvYlxuICovXG5cbmV4cG9ydHMuZW5jb2RlUGF5bG9hZEFzQmxvYiA9IGZ1bmN0aW9uKHBhY2tldHMsIGNhbGxiYWNrKSB7XG4gIGZ1bmN0aW9uIGVuY29kZU9uZShwYWNrZXQsIGRvbmVDYWxsYmFjaykge1xuICAgIGV4cG9ydHMuZW5jb2RlUGFja2V0KHBhY2tldCwgdHJ1ZSwgdHJ1ZSwgZnVuY3Rpb24oZW5jb2RlZCkge1xuICAgICAgdmFyIGJpbmFyeUlkZW50aWZpZXIgPSBuZXcgVWludDhBcnJheSgxKTtcbiAgICAgIGJpbmFyeUlkZW50aWZpZXJbMF0gPSAxO1xuICAgICAgaWYgKHR5cGVvZiBlbmNvZGVkID09PSAnc3RyaW5nJykge1xuICAgICAgICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGVuY29kZWQubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmNvZGVkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmlld1tpXSA9IGVuY29kZWQuY2hhckNvZGVBdChpKTtcbiAgICAgICAgfVxuICAgICAgICBlbmNvZGVkID0gdmlldy5idWZmZXI7XG4gICAgICAgIGJpbmFyeUlkZW50aWZpZXJbMF0gPSAwO1xuICAgICAgfVxuXG4gICAgICB2YXIgbGVuID0gKGVuY29kZWQgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilcbiAgICAgICAgPyBlbmNvZGVkLmJ5dGVMZW5ndGhcbiAgICAgICAgOiBlbmNvZGVkLnNpemU7XG5cbiAgICAgIHZhciBsZW5TdHIgPSBsZW4udG9TdHJpbmcoKTtcbiAgICAgIHZhciBsZW5ndGhBcnkgPSBuZXcgVWludDhBcnJheShsZW5TdHIubGVuZ3RoICsgMSk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlblN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZW5ndGhBcnlbaV0gPSBwYXJzZUludChsZW5TdHJbaV0pO1xuICAgICAgfVxuICAgICAgbGVuZ3RoQXJ5W2xlblN0ci5sZW5ndGhdID0gMjU1O1xuXG4gICAgICBpZiAoQmxvYikge1xuICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtiaW5hcnlJZGVudGlmaWVyLmJ1ZmZlciwgbGVuZ3RoQXJ5LmJ1ZmZlciwgZW5jb2RlZF0pO1xuICAgICAgICBkb25lQ2FsbGJhY2sobnVsbCwgYmxvYik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBtYXAocGFja2V0cywgZW5jb2RlT25lLCBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICByZXR1cm4gY2FsbGJhY2sobmV3IEJsb2IocmVzdWx0cykpO1xuICB9KTtcbn07XG5cbi8qXG4gKiBEZWNvZGVzIGRhdGEgd2hlbiBhIHBheWxvYWQgaXMgbWF5YmUgZXhwZWN0ZWQuIFN0cmluZ3MgYXJlIGRlY29kZWQgYnlcbiAqIGludGVycHJldGluZyBlYWNoIGJ5dGUgYXMgYSBrZXkgY29kZSBmb3IgZW50cmllcyBtYXJrZWQgdG8gc3RhcnQgd2l0aCAwLiBTZWVcbiAqIGRlc2NyaXB0aW9uIG9mIGVuY29kZVBheWxvYWRBc0JpbmFyeVxuICpcbiAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGRhdGEsIGNhbGxiYWNrIG1ldGhvZFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLmRlY29kZVBheWxvYWRBc0JpbmFyeSA9IGZ1bmN0aW9uIChkYXRhLCBiaW5hcnlUeXBlLCBjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIGJpbmFyeVR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IGJpbmFyeVR5cGU7XG4gICAgYmluYXJ5VHlwZSA9IG51bGw7XG4gIH1cblxuICB2YXIgYnVmZmVyVGFpbCA9IGRhdGE7XG4gIHZhciBidWZmZXJzID0gW107XG5cbiAgd2hpbGUgKGJ1ZmZlclRhaWwuYnl0ZUxlbmd0aCA+IDApIHtcbiAgICB2YXIgdGFpbEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyVGFpbCk7XG4gICAgdmFyIGlzU3RyaW5nID0gdGFpbEFycmF5WzBdID09PSAwO1xuICAgIHZhciBtc2dMZW5ndGggPSAnJztcblxuICAgIGZvciAodmFyIGkgPSAxOyA7IGkrKykge1xuICAgICAgaWYgKHRhaWxBcnJheVtpXSA9PT0gMjU1KSBicmVhaztcblxuICAgICAgLy8gMzEwID0gY2hhciBsZW5ndGggb2YgTnVtYmVyLk1BWF9WQUxVRVxuICAgICAgaWYgKG1zZ0xlbmd0aC5sZW5ndGggPiAzMTApIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVyciwgMCwgMSk7XG4gICAgICB9XG5cbiAgICAgIG1zZ0xlbmd0aCArPSB0YWlsQXJyYXlbaV07XG4gICAgfVxuXG4gICAgYnVmZmVyVGFpbCA9IHNsaWNlQnVmZmVyKGJ1ZmZlclRhaWwsIDIgKyBtc2dMZW5ndGgubGVuZ3RoKTtcbiAgICBtc2dMZW5ndGggPSBwYXJzZUludChtc2dMZW5ndGgpO1xuXG4gICAgdmFyIG1zZyA9IHNsaWNlQnVmZmVyKGJ1ZmZlclRhaWwsIDAsIG1zZ0xlbmd0aCk7XG4gICAgaWYgKGlzU3RyaW5nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBtc2cgPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIG5ldyBVaW50OEFycmF5KG1zZykpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpUGhvbmUgU2FmYXJpIGRvZXNuJ3QgbGV0IHlvdSBhcHBseSB0byB0eXBlZCBhcnJheXNcbiAgICAgICAgdmFyIHR5cGVkID0gbmV3IFVpbnQ4QXJyYXkobXNnKTtcbiAgICAgICAgbXNnID0gJyc7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHlwZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBtc2cgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSh0eXBlZFtpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBidWZmZXJzLnB1c2gobXNnKTtcbiAgICBidWZmZXJUYWlsID0gc2xpY2VCdWZmZXIoYnVmZmVyVGFpbCwgbXNnTGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0b3RhbCA9IGJ1ZmZlcnMubGVuZ3RoO1xuICBidWZmZXJzLmZvckVhY2goZnVuY3Rpb24oYnVmZmVyLCBpKSB7XG4gICAgY2FsbGJhY2soZXhwb3J0cy5kZWNvZGVQYWNrZXQoYnVmZmVyLCBiaW5hcnlUeXBlLCB0cnVlKSwgaSwgdG90YWwpO1xuICB9KTtcbn07XG4iLCJcclxuLyoqXHJcbiAqIEV4cG9zZSBgRW1pdHRlcmAuXHJcbiAqL1xyXG5cclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSBFbWl0dGVyO1xyXG59XHJcblxyXG4vKipcclxuICogSW5pdGlhbGl6ZSBhIG5ldyBgRW1pdHRlcmAuXHJcbiAqXHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gRW1pdHRlcihvYmopIHtcclxuICBpZiAob2JqKSByZXR1cm4gbWl4aW4ob2JqKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBNaXhpbiB0aGUgZW1pdHRlciBwcm9wZXJ0aWVzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXHJcbiAqIEByZXR1cm4ge09iamVjdH1cclxuICogQGFwaSBwcml2YXRlXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gbWl4aW4ob2JqKSB7XHJcbiAgZm9yICh2YXIga2V5IGluIEVtaXR0ZXIucHJvdG90eXBlKSB7XHJcbiAgICBvYmpba2V5XSA9IEVtaXR0ZXIucHJvdG90eXBlW2tleV07XHJcbiAgfVxyXG4gIHJldHVybiBvYmo7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBMaXN0ZW4gb24gdGhlIGdpdmVuIGBldmVudGAgd2l0aCBgZm5gLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cclxuICogQHJldHVybiB7RW1pdHRlcn1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5FbWl0dGVyLnByb3RvdHlwZS5vbiA9XHJcbkVtaXR0ZXIucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCwgZm4pe1xyXG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcclxuICAodGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF0gfHwgW10pXHJcbiAgICAucHVzaChmbik7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogQWRkcyBhbiBgZXZlbnRgIGxpc3RlbmVyIHRoYXQgd2lsbCBiZSBpbnZva2VkIGEgc2luZ2xlXHJcbiAqIHRpbWUgdGhlbiBhdXRvbWF0aWNhbGx5IHJlbW92ZWQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxyXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbihldmVudCwgZm4pe1xyXG4gIGZ1bmN0aW9uIG9uKCkge1xyXG4gICAgdGhpcy5vZmYoZXZlbnQsIG9uKTtcclxuICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbiAgfVxyXG5cclxuICBvbi5mbiA9IGZuO1xyXG4gIHRoaXMub24oZXZlbnQsIG9uKTtcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGdpdmVuIGNhbGxiYWNrIGZvciBgZXZlbnRgIG9yIGFsbFxyXG4gKiByZWdpc3RlcmVkIGNhbGxiYWNrcy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXHJcbiAqIEByZXR1cm4ge0VtaXR0ZXJ9XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuRW1pdHRlci5wcm90b3R5cGUub2ZmID1cclxuRW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPVxyXG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPVxyXG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQsIGZuKXtcclxuICB0aGlzLl9jYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3MgfHwge307XHJcblxyXG4gIC8vIGFsbFxyXG4gIGlmICgwID09IGFyZ3VtZW50cy5sZW5ndGgpIHtcclxuICAgIHRoaXMuX2NhbGxiYWNrcyA9IHt9O1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvLyBzcGVjaWZpYyBldmVudFxyXG4gIHZhciBjYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdO1xyXG4gIGlmICghY2FsbGJhY2tzKSByZXR1cm4gdGhpcztcclxuXHJcbiAgLy8gcmVtb3ZlIGFsbCBoYW5kbGVyc1xyXG4gIGlmICgxID09IGFyZ3VtZW50cy5sZW5ndGgpIHtcclxuICAgIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvLyByZW1vdmUgc3BlY2lmaWMgaGFuZGxlclxyXG4gIHZhciBjYjtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xyXG4gICAgY2IgPSBjYWxsYmFja3NbaV07XHJcbiAgICBpZiAoY2IgPT09IGZuIHx8IGNiLmZuID09PSBmbikge1xyXG4gICAgICBjYWxsYmFja3Muc3BsaWNlKGksIDEpO1xyXG4gICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogRW1pdCBgZXZlbnRgIHdpdGggdGhlIGdpdmVuIGFyZ3MuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxyXG4gKiBAcGFyYW0ge01peGVkfSAuLi5cclxuICogQHJldHVybiB7RW1pdHRlcn1cclxuICovXHJcblxyXG5FbWl0dGVyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24oZXZlbnQpe1xyXG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcclxuICB2YXIgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKVxyXG4gICAgLCBjYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdO1xyXG5cclxuICBpZiAoY2FsbGJhY2tzKSB7XHJcbiAgICBjYWxsYmFja3MgPSBjYWxsYmFja3Muc2xpY2UoMCk7XHJcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2FsbGJhY2tzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XHJcbiAgICAgIGNhbGxiYWNrc1tpXS5hcHBseSh0aGlzLCBhcmdzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFJldHVybiBhcnJheSBvZiBjYWxsYmFja3MgZm9yIGBldmVudGAuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxyXG4gKiBAcmV0dXJuIHtBcnJheX1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5FbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnMgPSBmdW5jdGlvbihldmVudCl7XHJcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xyXG4gIHJldHVybiB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdIHx8IFtdO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIHRoaXMgZW1pdHRlciBoYXMgYGV2ZW50YCBoYW5kbGVycy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEByZXR1cm4ge0Jvb2xlYW59XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuRW1pdHRlci5wcm90b3R5cGUuaGFzTGlzdGVuZXJzID0gZnVuY3Rpb24oZXZlbnQpe1xyXG4gIHJldHVybiAhISB0aGlzLmxpc3RlbmVycyhldmVudCkubGVuZ3RoO1xyXG59O1xyXG4iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdldFByZWZpeGVkVmFsdWU7XG5mdW5jdGlvbiBnZXRQcmVmaXhlZFZhbHVlKHByZWZpeGVkVmFsdWUsIHZhbHVlLCBrZWVwVW5wcmVmaXhlZCkge1xuICBpZiAoa2VlcFVucHJlZml4ZWQpIHtcbiAgICByZXR1cm4gW3ByZWZpeGVkVmFsdWUsIHZhbHVlXTtcbiAgfVxuICByZXR1cm4gcHJlZml4ZWRWYWx1ZTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYW4gb2JqZWN0IScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYSwgYil7XG4gIHZhciBmbiA9IGZ1bmN0aW9uKCl7fTtcbiAgZm4ucHJvdG90eXBlID0gYi5wcm90b3R5cGU7XG4gIGEucHJvdG90eXBlID0gbmV3IGZuO1xuICBhLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGE7XG59OyIsIi8qKlxyXG4gKiBDb21waWxlcyBhIHF1ZXJ5c3RyaW5nXHJcbiAqIFJldHVybnMgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBvYmplY3RcclxuICpcclxuICogQHBhcmFtIHtPYmplY3R9XHJcbiAqIEBhcGkgcHJpdmF0ZVxyXG4gKi9cclxuXHJcbmV4cG9ydHMuZW5jb2RlID0gZnVuY3Rpb24gKG9iaikge1xyXG4gIHZhciBzdHIgPSAnJztcclxuXHJcbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcclxuICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoaSkpIHtcclxuICAgICAgaWYgKHN0ci5sZW5ndGgpIHN0ciArPSAnJic7XHJcbiAgICAgIHN0ciArPSBlbmNvZGVVUklDb21wb25lbnQoaSkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQob2JqW2ldKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBzdHI7XHJcbn07XHJcblxyXG4vKipcclxuICogUGFyc2VzIGEgc2ltcGxlIHF1ZXJ5c3RyaW5nIGludG8gYW4gb2JqZWN0XHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBxc1xyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5leHBvcnRzLmRlY29kZSA9IGZ1bmN0aW9uKHFzKXtcclxuICB2YXIgcXJ5ID0ge307XHJcbiAgdmFyIHBhaXJzID0gcXMuc3BsaXQoJyYnKTtcclxuICBmb3IgKHZhciBpID0gMCwgbCA9IHBhaXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xyXG4gICAgdmFyIHBhaXIgPSBwYWlyc1tpXS5zcGxpdCgnPScpO1xyXG4gICAgcXJ5W2RlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSk7XHJcbiAgfVxyXG4gIHJldHVybiBxcnk7XHJcbn07XHJcbiIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCJ2YXIgaWQgPSAwO1xudmFyIHB4ID0gTWF0aC5yYW5kb20oKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIHBhcnNlciA9IHJlcXVpcmUoJ2VuZ2luZS5pby1wYXJzZXInKTtcbnZhciBFbWl0dGVyID0gcmVxdWlyZSgnY29tcG9uZW50LWVtaXR0ZXInKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYW5zcG9ydDtcblxuLyoqXG4gKiBUcmFuc3BvcnQgYWJzdHJhY3QgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBUcmFuc3BvcnQgKG9wdHMpIHtcbiAgdGhpcy5wYXRoID0gb3B0cy5wYXRoO1xuICB0aGlzLmhvc3RuYW1lID0gb3B0cy5ob3N0bmFtZTtcbiAgdGhpcy5wb3J0ID0gb3B0cy5wb3J0O1xuICB0aGlzLnNlY3VyZSA9IG9wdHMuc2VjdXJlO1xuICB0aGlzLnF1ZXJ5ID0gb3B0cy5xdWVyeTtcbiAgdGhpcy50aW1lc3RhbXBQYXJhbSA9IG9wdHMudGltZXN0YW1wUGFyYW07XG4gIHRoaXMudGltZXN0YW1wUmVxdWVzdHMgPSBvcHRzLnRpbWVzdGFtcFJlcXVlc3RzO1xuICB0aGlzLnJlYWR5U3RhdGUgPSAnJztcbiAgdGhpcy5hZ2VudCA9IG9wdHMuYWdlbnQgfHwgZmFsc2U7XG4gIHRoaXMuc29ja2V0ID0gb3B0cy5zb2NrZXQ7XG4gIHRoaXMuZW5hYmxlc1hEUiA9IG9wdHMuZW5hYmxlc1hEUjtcblxuICAvLyBTU0wgb3B0aW9ucyBmb3IgTm9kZS5qcyBjbGllbnRcbiAgdGhpcy5wZnggPSBvcHRzLnBmeDtcbiAgdGhpcy5rZXkgPSBvcHRzLmtleTtcbiAgdGhpcy5wYXNzcGhyYXNlID0gb3B0cy5wYXNzcGhyYXNlO1xuICB0aGlzLmNlcnQgPSBvcHRzLmNlcnQ7XG4gIHRoaXMuY2EgPSBvcHRzLmNhO1xuICB0aGlzLmNpcGhlcnMgPSBvcHRzLmNpcGhlcnM7XG4gIHRoaXMucmVqZWN0VW5hdXRob3JpemVkID0gb3B0cy5yZWplY3RVbmF1dGhvcml6ZWQ7XG4gIHRoaXMuZm9yY2VOb2RlID0gb3B0cy5mb3JjZU5vZGU7XG5cbiAgLy8gb3RoZXIgb3B0aW9ucyBmb3IgTm9kZS5qcyBjbGllbnRcbiAgdGhpcy5leHRyYUhlYWRlcnMgPSBvcHRzLmV4dHJhSGVhZGVycztcbiAgdGhpcy5sb2NhbEFkZHJlc3MgPSBvcHRzLmxvY2FsQWRkcmVzcztcbn1cblxuLyoqXG4gKiBNaXggaW4gYEVtaXR0ZXJgLlxuICovXG5cbkVtaXR0ZXIoVHJhbnNwb3J0LnByb3RvdHlwZSk7XG5cbi8qKlxuICogRW1pdHMgYW4gZXJyb3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7VHJhbnNwb3J0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5vbkVycm9yID0gZnVuY3Rpb24gKG1zZywgZGVzYykge1xuICB2YXIgZXJyID0gbmV3IEVycm9yKG1zZyk7XG4gIGVyci50eXBlID0gJ1RyYW5zcG9ydEVycm9yJztcbiAgZXJyLmRlc2NyaXB0aW9uID0gZGVzYztcbiAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBPcGVucyB0aGUgdHJhbnNwb3J0LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5vcGVuID0gZnVuY3Rpb24gKCkge1xuICBpZiAoJ2Nsb3NlZCcgPT09IHRoaXMucmVhZHlTdGF0ZSB8fCAnJyA9PT0gdGhpcy5yZWFkeVN0YXRlKSB7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gJ29wZW5pbmcnO1xuICAgIHRoaXMuZG9PcGVuKCk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQ2xvc2VzIHRoZSB0cmFuc3BvcnQuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCdvcGVuaW5nJyA9PT0gdGhpcy5yZWFkeVN0YXRlIHx8ICdvcGVuJyA9PT0gdGhpcy5yZWFkeVN0YXRlKSB7XG4gICAgdGhpcy5kb0Nsb3NlKCk7XG4gICAgdGhpcy5vbkNsb3NlKCk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2VuZHMgbXVsdGlwbGUgcGFja2V0cy5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBwYWNrZXRzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5UcmFuc3BvcnQucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbiAocGFja2V0cykge1xuICBpZiAoJ29wZW4nID09PSB0aGlzLnJlYWR5U3RhdGUpIHtcbiAgICB0aGlzLndyaXRlKHBhY2tldHMpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IG5vdCBvcGVuJyk7XG4gIH1cbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gb3BlblxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblRyYW5zcG9ydC5wcm90b3R5cGUub25PcGVuID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnJlYWR5U3RhdGUgPSAnb3Blbic7XG4gIHRoaXMud3JpdGFibGUgPSB0cnVlO1xuICB0aGlzLmVtaXQoJ29wZW4nKTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHdpdGggZGF0YS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZGF0YVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5vbkRhdGEgPSBmdW5jdGlvbiAoZGF0YSkge1xuICB2YXIgcGFja2V0ID0gcGFyc2VyLmRlY29kZVBhY2tldChkYXRhLCB0aGlzLnNvY2tldC5iaW5hcnlUeXBlKTtcbiAgdGhpcy5vblBhY2tldChwYWNrZXQpO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgd2l0aCBhIGRlY29kZWQgcGFja2V0LlxuICovXG5cblRyYW5zcG9ydC5wcm90b3R5cGUub25QYWNrZXQgPSBmdW5jdGlvbiAocGFja2V0KSB7XG4gIHRoaXMuZW1pdCgncGFja2V0JywgcGFja2V0KTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gY2xvc2UuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuVHJhbnNwb3J0LnByb3RvdHlwZS5vbkNsb3NlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnJlYWR5U3RhdGUgPSAnY2xvc2VkJztcbiAgdGhpcy5lbWl0KCdjbG9zZScpO1xufTtcbiIsIi8vIGJyb3dzZXIgc2hpbSBmb3IgeG1saHR0cHJlcXVlc3QgbW9kdWxlXG5cbnZhciBoYXNDT1JTID0gcmVxdWlyZSgnaGFzLWNvcnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3B0cykge1xuICB2YXIgeGRvbWFpbiA9IG9wdHMueGRvbWFpbjtcblxuICAvLyBzY2hlbWUgbXVzdCBiZSBzYW1lIHdoZW4gdXNpZ24gWERvbWFpblJlcXVlc3RcbiAgLy8gaHR0cDovL2Jsb2dzLm1zZG4uY29tL2IvaWVpbnRlcm5hbHMvYXJjaGl2ZS8yMDEwLzA1LzEzL3hkb21haW5yZXF1ZXN0LXJlc3RyaWN0aW9ucy1saW1pdGF0aW9ucy1hbmQtd29ya2Fyb3VuZHMuYXNweFxuICB2YXIgeHNjaGVtZSA9IG9wdHMueHNjaGVtZTtcblxuICAvLyBYRG9tYWluUmVxdWVzdCBoYXMgYSBmbG93IG9mIG5vdCBzZW5kaW5nIGNvb2tpZSwgdGhlcmVmb3JlIGl0IHNob3VsZCBiZSBkaXNhYmxlZCBhcyBhIGRlZmF1bHQuXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL2VuZ2luZS5pby1jbGllbnQvcHVsbC8yMTdcbiAgdmFyIGVuYWJsZXNYRFIgPSBvcHRzLmVuYWJsZXNYRFI7XG5cbiAgLy8gWE1MSHR0cFJlcXVlc3QgY2FuIGJlIGRpc2FibGVkIG9uIElFXG4gIHRyeSB7XG4gICAgaWYgKCd1bmRlZmluZWQnICE9PSB0eXBlb2YgWE1MSHR0cFJlcXVlc3QgJiYgKCF4ZG9tYWluIHx8IGhhc0NPUlMpKSB7XG4gICAgICByZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7IH1cblxuICAvLyBVc2UgWERvbWFpblJlcXVlc3QgZm9yIElFOCBpZiBlbmFibGVzWERSIGlzIHRydWVcbiAgLy8gYmVjYXVzZSBsb2FkaW5nIGJhciBrZWVwcyBmbGFzaGluZyB3aGVuIHVzaW5nIGpzb25wLXBvbGxpbmdcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3l1amlvc2FrYS9zb2NrZS5pby1pZTgtbG9hZGluZy1leGFtcGxlXG4gIHRyeSB7XG4gICAgaWYgKCd1bmRlZmluZWQnICE9PSB0eXBlb2YgWERvbWFpblJlcXVlc3QgJiYgIXhzY2hlbWUgJiYgZW5hYmxlc1hEUikge1xuICAgICAgcmV0dXJuIG5ldyBYRG9tYWluUmVxdWVzdCgpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkgeyB9XG5cbiAgaWYgKCF4ZG9tYWluKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBuZXcgZ2xvYmFsW1snQWN0aXZlJ10uY29uY2F0KCdPYmplY3QnKS5qb2luKCdYJyldKCdNaWNyb3NvZnQuWE1MSFRUUCcpO1xuICAgIH0gY2F0Y2ggKGUpIHsgfVxuICB9XG59O1xuIiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJcbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NrZXQuaW8tcGFyc2VyJyk7XG52YXIgRW1pdHRlciA9IHJlcXVpcmUoJ2NvbXBvbmVudC1lbWl0dGVyJyk7XG52YXIgYmluYXJ5ID0gcmVxdWlyZSgnLi9iaW5hcnknKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpO1xudmFyIGlzQnVmID0gcmVxdWlyZSgnLi9pcy1idWZmZXInKTtcblxuLyoqXG4gKiBQcm90b2NvbCB2ZXJzaW9uLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy5wcm90b2NvbCA9IDQ7XG5cbi8qKlxuICogUGFja2V0IHR5cGVzLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy50eXBlcyA9IFtcbiAgJ0NPTk5FQ1QnLFxuICAnRElTQ09OTkVDVCcsXG4gICdFVkVOVCcsXG4gICdBQ0snLFxuICAnRVJST1InLFxuICAnQklOQVJZX0VWRU5UJyxcbiAgJ0JJTkFSWV9BQ0snXG5dO1xuXG4vKipcbiAqIFBhY2tldCB0eXBlIGBjb25uZWN0YC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmV4cG9ydHMuQ09OTkVDVCA9IDA7XG5cbi8qKlxuICogUGFja2V0IHR5cGUgYGRpc2Nvbm5lY3RgLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy5ESVNDT05ORUNUID0gMTtcblxuLyoqXG4gKiBQYWNrZXQgdHlwZSBgZXZlbnRgLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy5FVkVOVCA9IDI7XG5cbi8qKlxuICogUGFja2V0IHR5cGUgYGFja2AuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLkFDSyA9IDM7XG5cbi8qKlxuICogUGFja2V0IHR5cGUgYGVycm9yYC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmV4cG9ydHMuRVJST1IgPSA0O1xuXG4vKipcbiAqIFBhY2tldCB0eXBlICdiaW5hcnkgZXZlbnQnXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLkJJTkFSWV9FVkVOVCA9IDU7XG5cbi8qKlxuICogUGFja2V0IHR5cGUgYGJpbmFyeSBhY2tgLiBGb3IgYWNrcyB3aXRoIGJpbmFyeSBhcmd1bWVudHMuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLkJJTkFSWV9BQ0sgPSA2O1xuXG4vKipcbiAqIEVuY29kZXIgY29uc3RydWN0b3IuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLkVuY29kZXIgPSBFbmNvZGVyO1xuXG4vKipcbiAqIERlY29kZXIgY29uc3RydWN0b3IuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLkRlY29kZXIgPSBEZWNvZGVyO1xuXG4vKipcbiAqIEEgc29ja2V0LmlvIEVuY29kZXIgaW5zdGFuY2VcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIEVuY29kZXIoKSB7fVxuXG52YXIgRVJST1JfUEFDS0VUID0gZXhwb3J0cy5FUlJPUiArICdcImVuY29kZSBlcnJvclwiJztcblxuLyoqXG4gKiBFbmNvZGUgYSBwYWNrZXQgYXMgYSBzaW5nbGUgc3RyaW5nIGlmIG5vbi1iaW5hcnksIG9yIGFzIGFcbiAqIGJ1ZmZlciBzZXF1ZW5jZSwgZGVwZW5kaW5nIG9uIHBhY2tldCB0eXBlLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogLSBwYWNrZXQgb2JqZWN0XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayAtIGZ1bmN0aW9uIHRvIGhhbmRsZSBlbmNvZGluZ3MgKGxpa2VseSBlbmdpbmUud3JpdGUpXG4gKiBAcmV0dXJuIENhbGxzIGNhbGxiYWNrIHdpdGggQXJyYXkgb2YgZW5jb2RpbmdzXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVuY29kZXIucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uKG9iaiwgY2FsbGJhY2spe1xuICBkZWJ1ZygnZW5jb2RpbmcgcGFja2V0ICVqJywgb2JqKTtcblxuICBpZiAoZXhwb3J0cy5CSU5BUllfRVZFTlQgPT09IG9iai50eXBlIHx8IGV4cG9ydHMuQklOQVJZX0FDSyA9PT0gb2JqLnR5cGUpIHtcbiAgICBlbmNvZGVBc0JpbmFyeShvYmosIGNhbGxiYWNrKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZW5jb2RpbmcgPSBlbmNvZGVBc1N0cmluZyhvYmopO1xuICAgIGNhbGxiYWNrKFtlbmNvZGluZ10pO1xuICB9XG59O1xuXG4vKipcbiAqIEVuY29kZSBwYWNrZXQgYXMgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYWNrZXRcbiAqIEByZXR1cm4ge1N0cmluZ30gZW5jb2RlZFxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZW5jb2RlQXNTdHJpbmcob2JqKSB7XG5cbiAgLy8gZmlyc3QgaXMgdHlwZVxuICB2YXIgc3RyID0gJycgKyBvYmoudHlwZTtcblxuICAvLyBhdHRhY2htZW50cyBpZiB3ZSBoYXZlIHRoZW1cbiAgaWYgKGV4cG9ydHMuQklOQVJZX0VWRU5UID09PSBvYmoudHlwZSB8fCBleHBvcnRzLkJJTkFSWV9BQ0sgPT09IG9iai50eXBlKSB7XG4gICAgc3RyICs9IG9iai5hdHRhY2htZW50cyArICctJztcbiAgfVxuXG4gIC8vIGlmIHdlIGhhdmUgYSBuYW1lc3BhY2Ugb3RoZXIgdGhhbiBgL2BcbiAgLy8gd2UgYXBwZW5kIGl0IGZvbGxvd2VkIGJ5IGEgY29tbWEgYCxgXG4gIGlmIChvYmoubnNwICYmICcvJyAhPT0gb2JqLm5zcCkge1xuICAgIHN0ciArPSBvYmoubnNwICsgJywnO1xuICB9XG5cbiAgLy8gaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgdGhlIGlkXG4gIGlmIChudWxsICE9IG9iai5pZCkge1xuICAgIHN0ciArPSBvYmouaWQ7XG4gIH1cblxuICAvLyBqc29uIGRhdGFcbiAgaWYgKG51bGwgIT0gb2JqLmRhdGEpIHtcbiAgICB2YXIgcGF5bG9hZCA9IHRyeVN0cmluZ2lmeShvYmouZGF0YSk7XG4gICAgaWYgKHBheWxvYWQgIT09IGZhbHNlKSB7XG4gICAgICBzdHIgKz0gcGF5bG9hZDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIEVSUk9SX1BBQ0tFVDtcbiAgICB9XG4gIH1cblxuICBkZWJ1ZygnZW5jb2RlZCAlaiBhcyAlcycsIG9iaiwgc3RyKTtcbiAgcmV0dXJuIHN0cjtcbn1cblxuZnVuY3Rpb24gdHJ5U3RyaW5naWZ5KHN0cikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzdHIpO1xuICB9IGNhdGNoKGUpe1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vKipcbiAqIEVuY29kZSBwYWNrZXQgYXMgJ2J1ZmZlciBzZXF1ZW5jZScgYnkgcmVtb3ZpbmcgYmxvYnMsIGFuZFxuICogZGVjb25zdHJ1Y3RpbmcgcGFja2V0IGludG8gb2JqZWN0IHdpdGggcGxhY2Vob2xkZXJzIGFuZFxuICogYSBsaXN0IG9mIGJ1ZmZlcnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhY2tldFxuICogQHJldHVybiB7QnVmZmVyfSBlbmNvZGVkXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBlbmNvZGVBc0JpbmFyeShvYmosIGNhbGxiYWNrKSB7XG5cbiAgZnVuY3Rpb24gd3JpdGVFbmNvZGluZyhibG9ibGVzc0RhdGEpIHtcbiAgICB2YXIgZGVjb25zdHJ1Y3Rpb24gPSBiaW5hcnkuZGVjb25zdHJ1Y3RQYWNrZXQoYmxvYmxlc3NEYXRhKTtcbiAgICB2YXIgcGFjayA9IGVuY29kZUFzU3RyaW5nKGRlY29uc3RydWN0aW9uLnBhY2tldCk7XG4gICAgdmFyIGJ1ZmZlcnMgPSBkZWNvbnN0cnVjdGlvbi5idWZmZXJzO1xuXG4gICAgYnVmZmVycy51bnNoaWZ0KHBhY2spOyAvLyBhZGQgcGFja2V0IGluZm8gdG8gYmVnaW5uaW5nIG9mIGRhdGEgbGlzdFxuICAgIGNhbGxiYWNrKGJ1ZmZlcnMpOyAvLyB3cml0ZSBhbGwgdGhlIGJ1ZmZlcnNcbiAgfVxuXG4gIGJpbmFyeS5yZW1vdmVCbG9icyhvYmosIHdyaXRlRW5jb2RpbmcpO1xufVxuXG4vKipcbiAqIEEgc29ja2V0LmlvIERlY29kZXIgaW5zdGFuY2VcbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IGRlY29kZXJcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gRGVjb2RlcigpIHtcbiAgdGhpcy5yZWNvbnN0cnVjdG9yID0gbnVsbDtcbn1cblxuLyoqXG4gKiBNaXggaW4gYEVtaXR0ZXJgIHdpdGggRGVjb2Rlci5cbiAqL1xuXG5FbWl0dGVyKERlY29kZXIucHJvdG90eXBlKTtcblxuLyoqXG4gKiBEZWNvZGVzIGFuIGVjb2RlZCBwYWNrZXQgc3RyaW5nIGludG8gcGFja2V0IEpTT04uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG9iaiAtIGVuY29kZWQgcGFja2V0XG4gKiBAcmV0dXJuIHtPYmplY3R9IHBhY2tldFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5EZWNvZGVyLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbihvYmopIHtcbiAgdmFyIHBhY2tldDtcbiAgaWYgKHR5cGVvZiBvYmogPT09ICdzdHJpbmcnKSB7XG4gICAgcGFja2V0ID0gZGVjb2RlU3RyaW5nKG9iaik7XG4gICAgaWYgKGV4cG9ydHMuQklOQVJZX0VWRU5UID09PSBwYWNrZXQudHlwZSB8fCBleHBvcnRzLkJJTkFSWV9BQ0sgPT09IHBhY2tldC50eXBlKSB7IC8vIGJpbmFyeSBwYWNrZXQncyBqc29uXG4gICAgICB0aGlzLnJlY29uc3RydWN0b3IgPSBuZXcgQmluYXJ5UmVjb25zdHJ1Y3RvcihwYWNrZXQpO1xuXG4gICAgICAvLyBubyBhdHRhY2htZW50cywgbGFiZWxlZCBiaW5hcnkgYnV0IG5vIGJpbmFyeSBkYXRhIHRvIGZvbGxvd1xuICAgICAgaWYgKHRoaXMucmVjb25zdHJ1Y3Rvci5yZWNvblBhY2suYXR0YWNobWVudHMgPT09IDApIHtcbiAgICAgICAgdGhpcy5lbWl0KCdkZWNvZGVkJywgcGFja2V0KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgeyAvLyBub24tYmluYXJ5IGZ1bGwgcGFja2V0XG4gICAgICB0aGlzLmVtaXQoJ2RlY29kZWQnLCBwYWNrZXQpO1xuICAgIH1cbiAgfVxuICBlbHNlIGlmIChpc0J1ZihvYmopIHx8IG9iai5iYXNlNjQpIHsgLy8gcmF3IGJpbmFyeSBkYXRhXG4gICAgaWYgKCF0aGlzLnJlY29uc3RydWN0b3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignZ290IGJpbmFyeSBkYXRhIHdoZW4gbm90IHJlY29uc3RydWN0aW5nIGEgcGFja2V0Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhY2tldCA9IHRoaXMucmVjb25zdHJ1Y3Rvci50YWtlQmluYXJ5RGF0YShvYmopO1xuICAgICAgaWYgKHBhY2tldCkgeyAvLyByZWNlaXZlZCBmaW5hbCBidWZmZXJcbiAgICAgICAgdGhpcy5yZWNvbnN0cnVjdG9yID0gbnVsbDtcbiAgICAgICAgdGhpcy5lbWl0KCdkZWNvZGVkJywgcGFja2V0KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHR5cGU6ICcgKyBvYmopO1xuICB9XG59O1xuXG4vKipcbiAqIERlY29kZSBhIHBhY2tldCBTdHJpbmcgKEpTT04gZGF0YSlcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtPYmplY3R9IHBhY2tldFxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZGVjb2RlU3RyaW5nKHN0cikge1xuICB2YXIgaSA9IDA7XG4gIC8vIGxvb2sgdXAgdHlwZVxuICB2YXIgcCA9IHtcbiAgICB0eXBlOiBOdW1iZXIoc3RyLmNoYXJBdCgwKSlcbiAgfTtcblxuICBpZiAobnVsbCA9PSBleHBvcnRzLnR5cGVzW3AudHlwZV0pIHtcbiAgICByZXR1cm4gZXJyb3IoJ3Vua25vd24gcGFja2V0IHR5cGUgJyArIHAudHlwZSk7XG4gIH1cblxuICAvLyBsb29rIHVwIGF0dGFjaG1lbnRzIGlmIHR5cGUgYmluYXJ5XG4gIGlmIChleHBvcnRzLkJJTkFSWV9FVkVOVCA9PT0gcC50eXBlIHx8IGV4cG9ydHMuQklOQVJZX0FDSyA9PT0gcC50eXBlKSB7XG4gICAgdmFyIGJ1ZiA9ICcnO1xuICAgIHdoaWxlIChzdHIuY2hhckF0KCsraSkgIT09ICctJykge1xuICAgICAgYnVmICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICBpZiAoaSA9PSBzdHIubGVuZ3RoKSBicmVhaztcbiAgICB9XG4gICAgaWYgKGJ1ZiAhPSBOdW1iZXIoYnVmKSB8fCBzdHIuY2hhckF0KGkpICE9PSAnLScpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSWxsZWdhbCBhdHRhY2htZW50cycpO1xuICAgIH1cbiAgICBwLmF0dGFjaG1lbnRzID0gTnVtYmVyKGJ1Zik7XG4gIH1cblxuICAvLyBsb29rIHVwIG5hbWVzcGFjZSAoaWYgYW55KVxuICBpZiAoJy8nID09PSBzdHIuY2hhckF0KGkgKyAxKSkge1xuICAgIHAubnNwID0gJyc7XG4gICAgd2hpbGUgKCsraSkge1xuICAgICAgdmFyIGMgPSBzdHIuY2hhckF0KGkpO1xuICAgICAgaWYgKCcsJyA9PT0gYykgYnJlYWs7XG4gICAgICBwLm5zcCArPSBjO1xuICAgICAgaWYgKGkgPT09IHN0ci5sZW5ndGgpIGJyZWFrO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBwLm5zcCA9ICcvJztcbiAgfVxuXG4gIC8vIGxvb2sgdXAgaWRcbiAgdmFyIG5leHQgPSBzdHIuY2hhckF0KGkgKyAxKTtcbiAgaWYgKCcnICE9PSBuZXh0ICYmIE51bWJlcihuZXh0KSA9PSBuZXh0KSB7XG4gICAgcC5pZCA9ICcnO1xuICAgIHdoaWxlICgrK2kpIHtcbiAgICAgIHZhciBjID0gc3RyLmNoYXJBdChpKTtcbiAgICAgIGlmIChudWxsID09IGMgfHwgTnVtYmVyKGMpICE9IGMpIHtcbiAgICAgICAgLS1pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHAuaWQgKz0gc3RyLmNoYXJBdChpKTtcbiAgICAgIGlmIChpID09PSBzdHIubGVuZ3RoKSBicmVhaztcbiAgICB9XG4gICAgcC5pZCA9IE51bWJlcihwLmlkKTtcbiAgfVxuXG4gIC8vIGxvb2sgdXAganNvbiBkYXRhXG4gIGlmIChzdHIuY2hhckF0KCsraSkpIHtcbiAgICB2YXIgcGF5bG9hZCA9IHRyeVBhcnNlKHN0ci5zdWJzdHIoaSkpO1xuICAgIHZhciBpc1BheWxvYWRWYWxpZCA9IHBheWxvYWQgIT09IGZhbHNlICYmIChwLnR5cGUgPT09IGV4cG9ydHMuRVJST1IgfHwgaXNBcnJheShwYXlsb2FkKSk7XG4gICAgaWYgKGlzUGF5bG9hZFZhbGlkKSB7XG4gICAgICBwLmRhdGEgPSBwYXlsb2FkO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZXJyb3IoJ2ludmFsaWQgcGF5bG9hZCcpO1xuICAgIH1cbiAgfVxuXG4gIGRlYnVnKCdkZWNvZGVkICVzIGFzICVqJywgc3RyLCBwKTtcbiAgcmV0dXJuIHA7XG59XG5cbmZ1bmN0aW9uIHRyeVBhcnNlKHN0cikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHN0cik7XG4gIH0gY2F0Y2goZSl7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogRGVhbGxvY2F0ZXMgYSBwYXJzZXIncyByZXNvdXJjZXNcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkRlY29kZXIucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgaWYgKHRoaXMucmVjb25zdHJ1Y3Rvcikge1xuICAgIHRoaXMucmVjb25zdHJ1Y3Rvci5maW5pc2hlZFJlY29uc3RydWN0aW9uKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQSBtYW5hZ2VyIG9mIGEgYmluYXJ5IGV2ZW50J3MgJ2J1ZmZlciBzZXF1ZW5jZScuIFNob3VsZFxuICogYmUgY29uc3RydWN0ZWQgd2hlbmV2ZXIgYSBwYWNrZXQgb2YgdHlwZSBCSU5BUllfRVZFTlQgaXNcbiAqIGRlY29kZWQuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhY2tldFxuICogQHJldHVybiB7QmluYXJ5UmVjb25zdHJ1Y3Rvcn0gaW5pdGlhbGl6ZWQgcmVjb25zdHJ1Y3RvclxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gQmluYXJ5UmVjb25zdHJ1Y3RvcihwYWNrZXQpIHtcbiAgdGhpcy5yZWNvblBhY2sgPSBwYWNrZXQ7XG4gIHRoaXMuYnVmZmVycyA9IFtdO1xufVxuXG4vKipcbiAqIE1ldGhvZCB0byBiZSBjYWxsZWQgd2hlbiBiaW5hcnkgZGF0YSByZWNlaXZlZCBmcm9tIGNvbm5lY3Rpb25cbiAqIGFmdGVyIGEgQklOQVJZX0VWRU5UIHBhY2tldC5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlciB8IEFycmF5QnVmZmVyfSBiaW5EYXRhIC0gdGhlIHJhdyBiaW5hcnkgZGF0YSByZWNlaXZlZFxuICogQHJldHVybiB7bnVsbCB8IE9iamVjdH0gcmV0dXJucyBudWxsIGlmIG1vcmUgYmluYXJ5IGRhdGEgaXMgZXhwZWN0ZWQgb3JcbiAqICAgYSByZWNvbnN0cnVjdGVkIHBhY2tldCBvYmplY3QgaWYgYWxsIGJ1ZmZlcnMgaGF2ZSBiZWVuIHJlY2VpdmVkLlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuQmluYXJ5UmVjb25zdHJ1Y3Rvci5wcm90b3R5cGUudGFrZUJpbmFyeURhdGEgPSBmdW5jdGlvbihiaW5EYXRhKSB7XG4gIHRoaXMuYnVmZmVycy5wdXNoKGJpbkRhdGEpO1xuICBpZiAodGhpcy5idWZmZXJzLmxlbmd0aCA9PT0gdGhpcy5yZWNvblBhY2suYXR0YWNobWVudHMpIHsgLy8gZG9uZSB3aXRoIGJ1ZmZlciBsaXN0XG4gICAgdmFyIHBhY2tldCA9IGJpbmFyeS5yZWNvbnN0cnVjdFBhY2tldCh0aGlzLnJlY29uUGFjaywgdGhpcy5idWZmZXJzKTtcbiAgICB0aGlzLmZpbmlzaGVkUmVjb25zdHJ1Y3Rpb24oKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG4gIHJldHVybiBudWxsO1xufTtcblxuLyoqXG4gKiBDbGVhbnMgdXAgYmluYXJ5IHBhY2tldCByZWNvbnN0cnVjdGlvbiB2YXJpYWJsZXMuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuQmluYXJ5UmVjb25zdHJ1Y3Rvci5wcm90b3R5cGUuZmluaXNoZWRSZWNvbnN0cnVjdGlvbiA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJlY29uUGFjayA9IG51bGw7XG4gIHRoaXMuYnVmZmVycyA9IFtdO1xufTtcblxuZnVuY3Rpb24gZXJyb3IobXNnKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogZXhwb3J0cy5FUlJPUixcbiAgICBkYXRhOiAncGFyc2VyIGVycm9yOiAnICsgbXNnXG4gIH07XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciByZWQ1MCA9IGV4cG9ydHMucmVkNTAgPSAnI2ZmZWJlZSc7XG52YXIgcmVkMTAwID0gZXhwb3J0cy5yZWQxMDAgPSAnI2ZmY2RkMic7XG52YXIgcmVkMjAwID0gZXhwb3J0cy5yZWQyMDAgPSAnI2VmOWE5YSc7XG52YXIgcmVkMzAwID0gZXhwb3J0cy5yZWQzMDAgPSAnI2U1NzM3Myc7XG52YXIgcmVkNDAwID0gZXhwb3J0cy5yZWQ0MDAgPSAnI2VmNTM1MCc7XG52YXIgcmVkNTAwID0gZXhwb3J0cy5yZWQ1MDAgPSAnI2Y0NDMzNic7XG52YXIgcmVkNjAwID0gZXhwb3J0cy5yZWQ2MDAgPSAnI2U1MzkzNSc7XG52YXIgcmVkNzAwID0gZXhwb3J0cy5yZWQ3MDAgPSAnI2QzMmYyZic7XG52YXIgcmVkODAwID0gZXhwb3J0cy5yZWQ4MDAgPSAnI2M2MjgyOCc7XG52YXIgcmVkOTAwID0gZXhwb3J0cy5yZWQ5MDAgPSAnI2I3MWMxYyc7XG52YXIgcmVkQTEwMCA9IGV4cG9ydHMucmVkQTEwMCA9ICcjZmY4YTgwJztcbnZhciByZWRBMjAwID0gZXhwb3J0cy5yZWRBMjAwID0gJyNmZjUyNTInO1xudmFyIHJlZEE0MDAgPSBleHBvcnRzLnJlZEE0MDAgPSAnI2ZmMTc0NCc7XG52YXIgcmVkQTcwMCA9IGV4cG9ydHMucmVkQTcwMCA9ICcjZDUwMDAwJztcblxudmFyIHBpbms1MCA9IGV4cG9ydHMucGluazUwID0gJyNmY2U0ZWMnO1xudmFyIHBpbmsxMDAgPSBleHBvcnRzLnBpbmsxMDAgPSAnI2Y4YmJkMCc7XG52YXIgcGluazIwMCA9IGV4cG9ydHMucGluazIwMCA9ICcjZjQ4ZmIxJztcbnZhciBwaW5rMzAwID0gZXhwb3J0cy5waW5rMzAwID0gJyNmMDYyOTInO1xudmFyIHBpbms0MDAgPSBleHBvcnRzLnBpbms0MDAgPSAnI2VjNDA3YSc7XG52YXIgcGluazUwMCA9IGV4cG9ydHMucGluazUwMCA9ICcjZTkxZTYzJztcbnZhciBwaW5rNjAwID0gZXhwb3J0cy5waW5rNjAwID0gJyNkODFiNjAnO1xudmFyIHBpbms3MDAgPSBleHBvcnRzLnBpbms3MDAgPSAnI2MyMTg1Yic7XG52YXIgcGluazgwMCA9IGV4cG9ydHMucGluazgwMCA9ICcjYWQxNDU3JztcbnZhciBwaW5rOTAwID0gZXhwb3J0cy5waW5rOTAwID0gJyM4ODBlNGYnO1xudmFyIHBpbmtBMTAwID0gZXhwb3J0cy5waW5rQTEwMCA9ICcjZmY4MGFiJztcbnZhciBwaW5rQTIwMCA9IGV4cG9ydHMucGlua0EyMDAgPSAnI2ZmNDA4MSc7XG52YXIgcGlua0E0MDAgPSBleHBvcnRzLnBpbmtBNDAwID0gJyNmNTAwNTcnO1xudmFyIHBpbmtBNzAwID0gZXhwb3J0cy5waW5rQTcwMCA9ICcjYzUxMTYyJztcblxudmFyIHB1cnBsZTUwID0gZXhwb3J0cy5wdXJwbGU1MCA9ICcjZjNlNWY1JztcbnZhciBwdXJwbGUxMDAgPSBleHBvcnRzLnB1cnBsZTEwMCA9ICcjZTFiZWU3JztcbnZhciBwdXJwbGUyMDAgPSBleHBvcnRzLnB1cnBsZTIwMCA9ICcjY2U5M2Q4JztcbnZhciBwdXJwbGUzMDAgPSBleHBvcnRzLnB1cnBsZTMwMCA9ICcjYmE2OGM4JztcbnZhciBwdXJwbGU0MDAgPSBleHBvcnRzLnB1cnBsZTQwMCA9ICcjYWI0N2JjJztcbnZhciBwdXJwbGU1MDAgPSBleHBvcnRzLnB1cnBsZTUwMCA9ICcjOWMyN2IwJztcbnZhciBwdXJwbGU2MDAgPSBleHBvcnRzLnB1cnBsZTYwMCA9ICcjOGUyNGFhJztcbnZhciBwdXJwbGU3MDAgPSBleHBvcnRzLnB1cnBsZTcwMCA9ICcjN2IxZmEyJztcbnZhciBwdXJwbGU4MDAgPSBleHBvcnRzLnB1cnBsZTgwMCA9ICcjNmExYjlhJztcbnZhciBwdXJwbGU5MDAgPSBleHBvcnRzLnB1cnBsZTkwMCA9ICcjNGExNDhjJztcbnZhciBwdXJwbGVBMTAwID0gZXhwb3J0cy5wdXJwbGVBMTAwID0gJyNlYTgwZmMnO1xudmFyIHB1cnBsZUEyMDAgPSBleHBvcnRzLnB1cnBsZUEyMDAgPSAnI2UwNDBmYic7XG52YXIgcHVycGxlQTQwMCA9IGV4cG9ydHMucHVycGxlQTQwMCA9ICcjZDUwMGY5JztcbnZhciBwdXJwbGVBNzAwID0gZXhwb3J0cy5wdXJwbGVBNzAwID0gJyNhYTAwZmYnO1xuXG52YXIgZGVlcFB1cnBsZTUwID0gZXhwb3J0cy5kZWVwUHVycGxlNTAgPSAnI2VkZTdmNic7XG52YXIgZGVlcFB1cnBsZTEwMCA9IGV4cG9ydHMuZGVlcFB1cnBsZTEwMCA9ICcjZDFjNGU5JztcbnZhciBkZWVwUHVycGxlMjAwID0gZXhwb3J0cy5kZWVwUHVycGxlMjAwID0gJyNiMzlkZGInO1xudmFyIGRlZXBQdXJwbGUzMDAgPSBleHBvcnRzLmRlZXBQdXJwbGUzMDAgPSAnIzk1NzVjZCc7XG52YXIgZGVlcFB1cnBsZTQwMCA9IGV4cG9ydHMuZGVlcFB1cnBsZTQwMCA9ICcjN2U1N2MyJztcbnZhciBkZWVwUHVycGxlNTAwID0gZXhwb3J0cy5kZWVwUHVycGxlNTAwID0gJyM2NzNhYjcnO1xudmFyIGRlZXBQdXJwbGU2MDAgPSBleHBvcnRzLmRlZXBQdXJwbGU2MDAgPSAnIzVlMzViMSc7XG52YXIgZGVlcFB1cnBsZTcwMCA9IGV4cG9ydHMuZGVlcFB1cnBsZTcwMCA9ICcjNTEyZGE4JztcbnZhciBkZWVwUHVycGxlODAwID0gZXhwb3J0cy5kZWVwUHVycGxlODAwID0gJyM0NTI3YTAnO1xudmFyIGRlZXBQdXJwbGU5MDAgPSBleHBvcnRzLmRlZXBQdXJwbGU5MDAgPSAnIzMxMWI5Mic7XG52YXIgZGVlcFB1cnBsZUExMDAgPSBleHBvcnRzLmRlZXBQdXJwbGVBMTAwID0gJyNiMzg4ZmYnO1xudmFyIGRlZXBQdXJwbGVBMjAwID0gZXhwb3J0cy5kZWVwUHVycGxlQTIwMCA9ICcjN2M0ZGZmJztcbnZhciBkZWVwUHVycGxlQTQwMCA9IGV4cG9ydHMuZGVlcFB1cnBsZUE0MDAgPSAnIzY1MWZmZic7XG52YXIgZGVlcFB1cnBsZUE3MDAgPSBleHBvcnRzLmRlZXBQdXJwbGVBNzAwID0gJyM2MjAwZWEnO1xuXG52YXIgaW5kaWdvNTAgPSBleHBvcnRzLmluZGlnbzUwID0gJyNlOGVhZjYnO1xudmFyIGluZGlnbzEwMCA9IGV4cG9ydHMuaW5kaWdvMTAwID0gJyNjNWNhZTknO1xudmFyIGluZGlnbzIwMCA9IGV4cG9ydHMuaW5kaWdvMjAwID0gJyM5ZmE4ZGEnO1xudmFyIGluZGlnbzMwMCA9IGV4cG9ydHMuaW5kaWdvMzAwID0gJyM3OTg2Y2InO1xudmFyIGluZGlnbzQwMCA9IGV4cG9ydHMuaW5kaWdvNDAwID0gJyM1YzZiYzAnO1xudmFyIGluZGlnbzUwMCA9IGV4cG9ydHMuaW5kaWdvNTAwID0gJyMzZjUxYjUnO1xudmFyIGluZGlnbzYwMCA9IGV4cG9ydHMuaW5kaWdvNjAwID0gJyMzOTQ5YWInO1xudmFyIGluZGlnbzcwMCA9IGV4cG9ydHMuaW5kaWdvNzAwID0gJyMzMDNmOWYnO1xudmFyIGluZGlnbzgwMCA9IGV4cG9ydHMuaW5kaWdvODAwID0gJyMyODM1OTMnO1xudmFyIGluZGlnbzkwMCA9IGV4cG9ydHMuaW5kaWdvOTAwID0gJyMxYTIzN2UnO1xudmFyIGluZGlnb0ExMDAgPSBleHBvcnRzLmluZGlnb0ExMDAgPSAnIzhjOWVmZic7XG52YXIgaW5kaWdvQTIwMCA9IGV4cG9ydHMuaW5kaWdvQTIwMCA9ICcjNTM2ZGZlJztcbnZhciBpbmRpZ29BNDAwID0gZXhwb3J0cy5pbmRpZ29BNDAwID0gJyMzZDVhZmUnO1xudmFyIGluZGlnb0E3MDAgPSBleHBvcnRzLmluZGlnb0E3MDAgPSAnIzMwNGZmZSc7XG5cbnZhciBibHVlNTAgPSBleHBvcnRzLmJsdWU1MCA9ICcjZTNmMmZkJztcbnZhciBibHVlMTAwID0gZXhwb3J0cy5ibHVlMTAwID0gJyNiYmRlZmInO1xudmFyIGJsdWUyMDAgPSBleHBvcnRzLmJsdWUyMDAgPSAnIzkwY2FmOSc7XG52YXIgYmx1ZTMwMCA9IGV4cG9ydHMuYmx1ZTMwMCA9ICcjNjRiNWY2JztcbnZhciBibHVlNDAwID0gZXhwb3J0cy5ibHVlNDAwID0gJyM0MmE1ZjUnO1xudmFyIGJsdWU1MDAgPSBleHBvcnRzLmJsdWU1MDAgPSAnIzIxOTZmMyc7XG52YXIgYmx1ZTYwMCA9IGV4cG9ydHMuYmx1ZTYwMCA9ICcjMWU4OGU1JztcbnZhciBibHVlNzAwID0gZXhwb3J0cy5ibHVlNzAwID0gJyMxOTc2ZDInO1xudmFyIGJsdWU4MDAgPSBleHBvcnRzLmJsdWU4MDAgPSAnIzE1NjVjMCc7XG52YXIgYmx1ZTkwMCA9IGV4cG9ydHMuYmx1ZTkwMCA9ICcjMGQ0N2ExJztcbnZhciBibHVlQTEwMCA9IGV4cG9ydHMuYmx1ZUExMDAgPSAnIzgyYjFmZic7XG52YXIgYmx1ZUEyMDAgPSBleHBvcnRzLmJsdWVBMjAwID0gJyM0NDhhZmYnO1xudmFyIGJsdWVBNDAwID0gZXhwb3J0cy5ibHVlQTQwMCA9ICcjMjk3OWZmJztcbnZhciBibHVlQTcwMCA9IGV4cG9ydHMuYmx1ZUE3MDAgPSAnIzI5NjJmZic7XG5cbnZhciBsaWdodEJsdWU1MCA9IGV4cG9ydHMubGlnaHRCbHVlNTAgPSAnI2UxZjVmZSc7XG52YXIgbGlnaHRCbHVlMTAwID0gZXhwb3J0cy5saWdodEJsdWUxMDAgPSAnI2IzZTVmYyc7XG52YXIgbGlnaHRCbHVlMjAwID0gZXhwb3J0cy5saWdodEJsdWUyMDAgPSAnIzgxZDRmYSc7XG52YXIgbGlnaHRCbHVlMzAwID0gZXhwb3J0cy5saWdodEJsdWUzMDAgPSAnIzRmYzNmNyc7XG52YXIgbGlnaHRCbHVlNDAwID0gZXhwb3J0cy5saWdodEJsdWU0MDAgPSAnIzI5YjZmNic7XG52YXIgbGlnaHRCbHVlNTAwID0gZXhwb3J0cy5saWdodEJsdWU1MDAgPSAnIzAzYTlmNCc7XG52YXIgbGlnaHRCbHVlNjAwID0gZXhwb3J0cy5saWdodEJsdWU2MDAgPSAnIzAzOWJlNSc7XG52YXIgbGlnaHRCbHVlNzAwID0gZXhwb3J0cy5saWdodEJsdWU3MDAgPSAnIzAyODhkMSc7XG52YXIgbGlnaHRCbHVlODAwID0gZXhwb3J0cy5saWdodEJsdWU4MDAgPSAnIzAyNzdiZCc7XG52YXIgbGlnaHRCbHVlOTAwID0gZXhwb3J0cy5saWdodEJsdWU5MDAgPSAnIzAxNTc5Yic7XG52YXIgbGlnaHRCbHVlQTEwMCA9IGV4cG9ydHMubGlnaHRCbHVlQTEwMCA9ICcjODBkOGZmJztcbnZhciBsaWdodEJsdWVBMjAwID0gZXhwb3J0cy5saWdodEJsdWVBMjAwID0gJyM0MGM0ZmYnO1xudmFyIGxpZ2h0Qmx1ZUE0MDAgPSBleHBvcnRzLmxpZ2h0Qmx1ZUE0MDAgPSAnIzAwYjBmZic7XG52YXIgbGlnaHRCbHVlQTcwMCA9IGV4cG9ydHMubGlnaHRCbHVlQTcwMCA9ICcjMDA5MWVhJztcblxudmFyIGN5YW41MCA9IGV4cG9ydHMuY3lhbjUwID0gJyNlMGY3ZmEnO1xudmFyIGN5YW4xMDAgPSBleHBvcnRzLmN5YW4xMDAgPSAnI2IyZWJmMic7XG52YXIgY3lhbjIwMCA9IGV4cG9ydHMuY3lhbjIwMCA9ICcjODBkZWVhJztcbnZhciBjeWFuMzAwID0gZXhwb3J0cy5jeWFuMzAwID0gJyM0ZGQwZTEnO1xudmFyIGN5YW40MDAgPSBleHBvcnRzLmN5YW40MDAgPSAnIzI2YzZkYSc7XG52YXIgY3lhbjUwMCA9IGV4cG9ydHMuY3lhbjUwMCA9ICcjMDBiY2Q0JztcbnZhciBjeWFuNjAwID0gZXhwb3J0cy5jeWFuNjAwID0gJyMwMGFjYzEnO1xudmFyIGN5YW43MDAgPSBleHBvcnRzLmN5YW43MDAgPSAnIzAwOTdhNyc7XG52YXIgY3lhbjgwMCA9IGV4cG9ydHMuY3lhbjgwMCA9ICcjMDA4MzhmJztcbnZhciBjeWFuOTAwID0gZXhwb3J0cy5jeWFuOTAwID0gJyMwMDYwNjQnO1xudmFyIGN5YW5BMTAwID0gZXhwb3J0cy5jeWFuQTEwMCA9ICcjODRmZmZmJztcbnZhciBjeWFuQTIwMCA9IGV4cG9ydHMuY3lhbkEyMDAgPSAnIzE4ZmZmZic7XG52YXIgY3lhbkE0MDAgPSBleHBvcnRzLmN5YW5BNDAwID0gJyMwMGU1ZmYnO1xudmFyIGN5YW5BNzAwID0gZXhwb3J0cy5jeWFuQTcwMCA9ICcjMDBiOGQ0JztcblxudmFyIHRlYWw1MCA9IGV4cG9ydHMudGVhbDUwID0gJyNlMGYyZjEnO1xudmFyIHRlYWwxMDAgPSBleHBvcnRzLnRlYWwxMDAgPSAnI2IyZGZkYic7XG52YXIgdGVhbDIwMCA9IGV4cG9ydHMudGVhbDIwMCA9ICcjODBjYmM0JztcbnZhciB0ZWFsMzAwID0gZXhwb3J0cy50ZWFsMzAwID0gJyM0ZGI2YWMnO1xudmFyIHRlYWw0MDAgPSBleHBvcnRzLnRlYWw0MDAgPSAnIzI2YTY5YSc7XG52YXIgdGVhbDUwMCA9IGV4cG9ydHMudGVhbDUwMCA9ICcjMDA5Njg4JztcbnZhciB0ZWFsNjAwID0gZXhwb3J0cy50ZWFsNjAwID0gJyMwMDg5N2InO1xudmFyIHRlYWw3MDAgPSBleHBvcnRzLnRlYWw3MDAgPSAnIzAwNzk2Yic7XG52YXIgdGVhbDgwMCA9IGV4cG9ydHMudGVhbDgwMCA9ICcjMDA2OTVjJztcbnZhciB0ZWFsOTAwID0gZXhwb3J0cy50ZWFsOTAwID0gJyMwMDRkNDAnO1xudmFyIHRlYWxBMTAwID0gZXhwb3J0cy50ZWFsQTEwMCA9ICcjYTdmZmViJztcbnZhciB0ZWFsQTIwMCA9IGV4cG9ydHMudGVhbEEyMDAgPSAnIzY0ZmZkYSc7XG52YXIgdGVhbEE0MDAgPSBleHBvcnRzLnRlYWxBNDAwID0gJyMxZGU5YjYnO1xudmFyIHRlYWxBNzAwID0gZXhwb3J0cy50ZWFsQTcwMCA9ICcjMDBiZmE1JztcblxudmFyIGdyZWVuNTAgPSBleHBvcnRzLmdyZWVuNTAgPSAnI2U4ZjVlOSc7XG52YXIgZ3JlZW4xMDAgPSBleHBvcnRzLmdyZWVuMTAwID0gJyNjOGU2YzknO1xudmFyIGdyZWVuMjAwID0gZXhwb3J0cy5ncmVlbjIwMCA9ICcjYTVkNmE3JztcbnZhciBncmVlbjMwMCA9IGV4cG9ydHMuZ3JlZW4zMDAgPSAnIzgxYzc4NCc7XG52YXIgZ3JlZW40MDAgPSBleHBvcnRzLmdyZWVuNDAwID0gJyM2NmJiNmEnO1xudmFyIGdyZWVuNTAwID0gZXhwb3J0cy5ncmVlbjUwMCA9ICcjNGNhZjUwJztcbnZhciBncmVlbjYwMCA9IGV4cG9ydHMuZ3JlZW42MDAgPSAnIzQzYTA0Nyc7XG52YXIgZ3JlZW43MDAgPSBleHBvcnRzLmdyZWVuNzAwID0gJyMzODhlM2MnO1xudmFyIGdyZWVuODAwID0gZXhwb3J0cy5ncmVlbjgwMCA9ICcjMmU3ZDMyJztcbnZhciBncmVlbjkwMCA9IGV4cG9ydHMuZ3JlZW45MDAgPSAnIzFiNWUyMCc7XG52YXIgZ3JlZW5BMTAwID0gZXhwb3J0cy5ncmVlbkExMDAgPSAnI2I5ZjZjYSc7XG52YXIgZ3JlZW5BMjAwID0gZXhwb3J0cy5ncmVlbkEyMDAgPSAnIzY5ZjBhZSc7XG52YXIgZ3JlZW5BNDAwID0gZXhwb3J0cy5ncmVlbkE0MDAgPSAnIzAwZTY3Nic7XG52YXIgZ3JlZW5BNzAwID0gZXhwb3J0cy5ncmVlbkE3MDAgPSAnIzAwYzg1Myc7XG5cbnZhciBsaWdodEdyZWVuNTAgPSBleHBvcnRzLmxpZ2h0R3JlZW41MCA9ICcjZjFmOGU5JztcbnZhciBsaWdodEdyZWVuMTAwID0gZXhwb3J0cy5saWdodEdyZWVuMTAwID0gJyNkY2VkYzgnO1xudmFyIGxpZ2h0R3JlZW4yMDAgPSBleHBvcnRzLmxpZ2h0R3JlZW4yMDAgPSAnI2M1ZTFhNSc7XG52YXIgbGlnaHRHcmVlbjMwMCA9IGV4cG9ydHMubGlnaHRHcmVlbjMwMCA9ICcjYWVkNTgxJztcbnZhciBsaWdodEdyZWVuNDAwID0gZXhwb3J0cy5saWdodEdyZWVuNDAwID0gJyM5Y2NjNjUnO1xudmFyIGxpZ2h0R3JlZW41MDAgPSBleHBvcnRzLmxpZ2h0R3JlZW41MDAgPSAnIzhiYzM0YSc7XG52YXIgbGlnaHRHcmVlbjYwMCA9IGV4cG9ydHMubGlnaHRHcmVlbjYwMCA9ICcjN2NiMzQyJztcbnZhciBsaWdodEdyZWVuNzAwID0gZXhwb3J0cy5saWdodEdyZWVuNzAwID0gJyM2ODlmMzgnO1xudmFyIGxpZ2h0R3JlZW44MDAgPSBleHBvcnRzLmxpZ2h0R3JlZW44MDAgPSAnIzU1OGIyZic7XG52YXIgbGlnaHRHcmVlbjkwMCA9IGV4cG9ydHMubGlnaHRHcmVlbjkwMCA9ICcjMzM2OTFlJztcbnZhciBsaWdodEdyZWVuQTEwMCA9IGV4cG9ydHMubGlnaHRHcmVlbkExMDAgPSAnI2NjZmY5MCc7XG52YXIgbGlnaHRHcmVlbkEyMDAgPSBleHBvcnRzLmxpZ2h0R3JlZW5BMjAwID0gJyNiMmZmNTknO1xudmFyIGxpZ2h0R3JlZW5BNDAwID0gZXhwb3J0cy5saWdodEdyZWVuQTQwMCA9ICcjNzZmZjAzJztcbnZhciBsaWdodEdyZWVuQTcwMCA9IGV4cG9ydHMubGlnaHRHcmVlbkE3MDAgPSAnIzY0ZGQxNyc7XG5cbnZhciBsaW1lNTAgPSBleHBvcnRzLmxpbWU1MCA9ICcjZjlmYmU3JztcbnZhciBsaW1lMTAwID0gZXhwb3J0cy5saW1lMTAwID0gJyNmMGY0YzMnO1xudmFyIGxpbWUyMDAgPSBleHBvcnRzLmxpbWUyMDAgPSAnI2U2ZWU5Yyc7XG52YXIgbGltZTMwMCA9IGV4cG9ydHMubGltZTMwMCA9ICcjZGNlNzc1JztcbnZhciBsaW1lNDAwID0gZXhwb3J0cy5saW1lNDAwID0gJyNkNGUxNTcnO1xudmFyIGxpbWU1MDAgPSBleHBvcnRzLmxpbWU1MDAgPSAnI2NkZGMzOSc7XG52YXIgbGltZTYwMCA9IGV4cG9ydHMubGltZTYwMCA9ICcjYzBjYTMzJztcbnZhciBsaW1lNzAwID0gZXhwb3J0cy5saW1lNzAwID0gJyNhZmI0MmInO1xudmFyIGxpbWU4MDAgPSBleHBvcnRzLmxpbWU4MDAgPSAnIzllOWQyNCc7XG52YXIgbGltZTkwMCA9IGV4cG9ydHMubGltZTkwMCA9ICcjODI3NzE3JztcbnZhciBsaW1lQTEwMCA9IGV4cG9ydHMubGltZUExMDAgPSAnI2Y0ZmY4MSc7XG52YXIgbGltZUEyMDAgPSBleHBvcnRzLmxpbWVBMjAwID0gJyNlZWZmNDEnO1xudmFyIGxpbWVBNDAwID0gZXhwb3J0cy5saW1lQTQwMCA9ICcjYzZmZjAwJztcbnZhciBsaW1lQTcwMCA9IGV4cG9ydHMubGltZUE3MDAgPSAnI2FlZWEwMCc7XG5cbnZhciB5ZWxsb3c1MCA9IGV4cG9ydHMueWVsbG93NTAgPSAnI2ZmZmRlNyc7XG52YXIgeWVsbG93MTAwID0gZXhwb3J0cy55ZWxsb3cxMDAgPSAnI2ZmZjljNCc7XG52YXIgeWVsbG93MjAwID0gZXhwb3J0cy55ZWxsb3cyMDAgPSAnI2ZmZjU5ZCc7XG52YXIgeWVsbG93MzAwID0gZXhwb3J0cy55ZWxsb3czMDAgPSAnI2ZmZjE3Nic7XG52YXIgeWVsbG93NDAwID0gZXhwb3J0cy55ZWxsb3c0MDAgPSAnI2ZmZWU1OCc7XG52YXIgeWVsbG93NTAwID0gZXhwb3J0cy55ZWxsb3c1MDAgPSAnI2ZmZWIzYic7XG52YXIgeWVsbG93NjAwID0gZXhwb3J0cy55ZWxsb3c2MDAgPSAnI2ZkZDgzNSc7XG52YXIgeWVsbG93NzAwID0gZXhwb3J0cy55ZWxsb3c3MDAgPSAnI2ZiYzAyZCc7XG52YXIgeWVsbG93ODAwID0gZXhwb3J0cy55ZWxsb3c4MDAgPSAnI2Y5YTgyNSc7XG52YXIgeWVsbG93OTAwID0gZXhwb3J0cy55ZWxsb3c5MDAgPSAnI2Y1N2YxNyc7XG52YXIgeWVsbG93QTEwMCA9IGV4cG9ydHMueWVsbG93QTEwMCA9ICcjZmZmZjhkJztcbnZhciB5ZWxsb3dBMjAwID0gZXhwb3J0cy55ZWxsb3dBMjAwID0gJyNmZmZmMDAnO1xudmFyIHllbGxvd0E0MDAgPSBleHBvcnRzLnllbGxvd0E0MDAgPSAnI2ZmZWEwMCc7XG52YXIgeWVsbG93QTcwMCA9IGV4cG9ydHMueWVsbG93QTcwMCA9ICcjZmZkNjAwJztcblxudmFyIGFtYmVyNTAgPSBleHBvcnRzLmFtYmVyNTAgPSAnI2ZmZjhlMSc7XG52YXIgYW1iZXIxMDAgPSBleHBvcnRzLmFtYmVyMTAwID0gJyNmZmVjYjMnO1xudmFyIGFtYmVyMjAwID0gZXhwb3J0cy5hbWJlcjIwMCA9ICcjZmZlMDgyJztcbnZhciBhbWJlcjMwMCA9IGV4cG9ydHMuYW1iZXIzMDAgPSAnI2ZmZDU0Zic7XG52YXIgYW1iZXI0MDAgPSBleHBvcnRzLmFtYmVyNDAwID0gJyNmZmNhMjgnO1xudmFyIGFtYmVyNTAwID0gZXhwb3J0cy5hbWJlcjUwMCA9ICcjZmZjMTA3JztcbnZhciBhbWJlcjYwMCA9IGV4cG9ydHMuYW1iZXI2MDAgPSAnI2ZmYjMwMCc7XG52YXIgYW1iZXI3MDAgPSBleHBvcnRzLmFtYmVyNzAwID0gJyNmZmEwMDAnO1xudmFyIGFtYmVyODAwID0gZXhwb3J0cy5hbWJlcjgwMCA9ICcjZmY4ZjAwJztcbnZhciBhbWJlcjkwMCA9IGV4cG9ydHMuYW1iZXI5MDAgPSAnI2ZmNmYwMCc7XG52YXIgYW1iZXJBMTAwID0gZXhwb3J0cy5hbWJlckExMDAgPSAnI2ZmZTU3Zic7XG52YXIgYW1iZXJBMjAwID0gZXhwb3J0cy5hbWJlckEyMDAgPSAnI2ZmZDc0MCc7XG52YXIgYW1iZXJBNDAwID0gZXhwb3J0cy5hbWJlckE0MDAgPSAnI2ZmYzQwMCc7XG52YXIgYW1iZXJBNzAwID0gZXhwb3J0cy5hbWJlckE3MDAgPSAnI2ZmYWIwMCc7XG5cbnZhciBvcmFuZ2U1MCA9IGV4cG9ydHMub3JhbmdlNTAgPSAnI2ZmZjNlMCc7XG52YXIgb3JhbmdlMTAwID0gZXhwb3J0cy5vcmFuZ2UxMDAgPSAnI2ZmZTBiMic7XG52YXIgb3JhbmdlMjAwID0gZXhwb3J0cy5vcmFuZ2UyMDAgPSAnI2ZmY2M4MCc7XG52YXIgb3JhbmdlMzAwID0gZXhwb3J0cy5vcmFuZ2UzMDAgPSAnI2ZmYjc0ZCc7XG52YXIgb3JhbmdlNDAwID0gZXhwb3J0cy5vcmFuZ2U0MDAgPSAnI2ZmYTcyNic7XG52YXIgb3JhbmdlNTAwID0gZXhwb3J0cy5vcmFuZ2U1MDAgPSAnI2ZmOTgwMCc7XG52YXIgb3JhbmdlNjAwID0gZXhwb3J0cy5vcmFuZ2U2MDAgPSAnI2ZiOGMwMCc7XG52YXIgb3JhbmdlNzAwID0gZXhwb3J0cy5vcmFuZ2U3MDAgPSAnI2Y1N2MwMCc7XG52YXIgb3JhbmdlODAwID0gZXhwb3J0cy5vcmFuZ2U4MDAgPSAnI2VmNmMwMCc7XG52YXIgb3JhbmdlOTAwID0gZXhwb3J0cy5vcmFuZ2U5MDAgPSAnI2U2NTEwMCc7XG52YXIgb3JhbmdlQTEwMCA9IGV4cG9ydHMub3JhbmdlQTEwMCA9ICcjZmZkMTgwJztcbnZhciBvcmFuZ2VBMjAwID0gZXhwb3J0cy5vcmFuZ2VBMjAwID0gJyNmZmFiNDAnO1xudmFyIG9yYW5nZUE0MDAgPSBleHBvcnRzLm9yYW5nZUE0MDAgPSAnI2ZmOTEwMCc7XG52YXIgb3JhbmdlQTcwMCA9IGV4cG9ydHMub3JhbmdlQTcwMCA9ICcjZmY2ZDAwJztcblxudmFyIGRlZXBPcmFuZ2U1MCA9IGV4cG9ydHMuZGVlcE9yYW5nZTUwID0gJyNmYmU5ZTcnO1xudmFyIGRlZXBPcmFuZ2UxMDAgPSBleHBvcnRzLmRlZXBPcmFuZ2UxMDAgPSAnI2ZmY2NiYyc7XG52YXIgZGVlcE9yYW5nZTIwMCA9IGV4cG9ydHMuZGVlcE9yYW5nZTIwMCA9ICcjZmZhYjkxJztcbnZhciBkZWVwT3JhbmdlMzAwID0gZXhwb3J0cy5kZWVwT3JhbmdlMzAwID0gJyNmZjhhNjUnO1xudmFyIGRlZXBPcmFuZ2U0MDAgPSBleHBvcnRzLmRlZXBPcmFuZ2U0MDAgPSAnI2ZmNzA0Myc7XG52YXIgZGVlcE9yYW5nZTUwMCA9IGV4cG9ydHMuZGVlcE9yYW5nZTUwMCA9ICcjZmY1NzIyJztcbnZhciBkZWVwT3JhbmdlNjAwID0gZXhwb3J0cy5kZWVwT3JhbmdlNjAwID0gJyNmNDUxMWUnO1xudmFyIGRlZXBPcmFuZ2U3MDAgPSBleHBvcnRzLmRlZXBPcmFuZ2U3MDAgPSAnI2U2NGExOSc7XG52YXIgZGVlcE9yYW5nZTgwMCA9IGV4cG9ydHMuZGVlcE9yYW5nZTgwMCA9ICcjZDg0MzE1JztcbnZhciBkZWVwT3JhbmdlOTAwID0gZXhwb3J0cy5kZWVwT3JhbmdlOTAwID0gJyNiZjM2MGMnO1xudmFyIGRlZXBPcmFuZ2VBMTAwID0gZXhwb3J0cy5kZWVwT3JhbmdlQTEwMCA9ICcjZmY5ZTgwJztcbnZhciBkZWVwT3JhbmdlQTIwMCA9IGV4cG9ydHMuZGVlcE9yYW5nZUEyMDAgPSAnI2ZmNmU0MCc7XG52YXIgZGVlcE9yYW5nZUE0MDAgPSBleHBvcnRzLmRlZXBPcmFuZ2VBNDAwID0gJyNmZjNkMDAnO1xudmFyIGRlZXBPcmFuZ2VBNzAwID0gZXhwb3J0cy5kZWVwT3JhbmdlQTcwMCA9ICcjZGQyYzAwJztcblxudmFyIGJyb3duNTAgPSBleHBvcnRzLmJyb3duNTAgPSAnI2VmZWJlOSc7XG52YXIgYnJvd24xMDAgPSBleHBvcnRzLmJyb3duMTAwID0gJyNkN2NjYzgnO1xudmFyIGJyb3duMjAwID0gZXhwb3J0cy5icm93bjIwMCA9ICcjYmNhYWE0JztcbnZhciBicm93bjMwMCA9IGV4cG9ydHMuYnJvd24zMDAgPSAnI2ExODg3Zic7XG52YXIgYnJvd240MDAgPSBleHBvcnRzLmJyb3duNDAwID0gJyM4ZDZlNjMnO1xudmFyIGJyb3duNTAwID0gZXhwb3J0cy5icm93bjUwMCA9ICcjNzk1NTQ4JztcbnZhciBicm93bjYwMCA9IGV4cG9ydHMuYnJvd242MDAgPSAnIzZkNGM0MSc7XG52YXIgYnJvd243MDAgPSBleHBvcnRzLmJyb3duNzAwID0gJyM1ZDQwMzcnO1xudmFyIGJyb3duODAwID0gZXhwb3J0cy5icm93bjgwMCA9ICcjNGUzNDJlJztcbnZhciBicm93bjkwMCA9IGV4cG9ydHMuYnJvd245MDAgPSAnIzNlMjcyMyc7XG5cbnZhciBibHVlR3JleTUwID0gZXhwb3J0cy5ibHVlR3JleTUwID0gJyNlY2VmZjEnO1xudmFyIGJsdWVHcmV5MTAwID0gZXhwb3J0cy5ibHVlR3JleTEwMCA9ICcjY2ZkOGRjJztcbnZhciBibHVlR3JleTIwMCA9IGV4cG9ydHMuYmx1ZUdyZXkyMDAgPSAnI2IwYmVjNSc7XG52YXIgYmx1ZUdyZXkzMDAgPSBleHBvcnRzLmJsdWVHcmV5MzAwID0gJyM5MGE0YWUnO1xudmFyIGJsdWVHcmV5NDAwID0gZXhwb3J0cy5ibHVlR3JleTQwMCA9ICcjNzg5MDljJztcbnZhciBibHVlR3JleTUwMCA9IGV4cG9ydHMuYmx1ZUdyZXk1MDAgPSAnIzYwN2Q4Yic7XG52YXIgYmx1ZUdyZXk2MDAgPSBleHBvcnRzLmJsdWVHcmV5NjAwID0gJyM1NDZlN2EnO1xudmFyIGJsdWVHcmV5NzAwID0gZXhwb3J0cy5ibHVlR3JleTcwMCA9ICcjNDU1YTY0JztcbnZhciBibHVlR3JleTgwMCA9IGV4cG9ydHMuYmx1ZUdyZXk4MDAgPSAnIzM3NDc0Zic7XG52YXIgYmx1ZUdyZXk5MDAgPSBleHBvcnRzLmJsdWVHcmV5OTAwID0gJyMyNjMyMzgnO1xuXG52YXIgZ3JleTUwID0gZXhwb3J0cy5ncmV5NTAgPSAnI2ZhZmFmYSc7XG52YXIgZ3JleTEwMCA9IGV4cG9ydHMuZ3JleTEwMCA9ICcjZjVmNWY1JztcbnZhciBncmV5MjAwID0gZXhwb3J0cy5ncmV5MjAwID0gJyNlZWVlZWUnO1xudmFyIGdyZXkzMDAgPSBleHBvcnRzLmdyZXkzMDAgPSAnI2UwZTBlMCc7XG52YXIgZ3JleTQwMCA9IGV4cG9ydHMuZ3JleTQwMCA9ICcjYmRiZGJkJztcbnZhciBncmV5NTAwID0gZXhwb3J0cy5ncmV5NTAwID0gJyM5ZTllOWUnO1xudmFyIGdyZXk2MDAgPSBleHBvcnRzLmdyZXk2MDAgPSAnIzc1NzU3NSc7XG52YXIgZ3JleTcwMCA9IGV4cG9ydHMuZ3JleTcwMCA9ICcjNjE2MTYxJztcbnZhciBncmV5ODAwID0gZXhwb3J0cy5ncmV5ODAwID0gJyM0MjQyNDInO1xudmFyIGdyZXk5MDAgPSBleHBvcnRzLmdyZXk5MDAgPSAnIzIxMjEyMSc7XG5cbnZhciBibGFjayA9IGV4cG9ydHMuYmxhY2sgPSAnIzAwMDAwMCc7XG52YXIgd2hpdGUgPSBleHBvcnRzLndoaXRlID0gJyNmZmZmZmYnO1xuXG52YXIgdHJhbnNwYXJlbnQgPSBleHBvcnRzLnRyYW5zcGFyZW50ID0gJ3JnYmEoMCwgMCwgMCwgMCknO1xudmFyIGZ1bGxCbGFjayA9IGV4cG9ydHMuZnVsbEJsYWNrID0gJ3JnYmEoMCwgMCwgMCwgMSknO1xudmFyIGRhcmtCbGFjayA9IGV4cG9ydHMuZGFya0JsYWNrID0gJ3JnYmEoMCwgMCwgMCwgMC44NyknO1xudmFyIGxpZ2h0QmxhY2sgPSBleHBvcnRzLmxpZ2h0QmxhY2sgPSAncmdiYSgwLCAwLCAwLCAwLjU0KSc7XG52YXIgbWluQmxhY2sgPSBleHBvcnRzLm1pbkJsYWNrID0gJ3JnYmEoMCwgMCwgMCwgMC4yNiknO1xudmFyIGZhaW50QmxhY2sgPSBleHBvcnRzLmZhaW50QmxhY2sgPSAncmdiYSgwLCAwLCAwLCAwLjEyKSc7XG52YXIgZnVsbFdoaXRlID0gZXhwb3J0cy5mdWxsV2hpdGUgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAxKSc7XG52YXIgZGFya1doaXRlID0gZXhwb3J0cy5kYXJrV2hpdGUgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg3KSc7XG52YXIgbGlnaHRXaGl0ZSA9IGV4cG9ydHMubGlnaHRXaGl0ZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNTQpJzsiLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciB3a3NFeHQgPSByZXF1aXJlKCcuL193a3MtZXh0Jyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICB2YXIgJFN5bWJvbCA9IGNvcmUuU3ltYm9sIHx8IChjb3JlLlN5bWJvbCA9IExJQlJBUlkgPyB7fSA6IGdsb2JhbC5TeW1ib2wgfHwge30pO1xuICBpZiAobmFtZS5jaGFyQXQoMCkgIT0gJ18nICYmICEobmFtZSBpbiAkU3ltYm9sKSkgZGVmaW5lUHJvcGVydHkoJFN5bWJvbCwgbmFtZSwgeyB2YWx1ZTogd2tzRXh0LmYobmFtZSkgfSk7XG59O1xuIiwiZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fd2tzJyk7XG4iLCJ2YXIgZGVmID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIHRhZywgc3RhdCkge1xuICBpZiAoaXQgJiYgIWhhcyhpdCA9IHN0YXQgPyBpdCA6IGl0LnByb3RvdHlwZSwgVEFHKSkgZGVmKGl0LCBUQUcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCB2YWx1ZTogdGFnIH0pO1xufTtcbiIsIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuIiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuIiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB0cnVlO1xuIiwiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iLCIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUykge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKFMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICh0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iLCIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXyc7XG52YXIgc3RvcmUgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB7fSk7XG59O1xuIiwidmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCdrZXlzJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHNoYXJlZFtrZXldIHx8IChzaGFyZWRba2V5XSA9IHVpZChrZXkpKTtcbn07XG4iLCIvLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ID09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxuZnVuY3Rpb24gbWFrZUVtcHR5RnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGFyZztcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYW5kIGRpc2NhcmRzIGlucHV0czsgaXQgaGFzIG5vIHNpZGUgZWZmZWN0cy4gVGhpcyBpc1xuICogcHJpbWFyaWx5IHVzZWZ1bCBpZGlvbWF0aWNhbGx5IGZvciBvdmVycmlkYWJsZSBmdW5jdGlvbiBlbmRwb2ludHMgd2hpY2hcbiAqIGFsd2F5cyBuZWVkIHRvIGJlIGNhbGxhYmxlLCBzaW5jZSBKUyBsYWNrcyBhIG51bGwtY2FsbCBpZGlvbSBhbGEgQ29jb2EuXG4gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUaGlzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcztcbn07XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zQXJndW1lbnQgPSBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiBhcmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5RnVuY3Rpb247IiwiLyoqXG4gKiBTbGljZSByZWZlcmVuY2UuXG4gKi9cblxudmFyIHNsaWNlID0gW10uc2xpY2U7XG5cbi8qKlxuICogQmluZCBgb2JqYCB0byBgZm5gLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBmbiBvciBzdHJpbmdcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iaiwgZm4pe1xuICBpZiAoJ3N0cmluZycgPT0gdHlwZW9mIGZuKSBmbiA9IG9ialtmbl07XG4gIGlmICgnZnVuY3Rpb24nICE9IHR5cGVvZiBmbikgdGhyb3cgbmV3IEVycm9yKCdiaW5kKCkgcmVxdWlyZXMgYSBmdW5jdGlvbicpO1xuICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIGZuLmFwcGx5KG9iaiwgYXJncy5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKSk7XG4gIH1cbn07XG4iLCJcbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBvbjtcblxuLyoqXG4gKiBIZWxwZXIgZm9yIHN1YnNjcmlwdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R8RXZlbnRFbWl0dGVyfSBvYmogd2l0aCBgRW1pdHRlcmAgbWl4aW4gb3IgYEV2ZW50RW1pdHRlcmBcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudCBuYW1lXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBvbiAob2JqLCBldiwgZm4pIHtcbiAgb2JqLm9uKGV2LCBmbik7XG4gIHJldHVybiB7XG4gICAgZGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgICAgb2JqLnJlbW92ZUxpc3RlbmVyKGV2LCBmbik7XG4gICAgfVxuICB9O1xufVxuIiwiXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIHBhcnNlciA9IHJlcXVpcmUoJ3NvY2tldC5pby1wYXJzZXInKTtcbnZhciBFbWl0dGVyID0gcmVxdWlyZSgnY29tcG9uZW50LWVtaXR0ZXInKTtcbnZhciB0b0FycmF5ID0gcmVxdWlyZSgndG8tYXJyYXknKTtcbnZhciBvbiA9IHJlcXVpcmUoJy4vb24nKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnY29tcG9uZW50LWJpbmQnKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tldC5pby1jbGllbnQ6c29ja2V0Jyk7XG52YXIgcGFyc2VxcyA9IHJlcXVpcmUoJ3BhcnNlcXMnKTtcbnZhciBoYXNCaW4gPSByZXF1aXJlKCdoYXMtYmluYXJ5MicpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IFNvY2tldDtcblxuLyoqXG4gKiBJbnRlcm5hbCBldmVudHMgKGJsYWNrbGlzdGVkKS5cbiAqIFRoZXNlIGV2ZW50cyBjYW4ndCBiZSBlbWl0dGVkIGJ5IHRoZSB1c2VyLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbnZhciBldmVudHMgPSB7XG4gIGNvbm5lY3Q6IDEsXG4gIGNvbm5lY3RfZXJyb3I6IDEsXG4gIGNvbm5lY3RfdGltZW91dDogMSxcbiAgY29ubmVjdGluZzogMSxcbiAgZGlzY29ubmVjdDogMSxcbiAgZXJyb3I6IDEsXG4gIHJlY29ubmVjdDogMSxcbiAgcmVjb25uZWN0X2F0dGVtcHQ6IDEsXG4gIHJlY29ubmVjdF9mYWlsZWQ6IDEsXG4gIHJlY29ubmVjdF9lcnJvcjogMSxcbiAgcmVjb25uZWN0aW5nOiAxLFxuICBwaW5nOiAxLFxuICBwb25nOiAxXG59O1xuXG4vKipcbiAqIFNob3J0Y3V0IHRvIGBFbWl0dGVyI2VtaXRgLlxuICovXG5cbnZhciBlbWl0ID0gRW1pdHRlci5wcm90b3R5cGUuZW1pdDtcblxuLyoqXG4gKiBgU29ja2V0YCBjb25zdHJ1Y3Rvci5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIFNvY2tldCAoaW8sIG5zcCwgb3B0cykge1xuICB0aGlzLmlvID0gaW87XG4gIHRoaXMubnNwID0gbnNwO1xuICB0aGlzLmpzb24gPSB0aGlzOyAvLyBjb21wYXRcbiAgdGhpcy5pZHMgPSAwO1xuICB0aGlzLmFja3MgPSB7fTtcbiAgdGhpcy5yZWNlaXZlQnVmZmVyID0gW107XG4gIHRoaXMuc2VuZEJ1ZmZlciA9IFtdO1xuICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlO1xuICB0aGlzLmRpc2Nvbm5lY3RlZCA9IHRydWU7XG4gIHRoaXMuZmxhZ3MgPSB7fTtcbiAgaWYgKG9wdHMgJiYgb3B0cy5xdWVyeSkge1xuICAgIHRoaXMucXVlcnkgPSBvcHRzLnF1ZXJ5O1xuICB9XG4gIGlmICh0aGlzLmlvLmF1dG9Db25uZWN0KSB0aGlzLm9wZW4oKTtcbn1cblxuLyoqXG4gKiBNaXggaW4gYEVtaXR0ZXJgLlxuICovXG5cbkVtaXR0ZXIoU29ja2V0LnByb3RvdHlwZSk7XG5cbi8qKlxuICogU3Vic2NyaWJlIHRvIG9wZW4sIGNsb3NlIGFuZCBwYWNrZXQgZXZlbnRzXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5zdWJFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLnN1YnMpIHJldHVybjtcblxuICB2YXIgaW8gPSB0aGlzLmlvO1xuICB0aGlzLnN1YnMgPSBbXG4gICAgb24oaW8sICdvcGVuJywgYmluZCh0aGlzLCAnb25vcGVuJykpLFxuICAgIG9uKGlvLCAncGFja2V0JywgYmluZCh0aGlzLCAnb25wYWNrZXQnKSksXG4gICAgb24oaW8sICdjbG9zZScsIGJpbmQodGhpcywgJ29uY2xvc2UnKSlcbiAgXTtcbn07XG5cbi8qKlxuICogXCJPcGVuc1wiIHRoZSBzb2NrZXQuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9wZW4gPVxuU29ja2V0LnByb3RvdHlwZS5jb25uZWN0ID0gZnVuY3Rpb24gKCkge1xuICBpZiAodGhpcy5jb25uZWN0ZWQpIHJldHVybiB0aGlzO1xuXG4gIHRoaXMuc3ViRXZlbnRzKCk7XG4gIHRoaXMuaW8ub3BlbigpOyAvLyBlbnN1cmUgb3BlblxuICBpZiAoJ29wZW4nID09PSB0aGlzLmlvLnJlYWR5U3RhdGUpIHRoaXMub25vcGVuKCk7XG4gIHRoaXMuZW1pdCgnY29ubmVjdGluZycpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2VuZHMgYSBgbWVzc2FnZWAgZXZlbnQuXG4gKlxuICogQHJldHVybiB7U29ja2V0fSBzZWxmXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNvY2tldC5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGFyZ3MgPSB0b0FycmF5KGFyZ3VtZW50cyk7XG4gIGFyZ3MudW5zaGlmdCgnbWVzc2FnZScpO1xuICB0aGlzLmVtaXQuYXBwbHkodGhpcywgYXJncyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBPdmVycmlkZSBgZW1pdGAuXG4gKiBJZiB0aGUgZXZlbnQgaXMgaW4gYGV2ZW50c2AsIGl0J3MgZW1pdHRlZCBub3JtYWxseS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnQgbmFtZVxuICogQHJldHVybiB7U29ja2V0fSBzZWxmXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNvY2tldC5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIChldikge1xuICBpZiAoZXZlbnRzLmhhc093blByb3BlcnR5KGV2KSkge1xuICAgIGVtaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHZhciBhcmdzID0gdG9BcnJheShhcmd1bWVudHMpO1xuICB2YXIgcGFja2V0ID0ge1xuICAgIHR5cGU6ICh0aGlzLmZsYWdzLmJpbmFyeSAhPT0gdW5kZWZpbmVkID8gdGhpcy5mbGFncy5iaW5hcnkgOiBoYXNCaW4oYXJncykpID8gcGFyc2VyLkJJTkFSWV9FVkVOVCA6IHBhcnNlci5FVkVOVCxcbiAgICBkYXRhOiBhcmdzXG4gIH07XG5cbiAgcGFja2V0Lm9wdGlvbnMgPSB7fTtcbiAgcGFja2V0Lm9wdGlvbnMuY29tcHJlc3MgPSAhdGhpcy5mbGFncyB8fCBmYWxzZSAhPT0gdGhpcy5mbGFncy5jb21wcmVzcztcblxuICAvLyBldmVudCBhY2sgY2FsbGJhY2tcbiAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBhcmdzW2FyZ3MubGVuZ3RoIC0gMV0pIHtcbiAgICBkZWJ1ZygnZW1pdHRpbmcgcGFja2V0IHdpdGggYWNrIGlkICVkJywgdGhpcy5pZHMpO1xuICAgIHRoaXMuYWNrc1t0aGlzLmlkc10gPSBhcmdzLnBvcCgpO1xuICAgIHBhY2tldC5pZCA9IHRoaXMuaWRzKys7XG4gIH1cblxuICBpZiAodGhpcy5jb25uZWN0ZWQpIHtcbiAgICB0aGlzLnBhY2tldChwYWNrZXQpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuc2VuZEJ1ZmZlci5wdXNoKHBhY2tldCk7XG4gIH1cblxuICB0aGlzLmZsYWdzID0ge307XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNlbmRzIGEgcGFja2V0LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYWNrZXRcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNvY2tldC5wcm90b3R5cGUucGFja2V0ID0gZnVuY3Rpb24gKHBhY2tldCkge1xuICBwYWNrZXQubnNwID0gdGhpcy5uc3A7XG4gIHRoaXMuaW8ucGFja2V0KHBhY2tldCk7XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIGVuZ2luZSBgb3BlbmAuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gIGRlYnVnKCd0cmFuc3BvcnQgaXMgb3BlbiAtIGNvbm5lY3RpbmcnKTtcblxuICAvLyB3cml0ZSBjb25uZWN0IHBhY2tldCBpZiBuZWNlc3NhcnlcbiAgaWYgKCcvJyAhPT0gdGhpcy5uc3ApIHtcbiAgICBpZiAodGhpcy5xdWVyeSkge1xuICAgICAgdmFyIHF1ZXJ5ID0gdHlwZW9mIHRoaXMucXVlcnkgPT09ICdvYmplY3QnID8gcGFyc2Vxcy5lbmNvZGUodGhpcy5xdWVyeSkgOiB0aGlzLnF1ZXJ5O1xuICAgICAgZGVidWcoJ3NlbmRpbmcgY29ubmVjdCBwYWNrZXQgd2l0aCBxdWVyeSAlcycsIHF1ZXJ5KTtcbiAgICAgIHRoaXMucGFja2V0KHt0eXBlOiBwYXJzZXIuQ09OTkVDVCwgcXVlcnk6IHF1ZXJ5fSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGFja2V0KHt0eXBlOiBwYXJzZXIuQ09OTkVDVH0pO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBlbmdpbmUgYGNsb3NlYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVhc29uXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uY2xvc2UgPSBmdW5jdGlvbiAocmVhc29uKSB7XG4gIGRlYnVnKCdjbG9zZSAoJXMpJywgcmVhc29uKTtcbiAgdGhpcy5jb25uZWN0ZWQgPSBmYWxzZTtcbiAgdGhpcy5kaXNjb25uZWN0ZWQgPSB0cnVlO1xuICBkZWxldGUgdGhpcy5pZDtcbiAgdGhpcy5lbWl0KCdkaXNjb25uZWN0JywgcmVhc29uKTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHdpdGggc29ja2V0IHBhY2tldC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFja2V0XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9ucGFja2V0ID0gZnVuY3Rpb24gKHBhY2tldCkge1xuICBpZiAocGFja2V0Lm5zcCAhPT0gdGhpcy5uc3ApIHJldHVybjtcblxuICBzd2l0Y2ggKHBhY2tldC50eXBlKSB7XG4gICAgY2FzZSBwYXJzZXIuQ09OTkVDVDpcbiAgICAgIHRoaXMub25jb25uZWN0KCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgcGFyc2VyLkVWRU5UOlxuICAgICAgdGhpcy5vbmV2ZW50KHBhY2tldCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgcGFyc2VyLkJJTkFSWV9FVkVOVDpcbiAgICAgIHRoaXMub25ldmVudChwYWNrZXQpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIHBhcnNlci5BQ0s6XG4gICAgICB0aGlzLm9uYWNrKHBhY2tldCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgcGFyc2VyLkJJTkFSWV9BQ0s6XG4gICAgICB0aGlzLm9uYWNrKHBhY2tldCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgcGFyc2VyLkRJU0NPTk5FQ1Q6XG4gICAgICB0aGlzLm9uZGlzY29ubmVjdCgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIHBhcnNlci5FUlJPUjpcbiAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBwYWNrZXQuZGF0YSk7XG4gICAgICBicmVhaztcbiAgfVxufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBhIHNlcnZlciBldmVudC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFja2V0XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uZXZlbnQgPSBmdW5jdGlvbiAocGFja2V0KSB7XG4gIHZhciBhcmdzID0gcGFja2V0LmRhdGEgfHwgW107XG4gIGRlYnVnKCdlbWl0dGluZyBldmVudCAlaicsIGFyZ3MpO1xuXG4gIGlmIChudWxsICE9IHBhY2tldC5pZCkge1xuICAgIGRlYnVnKCdhdHRhY2hpbmcgYWNrIGNhbGxiYWNrIHRvIGV2ZW50Jyk7XG4gICAgYXJncy5wdXNoKHRoaXMuYWNrKHBhY2tldC5pZCkpO1xuICB9XG5cbiAgaWYgKHRoaXMuY29ubmVjdGVkKSB7XG4gICAgZW1pdC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnJlY2VpdmVCdWZmZXIucHVzaChhcmdzKTtcbiAgfVxufTtcblxuLyoqXG4gKiBQcm9kdWNlcyBhbiBhY2sgY2FsbGJhY2sgdG8gZW1pdCB3aXRoIGFuIGV2ZW50LlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNvY2tldC5wcm90b3R5cGUuYWNrID0gZnVuY3Rpb24gKGlkKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHNlbnQgPSBmYWxzZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAvLyBwcmV2ZW50IGRvdWJsZSBjYWxsYmFja3NcbiAgICBpZiAoc2VudCkgcmV0dXJuO1xuICAgIHNlbnQgPSB0cnVlO1xuICAgIHZhciBhcmdzID0gdG9BcnJheShhcmd1bWVudHMpO1xuICAgIGRlYnVnKCdzZW5kaW5nIGFjayAlaicsIGFyZ3MpO1xuXG4gICAgc2VsZi5wYWNrZXQoe1xuICAgICAgdHlwZTogaGFzQmluKGFyZ3MpID8gcGFyc2VyLkJJTkFSWV9BQ0sgOiBwYXJzZXIuQUNLLFxuICAgICAgaWQ6IGlkLFxuICAgICAgZGF0YTogYXJnc1xuICAgIH0pO1xuICB9O1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBhIHNlcnZlciBhY2tub3dsZWdlbWVudC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFja2V0XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uYWNrID0gZnVuY3Rpb24gKHBhY2tldCkge1xuICB2YXIgYWNrID0gdGhpcy5hY2tzW3BhY2tldC5pZF07XG4gIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgYWNrKSB7XG4gICAgZGVidWcoJ2NhbGxpbmcgYWNrICVzIHdpdGggJWonLCBwYWNrZXQuaWQsIHBhY2tldC5kYXRhKTtcbiAgICBhY2suYXBwbHkodGhpcywgcGFja2V0LmRhdGEpO1xuICAgIGRlbGV0ZSB0aGlzLmFja3NbcGFja2V0LmlkXTtcbiAgfSBlbHNlIHtcbiAgICBkZWJ1ZygnYmFkIGFjayAlcycsIHBhY2tldC5pZCk7XG4gIH1cbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gc2VydmVyIGNvbm5lY3QuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5vbmNvbm5lY3QgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuY29ubmVjdGVkID0gdHJ1ZTtcbiAgdGhpcy5kaXNjb25uZWN0ZWQgPSBmYWxzZTtcbiAgdGhpcy5lbWl0KCdjb25uZWN0Jyk7XG4gIHRoaXMuZW1pdEJ1ZmZlcmVkKCk7XG59O1xuXG4vKipcbiAqIEVtaXQgYnVmZmVyZWQgZXZlbnRzIChyZWNlaXZlZCBhbmQgZW1pdHRlZCkuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5lbWl0QnVmZmVyZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpO1xuICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5yZWNlaXZlQnVmZmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgZW1pdC5hcHBseSh0aGlzLCB0aGlzLnJlY2VpdmVCdWZmZXJbaV0pO1xuICB9XG4gIHRoaXMucmVjZWl2ZUJ1ZmZlciA9IFtdO1xuXG4gIGZvciAoaSA9IDA7IGkgPCB0aGlzLnNlbmRCdWZmZXIubGVuZ3RoOyBpKyspIHtcbiAgICB0aGlzLnBhY2tldCh0aGlzLnNlbmRCdWZmZXJbaV0pO1xuICB9XG4gIHRoaXMuc2VuZEJ1ZmZlciA9IFtdO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBzZXJ2ZXIgZGlzY29ubmVjdC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uZGlzY29ubmVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgZGVidWcoJ3NlcnZlciBkaXNjb25uZWN0ICglcyknLCB0aGlzLm5zcCk7XG4gIHRoaXMuZGVzdHJveSgpO1xuICB0aGlzLm9uY2xvc2UoJ2lvIHNlcnZlciBkaXNjb25uZWN0Jyk7XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIGZvcmNlZCBjbGllbnQvc2VydmVyIHNpZGUgZGlzY29ubmVjdGlvbnMsXG4gKiB0aGlzIG1ldGhvZCBlbnN1cmVzIHRoZSBtYW5hZ2VyIHN0b3BzIHRyYWNraW5nIHVzIGFuZFxuICogdGhhdCByZWNvbm5lY3Rpb25zIGRvbid0IGdldCB0cmlnZ2VyZWQgZm9yIHRoaXMuXG4gKlxuICogQGFwaSBwcml2YXRlLlxuICovXG5cblNvY2tldC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMuc3Vicykge1xuICAgIC8vIGNsZWFuIHN1YnNjcmlwdGlvbnMgdG8gYXZvaWQgcmVjb25uZWN0aW9uc1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5zdWJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnN1YnNbaV0uZGVzdHJveSgpO1xuICAgIH1cbiAgICB0aGlzLnN1YnMgPSBudWxsO1xuICB9XG5cbiAgdGhpcy5pby5kZXN0cm95KHRoaXMpO1xufTtcblxuLyoqXG4gKiBEaXNjb25uZWN0cyB0aGUgc29ja2V0IG1hbnVhbGx5LlxuICpcbiAqIEByZXR1cm4ge1NvY2tldH0gc2VsZlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLmNsb3NlID1cblNvY2tldC5wcm90b3R5cGUuZGlzY29ubmVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMuY29ubmVjdGVkKSB7XG4gICAgZGVidWcoJ3BlcmZvcm1pbmcgZGlzY29ubmVjdCAoJXMpJywgdGhpcy5uc3ApO1xuICAgIHRoaXMucGFja2V0KHsgdHlwZTogcGFyc2VyLkRJU0NPTk5FQ1QgfSk7XG4gIH1cblxuICAvLyByZW1vdmUgc29ja2V0IGZyb20gcG9vbFxuICB0aGlzLmRlc3Ryb3koKTtcblxuICBpZiAodGhpcy5jb25uZWN0ZWQpIHtcbiAgICAvLyBmaXJlIGV2ZW50c1xuICAgIHRoaXMub25jbG9zZSgnaW8gY2xpZW50IGRpc2Nvbm5lY3QnKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0cyB0aGUgY29tcHJlc3MgZmxhZy5cbiAqXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGlmIGB0cnVlYCwgY29tcHJlc3NlcyB0aGUgc2VuZGluZyBkYXRhXG4gKiBAcmV0dXJuIHtTb2NrZXR9IHNlbGZcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5jb21wcmVzcyA9IGZ1bmN0aW9uIChjb21wcmVzcykge1xuICB0aGlzLmZsYWdzLmNvbXByZXNzID0gY29tcHJlc3M7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXRzIHRoZSBiaW5hcnkgZmxhZ1xuICpcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gd2hldGhlciB0aGUgZW1pdHRlZCBkYXRhIGNvbnRhaW5zIGJpbmFyeVxuICogQHJldHVybiB7U29ja2V0fSBzZWxmXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNvY2tldC5wcm90b3R5cGUuYmluYXJ5ID0gZnVuY3Rpb24gKGJpbmFyeSkge1xuICB0aGlzLmZsYWdzLmJpbmFyeSA9IGJpbmFyeTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuIiwiXG52YXIgaW5kZXhPZiA9IFtdLmluZGV4T2Y7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXJyLCBvYmope1xuICBpZiAoaW5kZXhPZikgcmV0dXJuIGFyci5pbmRleE9mKG9iaik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKGFycltpXSA9PT0gb2JqKSByZXR1cm4gaTtcbiAgfVxuICByZXR1cm4gLTE7XG59OyIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFscGhhYmV0ID0gJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6LV8nLnNwbGl0KCcnKVxuICAsIGxlbmd0aCA9IDY0XG4gICwgbWFwID0ge31cbiAgLCBzZWVkID0gMFxuICAsIGkgPSAwXG4gICwgcHJldjtcblxuLyoqXG4gKiBSZXR1cm4gYSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBzcGVjaWZpZWQgbnVtYmVyLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBudW0gVGhlIG51bWJlciB0byBjb252ZXJ0LlxuICogQHJldHVybnMge1N0cmluZ30gVGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgbnVtYmVyLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gZW5jb2RlKG51bSkge1xuICB2YXIgZW5jb2RlZCA9ICcnO1xuXG4gIGRvIHtcbiAgICBlbmNvZGVkID0gYWxwaGFiZXRbbnVtICUgbGVuZ3RoXSArIGVuY29kZWQ7XG4gICAgbnVtID0gTWF0aC5mbG9vcihudW0gLyBsZW5ndGgpO1xuICB9IHdoaWxlIChudW0gPiAwKTtcblxuICByZXR1cm4gZW5jb2RlZDtcbn1cblxuLyoqXG4gKiBSZXR1cm4gdGhlIGludGVnZXIgdmFsdWUgc3BlY2lmaWVkIGJ5IHRoZSBnaXZlbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgc3RyaW5nIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgaW50ZWdlciB2YWx1ZSByZXByZXNlbnRlZCBieSB0aGUgc3RyaW5nLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gZGVjb2RlKHN0cikge1xuICB2YXIgZGVjb2RlZCA9IDA7XG5cbiAgZm9yIChpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGRlY29kZWQgPSBkZWNvZGVkICogbGVuZ3RoICsgbWFwW3N0ci5jaGFyQXQoaSldO1xuICB9XG5cbiAgcmV0dXJuIGRlY29kZWQ7XG59XG5cbi8qKlxuICogWWVhc3Q6IEEgdGlueSBncm93aW5nIGlkIGdlbmVyYXRvci5cbiAqXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBBIHVuaXF1ZSBpZC5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIHllYXN0KCkge1xuICB2YXIgbm93ID0gZW5jb2RlKCtuZXcgRGF0ZSgpKTtcblxuICBpZiAobm93ICE9PSBwcmV2KSByZXR1cm4gc2VlZCA9IDAsIHByZXYgPSBub3c7XG4gIHJldHVybiBub3cgKycuJysgZW5jb2RlKHNlZWQrKyk7XG59XG5cbi8vXG4vLyBNYXAgZWFjaCBjaGFyYWN0ZXIgdG8gaXRzIGluZGV4LlxuLy9cbmZvciAoOyBpIDwgbGVuZ3RoOyBpKyspIG1hcFthbHBoYWJldFtpXV0gPSBpO1xuXG4vL1xuLy8gRXhwb3NlIHRoZSBgeWVhc3RgLCBgZW5jb2RlYCBhbmQgYGRlY29kZWAgZnVuY3Rpb25zLlxuLy9cbnllYXN0LmVuY29kZSA9IGVuY29kZTtcbnllYXN0LmRlY29kZSA9IGRlY29kZTtcbm1vZHVsZS5leHBvcnRzID0geWVhc3Q7XG4iLCIvKiBnbG9iYWwgQmxvYiBGaWxlICovXG5cbi8qXG4gKiBNb2R1bGUgcmVxdWlyZW1lbnRzLlxuICovXG5cbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpO1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIHdpdGhOYXRpdmVCbG9iID0gdHlwZW9mIGdsb2JhbC5CbG9iID09PSAnZnVuY3Rpb24nIHx8IHRvU3RyaW5nLmNhbGwoZ2xvYmFsLkJsb2IpID09PSAnW29iamVjdCBCbG9iQ29uc3RydWN0b3JdJztcbnZhciB3aXRoTmF0aXZlRmlsZSA9IHR5cGVvZiBnbG9iYWwuRmlsZSA9PT0gJ2Z1bmN0aW9uJyB8fCB0b1N0cmluZy5jYWxsKGdsb2JhbC5GaWxlKSA9PT0gJ1tvYmplY3QgRmlsZUNvbnN0cnVjdG9yXSc7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNCaW5hcnk7XG5cbi8qKlxuICogQ2hlY2tzIGZvciBiaW5hcnkgZGF0YS5cbiAqXG4gKiBTdXBwb3J0cyBCdWZmZXIsIEFycmF5QnVmZmVyLCBCbG9iIGFuZCBGaWxlLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhbnl0aGluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBoYXNCaW5hcnkgKG9iaikge1xuICBpZiAoIW9iaiB8fCB0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChpc0FycmF5KG9iaikpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGlmIChoYXNCaW5hcnkob2JqW2ldKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCh0eXBlb2YgZ2xvYmFsLkJ1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBnbG9iYWwuQnVmZmVyLmlzQnVmZmVyICYmIGdsb2JhbC5CdWZmZXIuaXNCdWZmZXIob2JqKSkgfHxcbiAgICAgKHR5cGVvZiBnbG9iYWwuQXJyYXlCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgb2JqIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHx8XG4gICAgICh3aXRoTmF0aXZlQmxvYiAmJiBvYmogaW5zdGFuY2VvZiBCbG9iKSB8fFxuICAgICAod2l0aE5hdGl2ZUZpbGUgJiYgb2JqIGluc3RhbmNlb2YgRmlsZSlcbiAgICApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvaGFzLWJpbmFyeS9wdWxsLzRcbiAgaWYgKG9iai50b0pTT04gJiYgdHlwZW9mIG9iai50b0pTT04gPT09ICdmdW5jdGlvbicgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBoYXNCaW5hcnkob2JqLnRvSlNPTigpLCB0cnVlKTtcbiAgfVxuXG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSAmJiBoYXNCaW5hcnkob2JqW2tleV0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG4iLCIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4uL3RyYW5zcG9ydCcpO1xudmFyIHBhcnNlcXMgPSByZXF1aXJlKCdwYXJzZXFzJyk7XG52YXIgcGFyc2VyID0gcmVxdWlyZSgnZW5naW5lLmlvLXBhcnNlcicpO1xudmFyIGluaGVyaXQgPSByZXF1aXJlKCdjb21wb25lbnQtaW5oZXJpdCcpO1xudmFyIHllYXN0ID0gcmVxdWlyZSgneWVhc3QnKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2VuZ2luZS5pby1jbGllbnQ6cG9sbGluZycpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gUG9sbGluZztcblxuLyoqXG4gKiBJcyBYSFIyIHN1cHBvcnRlZD9cbiAqL1xuXG52YXIgaGFzWEhSMiA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciBYTUxIdHRwUmVxdWVzdCA9IHJlcXVpcmUoJ3htbGh0dHByZXF1ZXN0LXNzbCcpO1xuICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KHsgeGRvbWFpbjogZmFsc2UgfSk7XG4gIHJldHVybiBudWxsICE9IHhoci5yZXNwb25zZVR5cGU7XG59KSgpO1xuXG4vKipcbiAqIFBvbGxpbmcgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBQb2xsaW5nIChvcHRzKSB7XG4gIHZhciBmb3JjZUJhc2U2NCA9IChvcHRzICYmIG9wdHMuZm9yY2VCYXNlNjQpO1xuICBpZiAoIWhhc1hIUjIgfHwgZm9yY2VCYXNlNjQpIHtcbiAgICB0aGlzLnN1cHBvcnRzQmluYXJ5ID0gZmFsc2U7XG4gIH1cbiAgVHJhbnNwb3J0LmNhbGwodGhpcywgb3B0cyk7XG59XG5cbi8qKlxuICogSW5oZXJpdHMgZnJvbSBUcmFuc3BvcnQuXG4gKi9cblxuaW5oZXJpdChQb2xsaW5nLCBUcmFuc3BvcnQpO1xuXG4vKipcbiAqIFRyYW5zcG9ydCBuYW1lLlxuICovXG5cblBvbGxpbmcucHJvdG90eXBlLm5hbWUgPSAncG9sbGluZyc7XG5cbi8qKlxuICogT3BlbnMgdGhlIHNvY2tldCAodHJpZ2dlcnMgcG9sbGluZykuIFdlIHdyaXRlIGEgUElORyBtZXNzYWdlIHRvIGRldGVybWluZVxuICogd2hlbiB0aGUgdHJhbnNwb3J0IGlzIG9wZW4uXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUG9sbGluZy5wcm90b3R5cGUuZG9PcGVuID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnBvbGwoKTtcbn07XG5cbi8qKlxuICogUGF1c2VzIHBvbGxpbmcuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgdXBvbiBidWZmZXJzIGFyZSBmbHVzaGVkIGFuZCB0cmFuc3BvcnQgaXMgcGF1c2VkXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Qb2xsaW5nLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uIChvblBhdXNlKSB7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICB0aGlzLnJlYWR5U3RhdGUgPSAncGF1c2luZyc7XG5cbiAgZnVuY3Rpb24gcGF1c2UgKCkge1xuICAgIGRlYnVnKCdwYXVzZWQnKTtcbiAgICBzZWxmLnJlYWR5U3RhdGUgPSAncGF1c2VkJztcbiAgICBvblBhdXNlKCk7XG4gIH1cblxuICBpZiAodGhpcy5wb2xsaW5nIHx8ICF0aGlzLndyaXRhYmxlKSB7XG4gICAgdmFyIHRvdGFsID0gMDtcblxuICAgIGlmICh0aGlzLnBvbGxpbmcpIHtcbiAgICAgIGRlYnVnKCd3ZSBhcmUgY3VycmVudGx5IHBvbGxpbmcgLSB3YWl0aW5nIHRvIHBhdXNlJyk7XG4gICAgICB0b3RhbCsrO1xuICAgICAgdGhpcy5vbmNlKCdwb2xsQ29tcGxldGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRlYnVnKCdwcmUtcGF1c2UgcG9sbGluZyBjb21wbGV0ZScpO1xuICAgICAgICAtLXRvdGFsIHx8IHBhdXNlKCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMud3JpdGFibGUpIHtcbiAgICAgIGRlYnVnKCd3ZSBhcmUgY3VycmVudGx5IHdyaXRpbmcgLSB3YWl0aW5nIHRvIHBhdXNlJyk7XG4gICAgICB0b3RhbCsrO1xuICAgICAgdGhpcy5vbmNlKCdkcmFpbicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGVidWcoJ3ByZS1wYXVzZSB3cml0aW5nIGNvbXBsZXRlJyk7XG4gICAgICAgIC0tdG90YWwgfHwgcGF1c2UoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBwYXVzZSgpO1xuICB9XG59O1xuXG4vKipcbiAqIFN0YXJ0cyBwb2xsaW5nIGN5Y2xlLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUG9sbGluZy5wcm90b3R5cGUucG9sbCA9IGZ1bmN0aW9uICgpIHtcbiAgZGVidWcoJ3BvbGxpbmcnKTtcbiAgdGhpcy5wb2xsaW5nID0gdHJ1ZTtcbiAgdGhpcy5kb1BvbGwoKTtcbiAgdGhpcy5lbWl0KCdwb2xsJyk7XG59O1xuXG4vKipcbiAqIE92ZXJsb2FkcyBvbkRhdGEgdG8gZGV0ZWN0IHBheWxvYWRzLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblBvbGxpbmcucHJvdG90eXBlLm9uRGF0YSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgZGVidWcoJ3BvbGxpbmcgZ290IGRhdGEgJXMnLCBkYXRhKTtcbiAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKHBhY2tldCwgaW5kZXgsIHRvdGFsKSB7XG4gICAgLy8gaWYgaXRzIHRoZSBmaXJzdCBtZXNzYWdlIHdlIGNvbnNpZGVyIHRoZSB0cmFuc3BvcnQgb3BlblxuICAgIGlmICgnb3BlbmluZycgPT09IHNlbGYucmVhZHlTdGF0ZSkge1xuICAgICAgc2VsZi5vbk9wZW4oKTtcbiAgICB9XG5cbiAgICAvLyBpZiBpdHMgYSBjbG9zZSBwYWNrZXQsIHdlIGNsb3NlIHRoZSBvbmdvaW5nIHJlcXVlc3RzXG4gICAgaWYgKCdjbG9zZScgPT09IHBhY2tldC50eXBlKSB7XG4gICAgICBzZWxmLm9uQ2xvc2UoKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBvdGhlcndpc2UgYnlwYXNzIG9uRGF0YSBhbmQgaGFuZGxlIHRoZSBtZXNzYWdlXG4gICAgc2VsZi5vblBhY2tldChwYWNrZXQpO1xuICB9O1xuXG4gIC8vIGRlY29kZSBwYXlsb2FkXG4gIHBhcnNlci5kZWNvZGVQYXlsb2FkKGRhdGEsIHRoaXMuc29ja2V0LmJpbmFyeVR5cGUsIGNhbGxiYWNrKTtcblxuICAvLyBpZiBhbiBldmVudCBkaWQgbm90IHRyaWdnZXIgY2xvc2luZ1xuICBpZiAoJ2Nsb3NlZCcgIT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgIC8vIGlmIHdlIGdvdCBkYXRhIHdlJ3JlIG5vdCBwb2xsaW5nXG4gICAgdGhpcy5wb2xsaW5nID0gZmFsc2U7XG4gICAgdGhpcy5lbWl0KCdwb2xsQ29tcGxldGUnKTtcblxuICAgIGlmICgnb3BlbicgPT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgICAgdGhpcy5wb2xsKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlYnVnKCdpZ25vcmluZyBwb2xsIC0gdHJhbnNwb3J0IHN0YXRlIFwiJXNcIicsIHRoaXMucmVhZHlTdGF0ZSk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIEZvciBwb2xsaW5nLCBzZW5kIGEgY2xvc2UgcGFja2V0LlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblBvbGxpbmcucHJvdG90eXBlLmRvQ2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICBmdW5jdGlvbiBjbG9zZSAoKSB7XG4gICAgZGVidWcoJ3dyaXRpbmcgY2xvc2UgcGFja2V0Jyk7XG4gICAgc2VsZi53cml0ZShbeyB0eXBlOiAnY2xvc2UnIH1dKTtcbiAgfVxuXG4gIGlmICgnb3BlbicgPT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgIGRlYnVnKCd0cmFuc3BvcnQgb3BlbiAtIGNsb3NpbmcnKTtcbiAgICBjbG9zZSgpO1xuICB9IGVsc2Uge1xuICAgIC8vIGluIGNhc2Ugd2UncmUgdHJ5aW5nIHRvIGNsb3NlIHdoaWxlXG4gICAgLy8gaGFuZHNoYWtpbmcgaXMgaW4gcHJvZ3Jlc3MgKEdILTE2NClcbiAgICBkZWJ1ZygndHJhbnNwb3J0IG5vdCBvcGVuIC0gZGVmZXJyaW5nIGNsb3NlJyk7XG4gICAgdGhpcy5vbmNlKCdvcGVuJywgY2xvc2UpO1xuICB9XG59O1xuXG4vKipcbiAqIFdyaXRlcyBhIHBhY2tldHMgcGF5bG9hZC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBkYXRhIHBhY2tldHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRyYWluIGNhbGxiYWNrXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Qb2xsaW5nLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIChwYWNrZXRzKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy53cml0YWJsZSA9IGZhbHNlO1xuICB2YXIgY2FsbGJhY2tmbiA9IGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBzZWxmLmVtaXQoJ2RyYWluJyk7XG4gIH07XG5cbiAgcGFyc2VyLmVuY29kZVBheWxvYWQocGFja2V0cywgdGhpcy5zdXBwb3J0c0JpbmFyeSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBzZWxmLmRvV3JpdGUoZGF0YSwgY2FsbGJhY2tmbik7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBHZW5lcmF0ZXMgdXJpIGZvciBjb25uZWN0aW9uLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblBvbGxpbmcucHJvdG90eXBlLnVyaSA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHF1ZXJ5ID0gdGhpcy5xdWVyeSB8fCB7fTtcbiAgdmFyIHNjaGVtYSA9IHRoaXMuc2VjdXJlID8gJ2h0dHBzJyA6ICdodHRwJztcbiAgdmFyIHBvcnQgPSAnJztcblxuICAvLyBjYWNoZSBidXN0aW5nIGlzIGZvcmNlZFxuICBpZiAoZmFsc2UgIT09IHRoaXMudGltZXN0YW1wUmVxdWVzdHMpIHtcbiAgICBxdWVyeVt0aGlzLnRpbWVzdGFtcFBhcmFtXSA9IHllYXN0KCk7XG4gIH1cblxuICBpZiAoIXRoaXMuc3VwcG9ydHNCaW5hcnkgJiYgIXF1ZXJ5LnNpZCkge1xuICAgIHF1ZXJ5LmI2NCA9IDE7XG4gIH1cblxuICBxdWVyeSA9IHBhcnNlcXMuZW5jb2RlKHF1ZXJ5KTtcblxuICAvLyBhdm9pZCBwb3J0IGlmIGRlZmF1bHQgZm9yIHNjaGVtYVxuICBpZiAodGhpcy5wb3J0ICYmICgoJ2h0dHBzJyA9PT0gc2NoZW1hICYmIE51bWJlcih0aGlzLnBvcnQpICE9PSA0NDMpIHx8XG4gICAgICgnaHR0cCcgPT09IHNjaGVtYSAmJiBOdW1iZXIodGhpcy5wb3J0KSAhPT0gODApKSkge1xuICAgIHBvcnQgPSAnOicgKyB0aGlzLnBvcnQ7XG4gIH1cblxuICAvLyBwcmVwZW5kID8gdG8gcXVlcnlcbiAgaWYgKHF1ZXJ5Lmxlbmd0aCkge1xuICAgIHF1ZXJ5ID0gJz8nICsgcXVlcnk7XG4gIH1cblxuICB2YXIgaXB2NiA9IHRoaXMuaG9zdG5hbWUuaW5kZXhPZignOicpICE9PSAtMTtcbiAgcmV0dXJuIHNjaGVtYSArICc6Ly8nICsgKGlwdjYgPyAnWycgKyB0aGlzLmhvc3RuYW1lICsgJ10nIDogdGhpcy5ob3N0bmFtZSkgKyBwb3J0ICsgdGhpcy5wYXRoICsgcXVlcnk7XG59O1xuIiwiLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzXG4gKi9cblxudmFyIFhNTEh0dHBSZXF1ZXN0ID0gcmVxdWlyZSgneG1saHR0cHJlcXVlc3Qtc3NsJyk7XG52YXIgWEhSID0gcmVxdWlyZSgnLi9wb2xsaW5nLXhocicpO1xudmFyIEpTT05QID0gcmVxdWlyZSgnLi9wb2xsaW5nLWpzb25wJyk7XG52YXIgd2Vic29ja2V0ID0gcmVxdWlyZSgnLi93ZWJzb2NrZXQnKTtcblxuLyoqXG4gKiBFeHBvcnQgdHJhbnNwb3J0cy5cbiAqL1xuXG5leHBvcnRzLnBvbGxpbmcgPSBwb2xsaW5nO1xuZXhwb3J0cy53ZWJzb2NrZXQgPSB3ZWJzb2NrZXQ7XG5cbi8qKlxuICogUG9sbGluZyB0cmFuc3BvcnQgcG9seW1vcnBoaWMgY29uc3RydWN0b3IuXG4gKiBEZWNpZGVzIG9uIHhociB2cyBqc29ucCBiYXNlZCBvbiBmZWF0dXJlIGRldGVjdGlvbi5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwb2xsaW5nIChvcHRzKSB7XG4gIHZhciB4aHI7XG4gIHZhciB4ZCA9IGZhbHNlO1xuICB2YXIgeHMgPSBmYWxzZTtcbiAgdmFyIGpzb25wID0gZmFsc2UgIT09IG9wdHMuanNvbnA7XG5cbiAgaWYgKGdsb2JhbC5sb2NhdGlvbikge1xuICAgIHZhciBpc1NTTCA9ICdodHRwczonID09PSBsb2NhdGlvbi5wcm90b2NvbDtcbiAgICB2YXIgcG9ydCA9IGxvY2F0aW9uLnBvcnQ7XG5cbiAgICAvLyBzb21lIHVzZXIgYWdlbnRzIGhhdmUgZW1wdHkgYGxvY2F0aW9uLnBvcnRgXG4gICAgaWYgKCFwb3J0KSB7XG4gICAgICBwb3J0ID0gaXNTU0wgPyA0NDMgOiA4MDtcbiAgICB9XG5cbiAgICB4ZCA9IG9wdHMuaG9zdG5hbWUgIT09IGxvY2F0aW9uLmhvc3RuYW1lIHx8IHBvcnQgIT09IG9wdHMucG9ydDtcbiAgICB4cyA9IG9wdHMuc2VjdXJlICE9PSBpc1NTTDtcbiAgfVxuXG4gIG9wdHMueGRvbWFpbiA9IHhkO1xuICBvcHRzLnhzY2hlbWUgPSB4cztcbiAgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KG9wdHMpO1xuXG4gIGlmICgnb3BlbicgaW4geGhyICYmICFvcHRzLmZvcmNlSlNPTlApIHtcbiAgICByZXR1cm4gbmV3IFhIUihvcHRzKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIWpzb25wKSB0aHJvdyBuZXcgRXJyb3IoJ0pTT05QIGRpc2FibGVkJyk7XG4gICAgcmV0dXJuIG5ldyBKU09OUChvcHRzKTtcbiAgfVxufVxuIiwiXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIGVpbyA9IHJlcXVpcmUoJ2VuZ2luZS5pby1jbGllbnQnKTtcbnZhciBTb2NrZXQgPSByZXF1aXJlKCcuL3NvY2tldCcpO1xudmFyIEVtaXR0ZXIgPSByZXF1aXJlKCdjb21wb25lbnQtZW1pdHRlcicpO1xudmFyIHBhcnNlciA9IHJlcXVpcmUoJ3NvY2tldC5pby1wYXJzZXInKTtcbnZhciBvbiA9IHJlcXVpcmUoJy4vb24nKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnY29tcG9uZW50LWJpbmQnKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tldC5pby1jbGllbnQ6bWFuYWdlcicpO1xudmFyIGluZGV4T2YgPSByZXF1aXJlKCdpbmRleG9mJyk7XG52YXIgQmFja29mZiA9IHJlcXVpcmUoJ2JhY2tvMicpO1xuXG4vKipcbiAqIElFNisgaGFzT3duUHJvcGVydHlcbiAqL1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0c1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gTWFuYWdlcjtcblxuLyoqXG4gKiBgTWFuYWdlcmAgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGVuZ2luZSBpbnN0YW5jZSBvciBlbmdpbmUgdXJpL29wdHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIE1hbmFnZXIgKHVyaSwgb3B0cykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgTWFuYWdlcikpIHJldHVybiBuZXcgTWFuYWdlcih1cmksIG9wdHMpO1xuICBpZiAodXJpICYmICgnb2JqZWN0JyA9PT0gdHlwZW9mIHVyaSkpIHtcbiAgICBvcHRzID0gdXJpO1xuICAgIHVyaSA9IHVuZGVmaW5lZDtcbiAgfVxuICBvcHRzID0gb3B0cyB8fCB7fTtcblxuICBvcHRzLnBhdGggPSBvcHRzLnBhdGggfHwgJy9zb2NrZXQuaW8nO1xuICB0aGlzLm5zcHMgPSB7fTtcbiAgdGhpcy5zdWJzID0gW107XG4gIHRoaXMub3B0cyA9IG9wdHM7XG4gIHRoaXMucmVjb25uZWN0aW9uKG9wdHMucmVjb25uZWN0aW9uICE9PSBmYWxzZSk7XG4gIHRoaXMucmVjb25uZWN0aW9uQXR0ZW1wdHMob3B0cy5yZWNvbm5lY3Rpb25BdHRlbXB0cyB8fCBJbmZpbml0eSk7XG4gIHRoaXMucmVjb25uZWN0aW9uRGVsYXkob3B0cy5yZWNvbm5lY3Rpb25EZWxheSB8fCAxMDAwKTtcbiAgdGhpcy5yZWNvbm5lY3Rpb25EZWxheU1heChvcHRzLnJlY29ubmVjdGlvbkRlbGF5TWF4IHx8IDUwMDApO1xuICB0aGlzLnJhbmRvbWl6YXRpb25GYWN0b3Iob3B0cy5yYW5kb21pemF0aW9uRmFjdG9yIHx8IDAuNSk7XG4gIHRoaXMuYmFja29mZiA9IG5ldyBCYWNrb2ZmKHtcbiAgICBtaW46IHRoaXMucmVjb25uZWN0aW9uRGVsYXkoKSxcbiAgICBtYXg6IHRoaXMucmVjb25uZWN0aW9uRGVsYXlNYXgoKSxcbiAgICBqaXR0ZXI6IHRoaXMucmFuZG9taXphdGlvbkZhY3RvcigpXG4gIH0pO1xuICB0aGlzLnRpbWVvdXQobnVsbCA9PSBvcHRzLnRpbWVvdXQgPyAyMDAwMCA6IG9wdHMudGltZW91dCk7XG4gIHRoaXMucmVhZHlTdGF0ZSA9ICdjbG9zZWQnO1xuICB0aGlzLnVyaSA9IHVyaTtcbiAgdGhpcy5jb25uZWN0aW5nID0gW107XG4gIHRoaXMubGFzdFBpbmcgPSBudWxsO1xuICB0aGlzLmVuY29kaW5nID0gZmFsc2U7XG4gIHRoaXMucGFja2V0QnVmZmVyID0gW107XG4gIHZhciBfcGFyc2VyID0gb3B0cy5wYXJzZXIgfHwgcGFyc2VyO1xuICB0aGlzLmVuY29kZXIgPSBuZXcgX3BhcnNlci5FbmNvZGVyKCk7XG4gIHRoaXMuZGVjb2RlciA9IG5ldyBfcGFyc2VyLkRlY29kZXIoKTtcbiAgdGhpcy5hdXRvQ29ubmVjdCA9IG9wdHMuYXV0b0Nvbm5lY3QgIT09IGZhbHNlO1xuICBpZiAodGhpcy5hdXRvQ29ubmVjdCkgdGhpcy5vcGVuKCk7XG59XG5cbi8qKlxuICogUHJvcGFnYXRlIGdpdmVuIGV2ZW50IHRvIHNvY2tldHMgYW5kIGVtaXQgb24gYHRoaXNgXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUuZW1pdEFsbCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5lbWl0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIGZvciAodmFyIG5zcCBpbiB0aGlzLm5zcHMpIHtcbiAgICBpZiAoaGFzLmNhbGwodGhpcy5uc3BzLCBuc3ApKSB7XG4gICAgICB0aGlzLm5zcHNbbnNwXS5lbWl0LmFwcGx5KHRoaXMubnNwc1tuc3BdLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBVcGRhdGUgYHNvY2tldC5pZGAgb2YgYWxsIHNvY2tldHNcbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS51cGRhdGVTb2NrZXRJZHMgPSBmdW5jdGlvbiAoKSB7XG4gIGZvciAodmFyIG5zcCBpbiB0aGlzLm5zcHMpIHtcbiAgICBpZiAoaGFzLmNhbGwodGhpcy5uc3BzLCBuc3ApKSB7XG4gICAgICB0aGlzLm5zcHNbbnNwXS5pZCA9IHRoaXMuZ2VuZXJhdGVJZChuc3ApO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBnZW5lcmF0ZSBgc29ja2V0LmlkYCBmb3IgdGhlIGdpdmVuIGBuc3BgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5zcFxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUuZ2VuZXJhdGVJZCA9IGZ1bmN0aW9uIChuc3ApIHtcbiAgcmV0dXJuIChuc3AgPT09ICcvJyA/ICcnIDogKG5zcCArICcjJykpICsgdGhpcy5lbmdpbmUuaWQ7XG59O1xuXG4vKipcbiAqIE1peCBpbiBgRW1pdHRlcmAuXG4gKi9cblxuRW1pdHRlcihNYW5hZ2VyLnByb3RvdHlwZSk7XG5cbi8qKlxuICogU2V0cyB0aGUgYHJlY29ubmVjdGlvbmAgY29uZmlnLlxuICpcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdHJ1ZS9mYWxzZSBpZiBpdCBzaG91bGQgYXV0b21hdGljYWxseSByZWNvbm5lY3RcbiAqIEByZXR1cm4ge01hbmFnZXJ9IHNlbGYgb3IgdmFsdWVcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUucmVjb25uZWN0aW9uID0gZnVuY3Rpb24gKHYpIHtcbiAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGhpcy5fcmVjb25uZWN0aW9uO1xuICB0aGlzLl9yZWNvbm5lY3Rpb24gPSAhIXY7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXRzIHRoZSByZWNvbm5lY3Rpb24gYXR0ZW1wdHMgY29uZmlnLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtYXggcmVjb25uZWN0aW9uIGF0dGVtcHRzIGJlZm9yZSBnaXZpbmcgdXBcbiAqIEByZXR1cm4ge01hbmFnZXJ9IHNlbGYgb3IgdmFsdWVcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUucmVjb25uZWN0aW9uQXR0ZW1wdHMgPSBmdW5jdGlvbiAodikge1xuICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aGlzLl9yZWNvbm5lY3Rpb25BdHRlbXB0cztcbiAgdGhpcy5fcmVjb25uZWN0aW9uQXR0ZW1wdHMgPSB2O1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogU2V0cyB0aGUgZGVsYXkgYmV0d2VlbiByZWNvbm5lY3Rpb25zLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBkZWxheVxuICogQHJldHVybiB7TWFuYWdlcn0gc2VsZiBvciB2YWx1ZVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5yZWNvbm5lY3Rpb25EZWxheSA9IGZ1bmN0aW9uICh2KSB7XG4gIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRoaXMuX3JlY29ubmVjdGlvbkRlbGF5O1xuICB0aGlzLl9yZWNvbm5lY3Rpb25EZWxheSA9IHY7XG4gIHRoaXMuYmFja29mZiAmJiB0aGlzLmJhY2tvZmYuc2V0TWluKHYpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbk1hbmFnZXIucHJvdG90eXBlLnJhbmRvbWl6YXRpb25GYWN0b3IgPSBmdW5jdGlvbiAodikge1xuICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aGlzLl9yYW5kb21pemF0aW9uRmFjdG9yO1xuICB0aGlzLl9yYW5kb21pemF0aW9uRmFjdG9yID0gdjtcbiAgdGhpcy5iYWNrb2ZmICYmIHRoaXMuYmFja29mZi5zZXRKaXR0ZXIodik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXRzIHRoZSBtYXhpbXVtIGRlbGF5IGJldHdlZW4gcmVjb25uZWN0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gZGVsYXlcbiAqIEByZXR1cm4ge01hbmFnZXJ9IHNlbGYgb3IgdmFsdWVcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUucmVjb25uZWN0aW9uRGVsYXlNYXggPSBmdW5jdGlvbiAodikge1xuICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aGlzLl9yZWNvbm5lY3Rpb25EZWxheU1heDtcbiAgdGhpcy5fcmVjb25uZWN0aW9uRGVsYXlNYXggPSB2O1xuICB0aGlzLmJhY2tvZmYgJiYgdGhpcy5iYWNrb2ZmLnNldE1heCh2KTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNldHMgdGhlIGNvbm5lY3Rpb24gdGltZW91dC4gYGZhbHNlYCB0byBkaXNhYmxlXG4gKlxuICogQHJldHVybiB7TWFuYWdlcn0gc2VsZiBvciB2YWx1ZVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS50aW1lb3V0ID0gZnVuY3Rpb24gKHYpIHtcbiAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGhpcy5fdGltZW91dDtcbiAgdGhpcy5fdGltZW91dCA9IHY7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTdGFydHMgdHJ5aW5nIHRvIHJlY29ubmVjdCBpZiByZWNvbm5lY3Rpb24gaXMgZW5hYmxlZCBhbmQgd2UgaGF2ZSBub3RcbiAqIHN0YXJ0ZWQgcmVjb25uZWN0aW5nIHlldFxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbk1hbmFnZXIucHJvdG90eXBlLm1heWJlUmVjb25uZWN0T25PcGVuID0gZnVuY3Rpb24gKCkge1xuICAvLyBPbmx5IHRyeSB0byByZWNvbm5lY3QgaWYgaXQncyB0aGUgZmlyc3QgdGltZSB3ZSdyZSBjb25uZWN0aW5nXG4gIGlmICghdGhpcy5yZWNvbm5lY3RpbmcgJiYgdGhpcy5fcmVjb25uZWN0aW9uICYmIHRoaXMuYmFja29mZi5hdHRlbXB0cyA9PT0gMCkge1xuICAgIC8vIGtlZXBzIHJlY29ubmVjdGlvbiBmcm9tIGZpcmluZyB0d2ljZSBmb3IgdGhlIHNhbWUgcmVjb25uZWN0aW9uIGxvb3BcbiAgICB0aGlzLnJlY29ubmVjdCgpO1xuICB9XG59O1xuXG4vKipcbiAqIFNldHMgdGhlIGN1cnJlbnQgdHJhbnNwb3J0IGBzb2NrZXRgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG9wdGlvbmFsLCBjYWxsYmFja1xuICogQHJldHVybiB7TWFuYWdlcn0gc2VsZlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5vcGVuID1cbk1hbmFnZXIucHJvdG90eXBlLmNvbm5lY3QgPSBmdW5jdGlvbiAoZm4sIG9wdHMpIHtcbiAgZGVidWcoJ3JlYWR5U3RhdGUgJXMnLCB0aGlzLnJlYWR5U3RhdGUpO1xuICBpZiAofnRoaXMucmVhZHlTdGF0ZS5pbmRleE9mKCdvcGVuJykpIHJldHVybiB0aGlzO1xuXG4gIGRlYnVnKCdvcGVuaW5nICVzJywgdGhpcy51cmkpO1xuICB0aGlzLmVuZ2luZSA9IGVpbyh0aGlzLnVyaSwgdGhpcy5vcHRzKTtcbiAgdmFyIHNvY2tldCA9IHRoaXMuZW5naW5lO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHRoaXMucmVhZHlTdGF0ZSA9ICdvcGVuaW5nJztcbiAgdGhpcy5za2lwUmVjb25uZWN0ID0gZmFsc2U7XG5cbiAgLy8gZW1pdCBgb3BlbmBcbiAgdmFyIG9wZW5TdWIgPSBvbihzb2NrZXQsICdvcGVuJywgZnVuY3Rpb24gKCkge1xuICAgIHNlbGYub25vcGVuKCk7XG4gICAgZm4gJiYgZm4oKTtcbiAgfSk7XG5cbiAgLy8gZW1pdCBgY29ubmVjdF9lcnJvcmBcbiAgdmFyIGVycm9yU3ViID0gb24oc29ja2V0LCAnZXJyb3InLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRlYnVnKCdjb25uZWN0X2Vycm9yJyk7XG4gICAgc2VsZi5jbGVhbnVwKCk7XG4gICAgc2VsZi5yZWFkeVN0YXRlID0gJ2Nsb3NlZCc7XG4gICAgc2VsZi5lbWl0QWxsKCdjb25uZWN0X2Vycm9yJywgZGF0YSk7XG4gICAgaWYgKGZuKSB7XG4gICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdDb25uZWN0aW9uIGVycm9yJyk7XG4gICAgICBlcnIuZGF0YSA9IGRhdGE7XG4gICAgICBmbihlcnIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBPbmx5IGRvIHRoaXMgaWYgdGhlcmUgaXMgbm8gZm4gdG8gaGFuZGxlIHRoZSBlcnJvclxuICAgICAgc2VsZi5tYXliZVJlY29ubmVjdE9uT3BlbigpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gZW1pdCBgY29ubmVjdF90aW1lb3V0YFxuICBpZiAoZmFsc2UgIT09IHRoaXMuX3RpbWVvdXQpIHtcbiAgICB2YXIgdGltZW91dCA9IHRoaXMuX3RpbWVvdXQ7XG4gICAgZGVidWcoJ2Nvbm5lY3QgYXR0ZW1wdCB3aWxsIHRpbWVvdXQgYWZ0ZXIgJWQnLCB0aW1lb3V0KTtcblxuICAgIC8vIHNldCB0aW1lclxuICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgZGVidWcoJ2Nvbm5lY3QgYXR0ZW1wdCB0aW1lZCBvdXQgYWZ0ZXIgJWQnLCB0aW1lb3V0KTtcbiAgICAgIG9wZW5TdWIuZGVzdHJveSgpO1xuICAgICAgc29ja2V0LmNsb3NlKCk7XG4gICAgICBzb2NrZXQuZW1pdCgnZXJyb3InLCAndGltZW91dCcpO1xuICAgICAgc2VsZi5lbWl0QWxsKCdjb25uZWN0X3RpbWVvdXQnLCB0aW1lb3V0KTtcbiAgICB9LCB0aW1lb3V0KTtcblxuICAgIHRoaXMuc3Vicy5wdXNoKHtcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHRoaXMuc3Vicy5wdXNoKG9wZW5TdWIpO1xuICB0aGlzLnN1YnMucHVzaChlcnJvclN1Yik7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIHRyYW5zcG9ydCBvcGVuLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbk1hbmFnZXIucHJvdG90eXBlLm9ub3BlbiA9IGZ1bmN0aW9uICgpIHtcbiAgZGVidWcoJ29wZW4nKTtcblxuICAvLyBjbGVhciBvbGQgc3Vic1xuICB0aGlzLmNsZWFudXAoKTtcblxuICAvLyBtYXJrIGFzIG9wZW5cbiAgdGhpcy5yZWFkeVN0YXRlID0gJ29wZW4nO1xuICB0aGlzLmVtaXQoJ29wZW4nKTtcblxuICAvLyBhZGQgbmV3IHN1YnNcbiAgdmFyIHNvY2tldCA9IHRoaXMuZW5naW5lO1xuICB0aGlzLnN1YnMucHVzaChvbihzb2NrZXQsICdkYXRhJywgYmluZCh0aGlzLCAnb25kYXRhJykpKTtcbiAgdGhpcy5zdWJzLnB1c2gob24oc29ja2V0LCAncGluZycsIGJpbmQodGhpcywgJ29ucGluZycpKSk7XG4gIHRoaXMuc3Vicy5wdXNoKG9uKHNvY2tldCwgJ3BvbmcnLCBiaW5kKHRoaXMsICdvbnBvbmcnKSkpO1xuICB0aGlzLnN1YnMucHVzaChvbihzb2NrZXQsICdlcnJvcicsIGJpbmQodGhpcywgJ29uZXJyb3InKSkpO1xuICB0aGlzLnN1YnMucHVzaChvbihzb2NrZXQsICdjbG9zZScsIGJpbmQodGhpcywgJ29uY2xvc2UnKSkpO1xuICB0aGlzLnN1YnMucHVzaChvbih0aGlzLmRlY29kZXIsICdkZWNvZGVkJywgYmluZCh0aGlzLCAnb25kZWNvZGVkJykpKTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gYSBwaW5nLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbk1hbmFnZXIucHJvdG90eXBlLm9ucGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5sYXN0UGluZyA9IG5ldyBEYXRlKCk7XG4gIHRoaXMuZW1pdEFsbCgncGluZycpO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBhIHBhY2tldC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5vbnBvbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuZW1pdEFsbCgncG9uZycsIG5ldyBEYXRlKCkgLSB0aGlzLmxhc3RQaW5nKTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHdpdGggZGF0YS5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5vbmRhdGEgPSBmdW5jdGlvbiAoZGF0YSkge1xuICB0aGlzLmRlY29kZXIuYWRkKGRhdGEpO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgd2hlbiBwYXJzZXIgZnVsbHkgZGVjb2RlcyBhIHBhY2tldC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5vbmRlY29kZWQgPSBmdW5jdGlvbiAocGFja2V0KSB7XG4gIHRoaXMuZW1pdCgncGFja2V0JywgcGFja2V0KTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gc29ja2V0IGVycm9yLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbk1hbmFnZXIucHJvdG90eXBlLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIGRlYnVnKCdlcnJvcicsIGVycik7XG4gIHRoaXMuZW1pdEFsbCgnZXJyb3InLCBlcnIpO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHNvY2tldCBmb3IgdGhlIGdpdmVuIGBuc3BgLlxuICpcbiAqIEByZXR1cm4ge1NvY2tldH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUuc29ja2V0ID0gZnVuY3Rpb24gKG5zcCwgb3B0cykge1xuICB2YXIgc29ja2V0ID0gdGhpcy5uc3BzW25zcF07XG4gIGlmICghc29ja2V0KSB7XG4gICAgc29ja2V0ID0gbmV3IFNvY2tldCh0aGlzLCBuc3AsIG9wdHMpO1xuICAgIHRoaXMubnNwc1tuc3BdID0gc29ja2V0O1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBzb2NrZXQub24oJ2Nvbm5lY3RpbmcnLCBvbkNvbm5lY3RpbmcpO1xuICAgIHNvY2tldC5vbignY29ubmVjdCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNvY2tldC5pZCA9IHNlbGYuZ2VuZXJhdGVJZChuc3ApO1xuICAgIH0pO1xuXG4gICAgaWYgKHRoaXMuYXV0b0Nvbm5lY3QpIHtcbiAgICAgIC8vIG1hbnVhbGx5IGNhbGwgaGVyZSBzaW5jZSBjb25uZWN0aW5nIGV2ZW50IGlzIGZpcmVkIGJlZm9yZSBsaXN0ZW5pbmdcbiAgICAgIG9uQ29ubmVjdGluZygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uQ29ubmVjdGluZyAoKSB7XG4gICAgaWYgKCF+aW5kZXhPZihzZWxmLmNvbm5lY3RpbmcsIHNvY2tldCkpIHtcbiAgICAgIHNlbGYuY29ubmVjdGluZy5wdXNoKHNvY2tldCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHNvY2tldDtcbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gYSBzb2NrZXQgY2xvc2UuXG4gKlxuICogQHBhcmFtIHtTb2NrZXR9IHNvY2tldFxuICovXG5cbk1hbmFnZXIucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoc29ja2V0KSB7XG4gIHZhciBpbmRleCA9IGluZGV4T2YodGhpcy5jb25uZWN0aW5nLCBzb2NrZXQpO1xuICBpZiAofmluZGV4KSB0aGlzLmNvbm5lY3Rpbmcuc3BsaWNlKGluZGV4LCAxKTtcbiAgaWYgKHRoaXMuY29ubmVjdGluZy5sZW5ndGgpIHJldHVybjtcblxuICB0aGlzLmNsb3NlKCk7XG59O1xuXG4vKipcbiAqIFdyaXRlcyBhIHBhY2tldC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFja2V0XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5wYWNrZXQgPSBmdW5jdGlvbiAocGFja2V0KSB7XG4gIGRlYnVnKCd3cml0aW5nIHBhY2tldCAlaicsIHBhY2tldCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKHBhY2tldC5xdWVyeSAmJiBwYWNrZXQudHlwZSA9PT0gMCkgcGFja2V0Lm5zcCArPSAnPycgKyBwYWNrZXQucXVlcnk7XG5cbiAgaWYgKCFzZWxmLmVuY29kaW5nKSB7XG4gICAgLy8gZW5jb2RlLCB0aGVuIHdyaXRlIHRvIGVuZ2luZSB3aXRoIHJlc3VsdFxuICAgIHNlbGYuZW5jb2RpbmcgPSB0cnVlO1xuICAgIHRoaXMuZW5jb2Rlci5lbmNvZGUocGFja2V0LCBmdW5jdGlvbiAoZW5jb2RlZFBhY2tldHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZW5jb2RlZFBhY2tldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgc2VsZi5lbmdpbmUud3JpdGUoZW5jb2RlZFBhY2tldHNbaV0sIHBhY2tldC5vcHRpb25zKTtcbiAgICAgIH1cbiAgICAgIHNlbGYuZW5jb2RpbmcgPSBmYWxzZTtcbiAgICAgIHNlbGYucHJvY2Vzc1BhY2tldFF1ZXVlKCk7XG4gICAgfSk7XG4gIH0gZWxzZSB7IC8vIGFkZCBwYWNrZXQgdG8gdGhlIHF1ZXVlXG4gICAgc2VsZi5wYWNrZXRCdWZmZXIucHVzaChwYWNrZXQpO1xuICB9XG59O1xuXG4vKipcbiAqIElmIHBhY2tldCBidWZmZXIgaXMgbm9uLWVtcHR5LCBiZWdpbnMgZW5jb2RpbmcgdGhlXG4gKiBuZXh0IHBhY2tldCBpbiBsaW5lLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbk1hbmFnZXIucHJvdG90eXBlLnByb2Nlc3NQYWNrZXRRdWV1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMucGFja2V0QnVmZmVyLmxlbmd0aCA+IDAgJiYgIXRoaXMuZW5jb2RpbmcpIHtcbiAgICB2YXIgcGFjayA9IHRoaXMucGFja2V0QnVmZmVyLnNoaWZ0KCk7XG4gICAgdGhpcy5wYWNrZXQocGFjayk7XG4gIH1cbn07XG5cbi8qKlxuICogQ2xlYW4gdXAgdHJhbnNwb3J0IHN1YnNjcmlwdGlvbnMgYW5kIHBhY2tldCBidWZmZXIuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUuY2xlYW51cCA9IGZ1bmN0aW9uICgpIHtcbiAgZGVidWcoJ2NsZWFudXAnKTtcblxuICB2YXIgc3Vic0xlbmd0aCA9IHRoaXMuc3Vicy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3Vic0xlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHN1YiA9IHRoaXMuc3Vicy5zaGlmdCgpO1xuICAgIHN1Yi5kZXN0cm95KCk7XG4gIH1cblxuICB0aGlzLnBhY2tldEJ1ZmZlciA9IFtdO1xuICB0aGlzLmVuY29kaW5nID0gZmFsc2U7XG4gIHRoaXMubGFzdFBpbmcgPSBudWxsO1xuXG4gIHRoaXMuZGVjb2Rlci5kZXN0cm95KCk7XG59O1xuXG4vKipcbiAqIENsb3NlIHRoZSBjdXJyZW50IHNvY2tldC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5jbG9zZSA9XG5NYW5hZ2VyLnByb3RvdHlwZS5kaXNjb25uZWN0ID0gZnVuY3Rpb24gKCkge1xuICBkZWJ1ZygnZGlzY29ubmVjdCcpO1xuICB0aGlzLnNraXBSZWNvbm5lY3QgPSB0cnVlO1xuICB0aGlzLnJlY29ubmVjdGluZyA9IGZhbHNlO1xuICBpZiAoJ29wZW5pbmcnID09PSB0aGlzLnJlYWR5U3RhdGUpIHtcbiAgICAvLyBgb25jbG9zZWAgd2lsbCBub3QgZmlyZSBiZWNhdXNlXG4gICAgLy8gYW4gb3BlbiBldmVudCBuZXZlciBoYXBwZW5lZFxuICAgIHRoaXMuY2xlYW51cCgpO1xuICB9XG4gIHRoaXMuYmFja29mZi5yZXNldCgpO1xuICB0aGlzLnJlYWR5U3RhdGUgPSAnY2xvc2VkJztcbiAgaWYgKHRoaXMuZW5naW5lKSB0aGlzLmVuZ2luZS5jbG9zZSgpO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBlbmdpbmUgY2xvc2UuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUub25jbG9zZSA9IGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgZGVidWcoJ29uY2xvc2UnKTtcblxuICB0aGlzLmNsZWFudXAoKTtcbiAgdGhpcy5iYWNrb2ZmLnJlc2V0KCk7XG4gIHRoaXMucmVhZHlTdGF0ZSA9ICdjbG9zZWQnO1xuICB0aGlzLmVtaXQoJ2Nsb3NlJywgcmVhc29uKTtcblxuICBpZiAodGhpcy5fcmVjb25uZWN0aW9uICYmICF0aGlzLnNraXBSZWNvbm5lY3QpIHtcbiAgICB0aGlzLnJlY29ubmVjdCgpO1xuICB9XG59O1xuXG4vKipcbiAqIEF0dGVtcHQgYSByZWNvbm5lY3Rpb24uXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuTWFuYWdlci5wcm90b3R5cGUucmVjb25uZWN0ID0gZnVuY3Rpb24gKCkge1xuICBpZiAodGhpcy5yZWNvbm5lY3RpbmcgfHwgdGhpcy5za2lwUmVjb25uZWN0KSByZXR1cm4gdGhpcztcblxuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgaWYgKHRoaXMuYmFja29mZi5hdHRlbXB0cyA+PSB0aGlzLl9yZWNvbm5lY3Rpb25BdHRlbXB0cykge1xuICAgIGRlYnVnKCdyZWNvbm5lY3QgZmFpbGVkJyk7XG4gICAgdGhpcy5iYWNrb2ZmLnJlc2V0KCk7XG4gICAgdGhpcy5lbWl0QWxsKCdyZWNvbm5lY3RfZmFpbGVkJyk7XG4gICAgdGhpcy5yZWNvbm5lY3RpbmcgPSBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZGVsYXkgPSB0aGlzLmJhY2tvZmYuZHVyYXRpb24oKTtcbiAgICBkZWJ1Zygnd2lsbCB3YWl0ICVkbXMgYmVmb3JlIHJlY29ubmVjdCBhdHRlbXB0JywgZGVsYXkpO1xuXG4gICAgdGhpcy5yZWNvbm5lY3RpbmcgPSB0cnVlO1xuICAgIHZhciB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHNlbGYuc2tpcFJlY29ubmVjdCkgcmV0dXJuO1xuXG4gICAgICBkZWJ1ZygnYXR0ZW1wdGluZyByZWNvbm5lY3QnKTtcbiAgICAgIHNlbGYuZW1pdEFsbCgncmVjb25uZWN0X2F0dGVtcHQnLCBzZWxmLmJhY2tvZmYuYXR0ZW1wdHMpO1xuICAgICAgc2VsZi5lbWl0QWxsKCdyZWNvbm5lY3RpbmcnLCBzZWxmLmJhY2tvZmYuYXR0ZW1wdHMpO1xuXG4gICAgICAvLyBjaGVjayBhZ2FpbiBmb3IgdGhlIGNhc2Ugc29ja2V0IGNsb3NlZCBpbiBhYm92ZSBldmVudHNcbiAgICAgIGlmIChzZWxmLnNraXBSZWNvbm5lY3QpIHJldHVybjtcblxuICAgICAgc2VsZi5vcGVuKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGRlYnVnKCdyZWNvbm5lY3QgYXR0ZW1wdCBlcnJvcicpO1xuICAgICAgICAgIHNlbGYucmVjb25uZWN0aW5nID0gZmFsc2U7XG4gICAgICAgICAgc2VsZi5yZWNvbm5lY3QoKTtcbiAgICAgICAgICBzZWxmLmVtaXRBbGwoJ3JlY29ubmVjdF9lcnJvcicsIGVyci5kYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWJ1ZygncmVjb25uZWN0IHN1Y2Nlc3MnKTtcbiAgICAgICAgICBzZWxmLm9ucmVjb25uZWN0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sIGRlbGF5KTtcblxuICAgIHRoaXMuc3Vicy5wdXNoKHtcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBzdWNjZXNzZnVsIHJlY29ubmVjdC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5NYW5hZ2VyLnByb3RvdHlwZS5vbnJlY29ubmVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGF0dGVtcHQgPSB0aGlzLmJhY2tvZmYuYXR0ZW1wdHM7XG4gIHRoaXMucmVjb25uZWN0aW5nID0gZmFsc2U7XG4gIHRoaXMuYmFja29mZi5yZXNldCgpO1xuICB0aGlzLnVwZGF0ZVNvY2tldElkcygpO1xuICB0aGlzLmVtaXRBbGwoJ3JlY29ubmVjdCcsIGF0dGVtcHQpO1xufTtcbiIsIlxubW9kdWxlLmV4cG9ydHMgPSBpc0J1ZjtcblxudmFyIHdpdGhOYXRpdmVCdWZmZXIgPSB0eXBlb2YgZ2xvYmFsLkJ1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZ2xvYmFsLkJ1ZmZlci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJztcbnZhciB3aXRoTmF0aXZlQXJyYXlCdWZmZXIgPSB0eXBlb2YgZ2xvYmFsLkFycmF5QnVmZmVyID09PSAnZnVuY3Rpb24nO1xuXG52YXIgaXNWaWV3ID0gKGZ1bmN0aW9uICgpIHtcbiAgaWYgKHdpdGhOYXRpdmVBcnJheUJ1ZmZlciAmJiB0eXBlb2YgZ2xvYmFsLkFycmF5QnVmZmVyLmlzVmlldyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBnbG9iYWwuQXJyYXlCdWZmZXIuaXNWaWV3O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmouYnVmZmVyIGluc3RhbmNlb2YgZ2xvYmFsLkFycmF5QnVmZmVyOyB9O1xuICB9XG59KSgpO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBvYmogaXMgYSBidWZmZXIgb3IgYW4gYXJyYXlidWZmZXIuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gaXNCdWYob2JqKSB7XG4gIHJldHVybiAod2l0aE5hdGl2ZUJ1ZmZlciAmJiBnbG9iYWwuQnVmZmVyLmlzQnVmZmVyKG9iaikpIHx8XG4gICAgICAgICAgKHdpdGhOYXRpdmVBcnJheUJ1ZmZlciAmJiAob2JqIGluc3RhbmNlb2YgZ2xvYmFsLkFycmF5QnVmZmVyIHx8IGlzVmlldyhvYmopKSk7XG59XG4iLCIvKipcclxuICogUGFyc2VzIGFuIFVSSVxyXG4gKlxyXG4gKiBAYXV0aG9yIFN0ZXZlbiBMZXZpdGhhbiA8c3RldmVubGV2aXRoYW4uY29tPiAoTUlUIGxpY2Vuc2UpXHJcbiAqIEBhcGkgcHJpdmF0ZVxyXG4gKi9cclxuXHJcbnZhciByZSA9IC9eKD86KD8hW146QF0rOlteOkBcXC9dKkApKGh0dHB8aHR0cHN8d3N8d3NzKTpcXC9cXC8pPygoPzooKFteOkBdKikoPzo6KFteOkBdKikpPyk/QCk/KCg/OlthLWYwLTldezAsNH06KXsyLDd9W2EtZjAtOV17MCw0fXxbXjpcXC8/I10qKSg/OjooXFxkKikpPykoKChcXC8oPzpbXj8jXSg/IVtePyNcXC9dKlxcLltePyNcXC8uXSsoPzpbPyNdfCQpKSkqXFwvPyk/KFtePyNcXC9dKikpKD86XFw/KFteI10qKSk/KD86IyguKikpPykvO1xyXG5cclxudmFyIHBhcnRzID0gW1xyXG4gICAgJ3NvdXJjZScsICdwcm90b2NvbCcsICdhdXRob3JpdHknLCAndXNlckluZm8nLCAndXNlcicsICdwYXNzd29yZCcsICdob3N0JywgJ3BvcnQnLCAncmVsYXRpdmUnLCAncGF0aCcsICdkaXJlY3RvcnknLCAnZmlsZScsICdxdWVyeScsICdhbmNob3InXHJcbl07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNldXJpKHN0cikge1xyXG4gICAgdmFyIHNyYyA9IHN0cixcclxuICAgICAgICBiID0gc3RyLmluZGV4T2YoJ1snKSxcclxuICAgICAgICBlID0gc3RyLmluZGV4T2YoJ10nKTtcclxuXHJcbiAgICBpZiAoYiAhPSAtMSAmJiBlICE9IC0xKSB7XHJcbiAgICAgICAgc3RyID0gc3RyLnN1YnN0cmluZygwLCBiKSArIHN0ci5zdWJzdHJpbmcoYiwgZSkucmVwbGFjZSgvOi9nLCAnOycpICsgc3RyLnN1YnN0cmluZyhlLCBzdHIubGVuZ3RoKTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgbSA9IHJlLmV4ZWMoc3RyIHx8ICcnKSxcclxuICAgICAgICB1cmkgPSB7fSxcclxuICAgICAgICBpID0gMTQ7XHJcblxyXG4gICAgd2hpbGUgKGktLSkge1xyXG4gICAgICAgIHVyaVtwYXJ0c1tpXV0gPSBtW2ldIHx8ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChiICE9IC0xICYmIGUgIT0gLTEpIHtcclxuICAgICAgICB1cmkuc291cmNlID0gc3JjO1xyXG4gICAgICAgIHVyaS5ob3N0ID0gdXJpLmhvc3Quc3Vic3RyaW5nKDEsIHVyaS5ob3N0Lmxlbmd0aCAtIDEpLnJlcGxhY2UoLzsvZywgJzonKTtcclxuICAgICAgICB1cmkuYXV0aG9yaXR5ID0gdXJpLmF1dGhvcml0eS5yZXBsYWNlKCdbJywgJycpLnJlcGxhY2UoJ10nLCAnJykucmVwbGFjZSgvOy9nLCAnOicpO1xyXG4gICAgICAgIHVyaS5pcHY2dXJpID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdXJpO1xyXG59O1xyXG4iLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBoeXBoZW5hdGVQcm9wZXJ0eTtcblxudmFyIF9oeXBoZW5hdGVTdHlsZU5hbWUgPSByZXF1aXJlKCdoeXBoZW5hdGUtc3R5bGUtbmFtZScpO1xuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGFkZE5ld1ZhbHVlc09ubHk7XG5mdW5jdGlvbiBhZGRJZk5ldyhsaXN0LCB2YWx1ZSkge1xuICBpZiAobGlzdC5pbmRleE9mKHZhbHVlKSA9PT0gLTEpIHtcbiAgICBsaXN0LnB1c2godmFsdWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFkZE5ld1ZhbHVlc09ubHkobGlzdCwgdmFsdWVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlcykpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdmFsdWVzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBhZGRJZk5ldyhsaXN0LCB2YWx1ZXNbaV0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBhZGRJZk5ldyhsaXN0LCB2YWx1ZXMpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcHJlZml4VmFsdWU7XG5mdW5jdGlvbiBwcmVmaXhWYWx1ZShwbHVnaW5zLCBwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSkge1xuICBmb3IgKHZhciBpID0gMCwgbGVuID0gcGx1Z2lucy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciBwcm9jZXNzZWRWYWx1ZSA9IHBsdWdpbnNbaV0ocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgbWV0YURhdGEpO1xuXG4gICAgLy8gd2UgY2FuIHN0b3AgcHJvY2Vzc2luZyBpZiBhIHZhbHVlIGlzIHJldHVybmVkXG4gICAgLy8gYXMgYWxsIHBsdWdpbiBjcml0ZXJpYSBhcmUgdW5pcXVlXG4gICAgaWYgKHByb2Nlc3NlZFZhbHVlKSB7XG4gICAgICByZXR1cm4gcHJvY2Vzc2VkVmFsdWU7XG4gICAgfVxuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY29udmVydENvbG9yVG9TdHJpbmcgPSBjb252ZXJ0Q29sb3JUb1N0cmluZztcbmV4cG9ydHMuY29udmVydEhleFRvUkdCID0gY29udmVydEhleFRvUkdCO1xuZXhwb3J0cy5kZWNvbXBvc2VDb2xvciA9IGRlY29tcG9zZUNvbG9yO1xuZXhwb3J0cy5nZXRDb250cmFzdFJhdGlvID0gZ2V0Q29udHJhc3RSYXRpbztcbmV4cG9ydHMuZ2V0THVtaW5hbmNlID0gZ2V0THVtaW5hbmNlO1xuZXhwb3J0cy5lbXBoYXNpemUgPSBlbXBoYXNpemU7XG5leHBvcnRzLmZhZGUgPSBmYWRlO1xuZXhwb3J0cy5kYXJrZW4gPSBkYXJrZW47XG5leHBvcnRzLmxpZ2h0ZW4gPSBsaWdodGVuO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIHdob3NlIHZhbHVlIGlzIGxpbWl0ZWQgdG8gdGhlIGdpdmVuIHJhbmdlLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYmUgY2xhbXBlZFxuICogQHBhcmFtIHtudW1iZXJ9IG1pbiBUaGUgbG93ZXIgYm91bmRhcnkgb2YgdGhlIG91dHB1dCByYW5nZVxuICogQHBhcmFtIHtudW1iZXJ9IG1heCBUaGUgdXBwZXIgYm91bmRhcnkgb2YgdGhlIG91dHB1dCByYW5nZVxuICogQHJldHVybnMge251bWJlcn0gQSBudW1iZXIgaW4gdGhlIHJhbmdlIFttaW4sIG1heF1cbiAqL1xuZnVuY3Rpb24gY2xhbXAodmFsdWUsIG1pbiwgbWF4KSB7XG4gIGlmICh2YWx1ZSA8IG1pbikge1xuICAgIHJldHVybiBtaW47XG4gIH1cbiAgaWYgKHZhbHVlID4gbWF4KSB7XG4gICAgcmV0dXJuIG1heDtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBvYmplY3Qgd2l0aCB0eXBlIGFuZCB2YWx1ZXMgdG8gYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGNvbG9yIC0gRGVjb21wb3NlZCBjb2xvclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yLnR5cGUgLSBPbmUgb2YsICdyZ2InLCAncmdiYScsICdoc2wnLCAnaHNsYSdcbiAqIEBwYXJhbSB7YXJyYXl9IGNvbG9yLnZhbHVlcyAtIFtuLG4sbl0gb3IgW24sbixuLG5dXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gY29udmVydENvbG9yVG9TdHJpbmcoY29sb3IpIHtcbiAgdmFyIHR5cGUgPSBjb2xvci50eXBlLFxuICAgICAgdmFsdWVzID0gY29sb3IudmFsdWVzO1xuXG5cbiAgaWYgKHR5cGUuaW5kZXhPZigncmdiJykgPiAtMSkge1xuICAgIC8vIE9ubHkgY29udmVydCB0aGUgZmlyc3QgMyB2YWx1ZXMgdG8gaW50IChpLmUuIG5vdCBhbHBoYSlcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkrKykge1xuICAgICAgdmFsdWVzW2ldID0gcGFyc2VJbnQodmFsdWVzW2ldKTtcbiAgICB9XG4gIH1cblxuICB2YXIgY29sb3JTdHJpbmcgPSB2b2lkIDA7XG5cbiAgaWYgKHR5cGUuaW5kZXhPZignaHNsJykgPiAtMSkge1xuICAgIGNvbG9yU3RyaW5nID0gY29sb3IudHlwZSArICcoJyArIHZhbHVlc1swXSArICcsICcgKyB2YWx1ZXNbMV0gKyAnJSwgJyArIHZhbHVlc1syXSArICclJztcbiAgfSBlbHNlIHtcbiAgICBjb2xvclN0cmluZyA9IGNvbG9yLnR5cGUgKyAnKCcgKyB2YWx1ZXNbMF0gKyAnLCAnICsgdmFsdWVzWzFdICsgJywgJyArIHZhbHVlc1syXTtcbiAgfVxuXG4gIGlmICh2YWx1ZXMubGVuZ3RoID09PSA0KSB7XG4gICAgY29sb3JTdHJpbmcgKz0gJywgJyArIGNvbG9yLnZhbHVlc1szXSArICcpJztcbiAgfSBlbHNlIHtcbiAgICBjb2xvclN0cmluZyArPSAnKSc7XG4gIH1cblxuICByZXR1cm4gY29sb3JTdHJpbmc7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBjb2xvciBmcm9tIENTUyBoZXggZm9ybWF0IHRvIENTUyByZ2IgZm9ybWF0LlxuICpcbiAqICBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBIZXggY29sb3IsIGkuZS4gI25ubiBvciAjbm5ubm5uXG4gKiAgQHJldHVybnMge3N0cmluZ30gQSBDU1MgcmdiIGNvbG9yIHN0cmluZ1xuICovXG5mdW5jdGlvbiBjb252ZXJ0SGV4VG9SR0IoY29sb3IpIHtcbiAgaWYgKGNvbG9yLmxlbmd0aCA9PT0gNCkge1xuICAgIHZhciBleHRlbmRlZENvbG9yID0gJyMnO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgY29sb3IubGVuZ3RoOyBpKyspIHtcbiAgICAgIGV4dGVuZGVkQ29sb3IgKz0gY29sb3IuY2hhckF0KGkpICsgY29sb3IuY2hhckF0KGkpO1xuICAgIH1cbiAgICBjb2xvciA9IGV4dGVuZGVkQ29sb3I7XG4gIH1cblxuICB2YXIgdmFsdWVzID0ge1xuICAgIHI6IHBhcnNlSW50KGNvbG9yLnN1YnN0cigxLCAyKSwgMTYpLFxuICAgIGc6IHBhcnNlSW50KGNvbG9yLnN1YnN0cigzLCAyKSwgMTYpLFxuICAgIGI6IHBhcnNlSW50KGNvbG9yLnN1YnN0cig1LCAyKSwgMTYpXG4gIH07XG5cbiAgcmV0dXJuICdyZ2IoJyArIHZhbHVlcy5yICsgJywgJyArIHZhbHVlcy5nICsgJywgJyArIHZhbHVlcy5iICsgJyknO1xufVxuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIHR5cGUgYW5kIHZhbHVlcyBvZiBhIGNvbG9yLlxuICpcbiAqIE5vdGU6IERvZXMgbm90IHN1cHBvcnQgcmdiICUgdmFsdWVzIGFuZCBjb2xvciBuYW1lcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcmV0dXJucyB7e3R5cGU6IHN0cmluZywgdmFsdWVzOiBudW1iZXJbXX19IEEgTVVJIGNvbG9yIG9iamVjdFxuICovXG5mdW5jdGlvbiBkZWNvbXBvc2VDb2xvcihjb2xvcikge1xuICBpZiAoY29sb3IuY2hhckF0KDApID09PSAnIycpIHtcbiAgICByZXR1cm4gZGVjb21wb3NlQ29sb3IoY29udmVydEhleFRvUkdCKGNvbG9yKSk7XG4gIH1cblxuICB2YXIgbWFya2VyID0gY29sb3IuaW5kZXhPZignKCcpO1xuXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/ICgwLCBfd2FybmluZzIuZGVmYXVsdCkobWFya2VyICE9PSAtMSwgJ01hdGVyaWFsLVVJOiBUaGUgJyArIGNvbG9yICsgJyBjb2xvciB3YXMgbm90IHBhcnNlZCBjb3JyZWN0bHksXFxuICBiZWNhdXNlIGl0IGhhcyBhbiB1bnN1cHBvcnRlZCBmb3JtYXQgKGNvbG9yIG5hbWUgb3IgUkdCICUpLiBUaGlzIG1heSBjYXVzZSBpc3N1ZXMgaW4gY29tcG9uZW50IHJlbmRlcmluZy4nKSA6IHZvaWQgMDtcblxuICB2YXIgdHlwZSA9IGNvbG9yLnN1YnN0cmluZygwLCBtYXJrZXIpO1xuICB2YXIgdmFsdWVzID0gY29sb3Iuc3Vic3RyaW5nKG1hcmtlciArIDEsIGNvbG9yLmxlbmd0aCAtIDEpLnNwbGl0KCcsJyk7XG4gIHZhbHVlcyA9IHZhbHVlcy5tYXAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpO1xuICB9KTtcblxuICByZXR1cm4geyB0eXBlOiB0eXBlLCB2YWx1ZXM6IHZhbHVlcyB9O1xufVxuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGNvbnRyYXN0IHJhdGlvIGJldHdlZW4gdHdvIGNvbG9ycy5cbiAqXG4gKiBGb3JtdWxhOiBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDA4L1JFQy1XQ0FHMjAtMjAwODEyMTEvI2NvbnRyYXN0LXJhdGlvZGVmXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGZvcmVncm91bmQgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFja2dyb3VuZCAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEByZXR1cm5zIHtudW1iZXJ9IEEgY29udHJhc3QgcmF0aW8gdmFsdWUgaW4gdGhlIHJhbmdlIDAgLSAyMSB3aXRoIDIgZGlnaXQgcHJlY2lzaW9uLlxuICovXG5mdW5jdGlvbiBnZXRDb250cmFzdFJhdGlvKGZvcmVncm91bmQsIGJhY2tncm91bmQpIHtcbiAgdmFyIGx1bUEgPSBnZXRMdW1pbmFuY2UoZm9yZWdyb3VuZCk7XG4gIHZhciBsdW1CID0gZ2V0THVtaW5hbmNlKGJhY2tncm91bmQpO1xuICB2YXIgY29udHJhc3RSYXRpbyA9IChNYXRoLm1heChsdW1BLCBsdW1CKSArIDAuMDUpIC8gKE1hdGgubWluKGx1bUEsIGx1bUIpICsgMC4wNSk7XG5cbiAgcmV0dXJuIE51bWJlcihjb250cmFzdFJhdGlvLnRvRml4ZWQoMikpOyAvLyBUcnVuY2F0ZSBhdCB0d28gZGlnaXRzXG59XG5cbi8qKlxuICogVGhlIHJlbGF0aXZlIGJyaWdodG5lc3Mgb2YgYW55IHBvaW50IGluIGEgY29sb3Igc3BhY2UsXG4gKiBub3JtYWxpemVkIHRvIDAgZm9yIGRhcmtlc3QgYmxhY2sgYW5kIDEgZm9yIGxpZ2h0ZXN0IHdoaXRlLlxuICpcbiAqIEZvcm11bGE6IGh0dHBzOi8vd3d3LnczLm9yZy9XQUkvR0wvd2lraS9SZWxhdGl2ZV9sdW1pbmFuY2VcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgcmVsYXRpdmUgYnJpZ2h0bmVzcyBvZiB0aGUgY29sb3IgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKi9cbmZ1bmN0aW9uIGdldEx1bWluYW5jZShjb2xvcikge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcblxuICBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdyZ2InKSA+IC0xKSB7XG4gICAgdmFyIHJnYiA9IGNvbG9yLnZhbHVlcy5tYXAoZnVuY3Rpb24gKHZhbCkge1xuICAgICAgdmFsIC89IDI1NTsgLy8gbm9ybWFsaXplZFxuICAgICAgcmV0dXJuIHZhbCA8PSAwLjAzOTI4ID8gdmFsIC8gMTIuOTIgOiBNYXRoLnBvdygodmFsICsgMC4wNTUpIC8gMS4wNTUsIDIuNCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIE51bWJlcigoMC4yMTI2ICogcmdiWzBdICsgMC43MTUyICogcmdiWzFdICsgMC4wNzIyICogcmdiWzJdKS50b0ZpeGVkKDMpKTsgLy8gVHJ1bmNhdGUgYXQgMyBkaWdpdHNcbiAgfSBlbHNlIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ2hzbCcpID4gLTEpIHtcbiAgICByZXR1cm4gY29sb3IudmFsdWVzWzJdIC8gMTAwO1xuICB9XG59XG5cbi8qKlxuICogRGFya2VuIG9yIGxpZ2h0ZW4gYSBjb2xvdXIsIGRlcGVuZGluZyBvbiBpdHMgbHVtaW5hbmNlLlxuICogTGlnaHQgY29sb3JzIGFyZSBkYXJrZW5lZCwgZGFyayBjb2xvcnMgYXJlIGxpZ2h0ZW5lZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1MgY29sb3IsIGkuZS4gb25lIG9mOiAjbm5uLCAjbm5ubm5uLCByZ2IoKSwgcmdiYSgpLCBoc2woKSwgaHNsYSgpXG4gKiBAcGFyYW0ge251bWJlcn0gY29lZmZpY2llbnQ9MC4xNSAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5mdW5jdGlvbiBlbXBoYXNpemUoY29sb3IpIHtcbiAgdmFyIGNvZWZmaWNpZW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwLjE1O1xuXG4gIHJldHVybiBnZXRMdW1pbmFuY2UoY29sb3IpID4gMC41ID8gZGFya2VuKGNvbG9yLCBjb2VmZmljaWVudCkgOiBsaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCk7XG59XG5cbi8qKlxuICogU2V0IHRoZSBhYnNvbHV0ZSB0cmFuc3BhcmVuY3kgb2YgYSBjb2xvci5cbiAqIEFueSBleGlzdGluZyBhbHBoYSB2YWx1ZXMgYXJlIG92ZXJ3cml0dGVuLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtIHZhbHVlIHRvIHNldCB0aGUgYWxwaGEgY2hhbm5lbCB0byBpbiB0aGUgcmFuZ2UgMCAtMVxuICogQHJldHVybnMge3N0cmluZ30gQSBDU1MgY29sb3Igc3RyaW5nLiBIZXggaW5wdXQgdmFsdWVzIGFyZSByZXR1cm5lZCBhcyByZ2JcbiAqL1xuZnVuY3Rpb24gZmFkZShjb2xvciwgdmFsdWUpIHtcbiAgY29sb3IgPSBkZWNvbXBvc2VDb2xvcihjb2xvcik7XG4gIHZhbHVlID0gY2xhbXAodmFsdWUsIDAsIDEpO1xuXG4gIGlmIChjb2xvci50eXBlID09PSAncmdiJyB8fCBjb2xvci50eXBlID09PSAnaHNsJykge1xuICAgIGNvbG9yLnR5cGUgKz0gJ2EnO1xuICB9XG4gIGNvbG9yLnZhbHVlc1szXSA9IHZhbHVlO1xuXG4gIHJldHVybiBjb252ZXJ0Q29sb3JUb1N0cmluZyhjb2xvcik7XG59XG5cbi8qKlxuICogRGFya2VucyBhIGNvbG9yLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2VmZmljaWVudCAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5mdW5jdGlvbiBkYXJrZW4oY29sb3IsIGNvZWZmaWNpZW50KSB7XG4gIGNvbG9yID0gZGVjb21wb3NlQ29sb3IoY29sb3IpO1xuICBjb2VmZmljaWVudCA9IGNsYW1wKGNvZWZmaWNpZW50LCAwLCAxKTtcblxuICBpZiAoY29sb3IudHlwZS5pbmRleE9mKCdoc2wnKSA+IC0xKSB7XG4gICAgY29sb3IudmFsdWVzWzJdICo9IDEgLSBjb2VmZmljaWVudDtcbiAgfSBlbHNlIGlmIChjb2xvci50eXBlLmluZGV4T2YoJ3JnYicpID4gLTEpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkrKykge1xuICAgICAgY29sb3IudmFsdWVzW2ldICo9IDEgLSBjb2VmZmljaWVudDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRDb2xvclRvU3RyaW5nKGNvbG9yKTtcbn1cblxuLyoqXG4gKiBMaWdodGVucyBhIGNvbG9yLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBjb2xvciwgaS5lLiBvbmUgb2Y6ICNubm4sICNubm5ubm4sIHJnYigpLCByZ2JhKCksIGhzbCgpLCBoc2xhKClcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2VmZmljaWVudCAtIG11bHRpcGxpZXIgaW4gdGhlIHJhbmdlIDAgLSAxXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIENTUyBjb2xvciBzdHJpbmcuIEhleCBpbnB1dCB2YWx1ZXMgYXJlIHJldHVybmVkIGFzIHJnYlxuICovXG5mdW5jdGlvbiBsaWdodGVuKGNvbG9yLCBjb2VmZmljaWVudCkge1xuICBjb2xvciA9IGRlY29tcG9zZUNvbG9yKGNvbG9yKTtcbiAgY29lZmZpY2llbnQgPSBjbGFtcChjb2VmZmljaWVudCwgMCwgMSk7XG5cbiAgaWYgKGNvbG9yLnR5cGUuaW5kZXhPZignaHNsJykgPiAtMSkge1xuICAgIGNvbG9yLnZhbHVlc1syXSArPSAoMTAwIC0gY29sb3IudmFsdWVzWzJdKSAqIGNvZWZmaWNpZW50O1xuICB9IGVsc2UgaWYgKGNvbG9yLnR5cGUuaW5kZXhPZigncmdiJykgPiAtMSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgICBjb2xvci52YWx1ZXNbaV0gKz0gKDI1NSAtIGNvbG9yLnZhbHVlc1tpXSkgKiBjb2VmZmljaWVudDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29udmVydENvbG9yVG9TdHJpbmcoY29sb3IpO1xufSIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XHJcblx0aWYgKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufTtcclxuIiwidmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciBnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUEQgOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCkge1xuICBPID0gdG9JT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZ09QRChPLCBQKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmIChoYXMoTywgUCkpIHJldHVybiBjcmVhdGVEZXNjKCFwSUUuZi5jYWxsKE8sIFApLCBPW1BdKTtcbn07XG4iLCIvLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIiwiZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbiIsIi8vIDcuMS4xNSBUb0xlbmd0aFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA+IDAgPyBtaW4odG9JbnRlZ2VyKGl0KSwgMHgxZmZmZmZmZmZmZmZmZikgOiAwOyAvLyBwb3coMiwgNTMpIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59O1xuIiwidmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSU9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgaWYgKGtleSAhPSBJRV9QUk9UTykgaGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciAkaXRlckNyZWF0ZSA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQlVHR1kgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSk7IC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbnZhciBGRl9JVEVSQVRPUiA9ICdAQGl0ZXJhdG9yJztcbnZhciBLRVlTID0gJ2tleXMnO1xudmFyIFZBTFVFUyA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgIGlmICghQlVHR1kgJiYga2luZCBpbiBwcm90bykgcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgPSBOQU1FICsgJyBJdGVyYXRvcic7XG4gIHZhciBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVM7XG4gIHZhciBWQUxVRVNfQlVHID0gZmFsc2U7XG4gIHZhciBwcm90byA9IEJhc2UucHJvdG90eXBlO1xuICB2YXIgJG5hdGl2ZSA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXTtcbiAgdmFyICRkZWZhdWx0ID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCk7XG4gIHZhciAkZW50cmllcyA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWQ7XG4gIHZhciAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZTtcbiAgdmFyIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYgKCRhbnlOYXRpdmUpIHtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSgpKSk7XG4gICAgaWYgKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEl0ZXJhdG9yUHJvdG90eXBlLm5leHQpIHtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZiAoIUxJQlJBUlkgJiYgdHlwZW9mIEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSAhPSAnZnVuY3Rpb24nKSBoaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUykge1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZiAoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpIHtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddID0gcmV0dXJuVGhpcztcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIGZvciAoa2V5IGluIG1ldGhvZHMpIHtcbiAgICAgIGlmICghKGtleSBpbiBwcm90bykpIHJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2l0ZXJhdG9yID0gcmVxdWlyZShcIi4uL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yXCIpO1xuXG52YXIgX2l0ZXJhdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2l0ZXJhdG9yKTtcblxudmFyIF9zeW1ib2wgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9zeW1ib2xcIik7XG5cbnZhciBfc3ltYm9sMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N5bWJvbCk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgX2l0ZXJhdG9yMi5kZWZhdWx0ID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gX3N5bWJvbDIuZGVmYXVsdCAmJiBvYmogIT09IF9zeW1ib2wyLmRlZmF1bHQucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgX3R5cGVvZihfaXRlcmF0b3IyLmRlZmF1bHQpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKG9iaik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufTsiLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCIvLyBtb3N0IE9iamVjdCBtZXRob2RzIGJ5IEVTNiBzaG91bGQgYWNjZXB0IHByaW1pdGl2ZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGV4ZWMpIHtcbiAgdmFyIGZuID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldO1xuICB2YXIgZXhwID0ge307XG4gIGV4cFtLRVldID0gZXhlYyhmbik7XG4gICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkgeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTtcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPYmplY3QgPSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50byArIFwiIFwiICsgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9tYWluLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbWFpbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9tYWluLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJcbi8qKlxuICogRXhwb3NlIGBCYWNrb2ZmYC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJhY2tvZmY7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBiYWNrb2ZmIHRpbWVyIHdpdGggYG9wdHNgLlxuICpcbiAqIC0gYG1pbmAgaW5pdGlhbCB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyBbMTAwXVxuICogLSBgbWF4YCBtYXggdGltZW91dCBbMTAwMDBdXG4gKiAtIGBqaXR0ZXJgIFswXVxuICogLSBgZmFjdG9yYCBbMl1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBCYWNrb2ZmKG9wdHMpIHtcbiAgb3B0cyA9IG9wdHMgfHwge307XG4gIHRoaXMubXMgPSBvcHRzLm1pbiB8fCAxMDA7XG4gIHRoaXMubWF4ID0gb3B0cy5tYXggfHwgMTAwMDA7XG4gIHRoaXMuZmFjdG9yID0gb3B0cy5mYWN0b3IgfHwgMjtcbiAgdGhpcy5qaXR0ZXIgPSBvcHRzLmppdHRlciA+IDAgJiYgb3B0cy5qaXR0ZXIgPD0gMSA/IG9wdHMuaml0dGVyIDogMDtcbiAgdGhpcy5hdHRlbXB0cyA9IDA7XG59XG5cbi8qKlxuICogUmV0dXJuIHRoZSBiYWNrb2ZmIGR1cmF0aW9uLlxuICpcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuQmFja29mZi5wcm90b3R5cGUuZHVyYXRpb24gPSBmdW5jdGlvbigpe1xuICB2YXIgbXMgPSB0aGlzLm1zICogTWF0aC5wb3codGhpcy5mYWN0b3IsIHRoaXMuYXR0ZW1wdHMrKyk7XG4gIGlmICh0aGlzLmppdHRlcikge1xuICAgIHZhciByYW5kID0gIE1hdGgucmFuZG9tKCk7XG4gICAgdmFyIGRldmlhdGlvbiA9IE1hdGguZmxvb3IocmFuZCAqIHRoaXMuaml0dGVyICogbXMpO1xuICAgIG1zID0gKE1hdGguZmxvb3IocmFuZCAqIDEwKSAmIDEpID09IDAgID8gbXMgLSBkZXZpYXRpb24gOiBtcyArIGRldmlhdGlvbjtcbiAgfVxuICByZXR1cm4gTWF0aC5taW4obXMsIHRoaXMubWF4KSB8IDA7XG59O1xuXG4vKipcbiAqIFJlc2V0IHRoZSBudW1iZXIgb2YgYXR0ZW1wdHMuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5CYWNrb2ZmLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKCl7XG4gIHRoaXMuYXR0ZW1wdHMgPSAwO1xufTtcblxuLyoqXG4gKiBTZXQgdGhlIG1pbmltdW0gZHVyYXRpb25cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkJhY2tvZmYucHJvdG90eXBlLnNldE1pbiA9IGZ1bmN0aW9uKG1pbil7XG4gIHRoaXMubXMgPSBtaW47XG59O1xuXG4vKipcbiAqIFNldCB0aGUgbWF4aW11bSBkdXJhdGlvblxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuQmFja29mZi5wcm90b3R5cGUuc2V0TWF4ID0gZnVuY3Rpb24obWF4KXtcbiAgdGhpcy5tYXggPSBtYXg7XG59O1xuXG4vKipcbiAqIFNldCB0aGUgaml0dGVyXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5CYWNrb2ZmLnByb3RvdHlwZS5zZXRKaXR0ZXIgPSBmdW5jdGlvbihqaXR0ZXIpe1xuICB0aGlzLmppdHRlciA9IGppdHRlcjtcbn07XG5cbiIsIm1vZHVsZS5leHBvcnRzID0gdG9BcnJheVxuXG5mdW5jdGlvbiB0b0FycmF5KGxpc3QsIGluZGV4KSB7XG4gICAgdmFyIGFycmF5ID0gW11cblxuICAgIGluZGV4ID0gaW5kZXggfHwgMFxuXG4gICAgZm9yICh2YXIgaSA9IGluZGV4IHx8IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGFycmF5W2kgLSBpbmRleF0gPSBsaXN0W2ldXG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5XG59XG4iLCIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4uL3RyYW5zcG9ydCcpO1xudmFyIHBhcnNlciA9IHJlcXVpcmUoJ2VuZ2luZS5pby1wYXJzZXInKTtcbnZhciBwYXJzZXFzID0gcmVxdWlyZSgncGFyc2VxcycpO1xudmFyIGluaGVyaXQgPSByZXF1aXJlKCdjb21wb25lbnQtaW5oZXJpdCcpO1xudmFyIHllYXN0ID0gcmVxdWlyZSgneWVhc3QnKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2VuZ2luZS5pby1jbGllbnQ6d2Vic29ja2V0Jyk7XG52YXIgQnJvd3NlcldlYlNvY2tldCA9IGdsb2JhbC5XZWJTb2NrZXQgfHwgZ2xvYmFsLk1veldlYlNvY2tldDtcbnZhciBOb2RlV2ViU29ja2V0O1xuaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gIHRyeSB7XG4gICAgTm9kZVdlYlNvY2tldCA9IHJlcXVpcmUoJ3dzJyk7XG4gIH0gY2F0Y2ggKGUpIHsgfVxufVxuXG4vKipcbiAqIEdldCBlaXRoZXIgdGhlIGBXZWJTb2NrZXRgIG9yIGBNb3pXZWJTb2NrZXRgIGdsb2JhbHNcbiAqIGluIHRoZSBicm93c2VyIG9yIHRyeSB0byByZXNvbHZlIFdlYlNvY2tldC1jb21wYXRpYmxlXG4gKiBpbnRlcmZhY2UgZXhwb3NlZCBieSBgd3NgIGZvciBOb2RlLWxpa2UgZW52aXJvbm1lbnQuXG4gKi9cblxudmFyIFdlYlNvY2tldCA9IEJyb3dzZXJXZWJTb2NrZXQ7XG5pZiAoIVdlYlNvY2tldCAmJiB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICBXZWJTb2NrZXQgPSBOb2RlV2ViU29ja2V0O1xufVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gV1M7XG5cbi8qKlxuICogV2ViU29ja2V0IHRyYW5zcG9ydCBjb25zdHJ1Y3Rvci5cbiAqXG4gKiBAYXBpIHtPYmplY3R9IGNvbm5lY3Rpb24gb3B0aW9uc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBXUyAob3B0cykge1xuICB2YXIgZm9yY2VCYXNlNjQgPSAob3B0cyAmJiBvcHRzLmZvcmNlQmFzZTY0KTtcbiAgaWYgKGZvcmNlQmFzZTY0KSB7XG4gICAgdGhpcy5zdXBwb3J0c0JpbmFyeSA9IGZhbHNlO1xuICB9XG4gIHRoaXMucGVyTWVzc2FnZURlZmxhdGUgPSBvcHRzLnBlck1lc3NhZ2VEZWZsYXRlO1xuICB0aGlzLnVzaW5nQnJvd3NlcldlYlNvY2tldCA9IEJyb3dzZXJXZWJTb2NrZXQgJiYgIW9wdHMuZm9yY2VOb2RlO1xuICB0aGlzLnByb3RvY29scyA9IG9wdHMucHJvdG9jb2xzO1xuICBpZiAoIXRoaXMudXNpbmdCcm93c2VyV2ViU29ja2V0KSB7XG4gICAgV2ViU29ja2V0ID0gTm9kZVdlYlNvY2tldDtcbiAgfVxuICBUcmFuc3BvcnQuY2FsbCh0aGlzLCBvcHRzKTtcbn1cblxuLyoqXG4gKiBJbmhlcml0cyBmcm9tIFRyYW5zcG9ydC5cbiAqL1xuXG5pbmhlcml0KFdTLCBUcmFuc3BvcnQpO1xuXG4vKipcbiAqIFRyYW5zcG9ydCBuYW1lLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuV1MucHJvdG90eXBlLm5hbWUgPSAnd2Vic29ja2V0JztcblxuLypcbiAqIFdlYlNvY2tldHMgc3VwcG9ydCBiaW5hcnlcbiAqL1xuXG5XUy5wcm90b3R5cGUuc3VwcG9ydHNCaW5hcnkgPSB0cnVlO1xuXG4vKipcbiAqIE9wZW5zIHNvY2tldC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5XUy5wcm90b3R5cGUuZG9PcGVuID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIXRoaXMuY2hlY2soKSkge1xuICAgIC8vIGxldCBwcm9iZSB0aW1lb3V0XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHVyaSA9IHRoaXMudXJpKCk7XG4gIHZhciBwcm90b2NvbHMgPSB0aGlzLnByb3RvY29scztcbiAgdmFyIG9wdHMgPSB7XG4gICAgYWdlbnQ6IHRoaXMuYWdlbnQsXG4gICAgcGVyTWVzc2FnZURlZmxhdGU6IHRoaXMucGVyTWVzc2FnZURlZmxhdGVcbiAgfTtcblxuICAvLyBTU0wgb3B0aW9ucyBmb3IgTm9kZS5qcyBjbGllbnRcbiAgb3B0cy5wZnggPSB0aGlzLnBmeDtcbiAgb3B0cy5rZXkgPSB0aGlzLmtleTtcbiAgb3B0cy5wYXNzcGhyYXNlID0gdGhpcy5wYXNzcGhyYXNlO1xuICBvcHRzLmNlcnQgPSB0aGlzLmNlcnQ7XG4gIG9wdHMuY2EgPSB0aGlzLmNhO1xuICBvcHRzLmNpcGhlcnMgPSB0aGlzLmNpcGhlcnM7XG4gIG9wdHMucmVqZWN0VW5hdXRob3JpemVkID0gdGhpcy5yZWplY3RVbmF1dGhvcml6ZWQ7XG4gIGlmICh0aGlzLmV4dHJhSGVhZGVycykge1xuICAgIG9wdHMuaGVhZGVycyA9IHRoaXMuZXh0cmFIZWFkZXJzO1xuICB9XG4gIGlmICh0aGlzLmxvY2FsQWRkcmVzcykge1xuICAgIG9wdHMubG9jYWxBZGRyZXNzID0gdGhpcy5sb2NhbEFkZHJlc3M7XG4gIH1cblxuICB0cnkge1xuICAgIHRoaXMud3MgPSB0aGlzLnVzaW5nQnJvd3NlcldlYlNvY2tldCA/IChwcm90b2NvbHMgPyBuZXcgV2ViU29ja2V0KHVyaSwgcHJvdG9jb2xzKSA6IG5ldyBXZWJTb2NrZXQodXJpKSkgOiBuZXcgV2ViU29ja2V0KHVyaSwgcHJvdG9jb2xzLCBvcHRzKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICB9XG5cbiAgaWYgKHRoaXMud3MuYmluYXJ5VHlwZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpcy5zdXBwb3J0c0JpbmFyeSA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKHRoaXMud3Muc3VwcG9ydHMgJiYgdGhpcy53cy5zdXBwb3J0cy5iaW5hcnkpIHtcbiAgICB0aGlzLnN1cHBvcnRzQmluYXJ5ID0gdHJ1ZTtcbiAgICB0aGlzLndzLmJpbmFyeVR5cGUgPSAnbm9kZWJ1ZmZlcic7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy53cy5iaW5hcnlUeXBlID0gJ2FycmF5YnVmZmVyJztcbiAgfVxuXG4gIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKTtcbn07XG5cbi8qKlxuICogQWRkcyBldmVudCBsaXN0ZW5lcnMgdG8gdGhlIHNvY2tldFxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbldTLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gIHRoaXMud3Mub25vcGVuID0gZnVuY3Rpb24gKCkge1xuICAgIHNlbGYub25PcGVuKCk7XG4gIH07XG4gIHRoaXMud3Mub25jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLm9uQ2xvc2UoKTtcbiAgfTtcbiAgdGhpcy53cy5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICBzZWxmLm9uRGF0YShldi5kYXRhKTtcbiAgfTtcbiAgdGhpcy53cy5vbmVycm9yID0gZnVuY3Rpb24gKGUpIHtcbiAgICBzZWxmLm9uRXJyb3IoJ3dlYnNvY2tldCBlcnJvcicsIGUpO1xuICB9O1xufTtcblxuLyoqXG4gKiBXcml0ZXMgZGF0YSB0byBzb2NrZXQuXG4gKlxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgb2YgcGFja2V0cy5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbldTLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIChwYWNrZXRzKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy53cml0YWJsZSA9IGZhbHNlO1xuXG4gIC8vIGVuY29kZVBhY2tldCBlZmZpY2llbnQgYXMgaXQgdXNlcyBXUyBmcmFtaW5nXG4gIC8vIG5vIG5lZWQgZm9yIGVuY29kZVBheWxvYWRcbiAgdmFyIHRvdGFsID0gcGFja2V0cy5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwLCBsID0gdG90YWw7IGkgPCBsOyBpKyspIHtcbiAgICAoZnVuY3Rpb24gKHBhY2tldCkge1xuICAgICAgcGFyc2VyLmVuY29kZVBhY2tldChwYWNrZXQsIHNlbGYuc3VwcG9ydHNCaW5hcnksIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmICghc2VsZi51c2luZ0Jyb3dzZXJXZWJTb2NrZXQpIHtcbiAgICAgICAgICAvLyBhbHdheXMgY3JlYXRlIGEgbmV3IG9iamVjdCAoR0gtNDM3KVxuICAgICAgICAgIHZhciBvcHRzID0ge307XG4gICAgICAgICAgaWYgKHBhY2tldC5vcHRpb25zKSB7XG4gICAgICAgICAgICBvcHRzLmNvbXByZXNzID0gcGFja2V0Lm9wdGlvbnMuY29tcHJlc3M7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlbGYucGVyTWVzc2FnZURlZmxhdGUpIHtcbiAgICAgICAgICAgIHZhciBsZW4gPSAnc3RyaW5nJyA9PT0gdHlwZW9mIGRhdGEgPyBnbG9iYWwuQnVmZmVyLmJ5dGVMZW5ndGgoZGF0YSkgOiBkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChsZW4gPCBzZWxmLnBlck1lc3NhZ2VEZWZsYXRlLnRocmVzaG9sZCkge1xuICAgICAgICAgICAgICBvcHRzLmNvbXByZXNzID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gU29tZXRpbWVzIHRoZSB3ZWJzb2NrZXQgaGFzIGFscmVhZHkgYmVlbiBjbG9zZWQgYnV0IHRoZSBicm93c2VyIGRpZG4ndFxuICAgICAgICAvLyBoYXZlIGEgY2hhbmNlIG9mIGluZm9ybWluZyB1cyBhYm91dCBpdCB5ZXQsIGluIHRoYXQgY2FzZSBzZW5kIHdpbGxcbiAgICAgICAgLy8gdGhyb3cgYW4gZXJyb3JcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoc2VsZi51c2luZ0Jyb3dzZXJXZWJTb2NrZXQpIHtcbiAgICAgICAgICAgIC8vIFR5cGVFcnJvciBpcyB0aHJvd24gd2hlbiBwYXNzaW5nIHRoZSBzZWNvbmQgYXJndW1lbnQgb24gU2FmYXJpXG4gICAgICAgICAgICBzZWxmLndzLnNlbmQoZGF0YSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYud3Muc2VuZChkYXRhLCBvcHRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBkZWJ1Zygnd2Vic29ja2V0IGNsb3NlZCBiZWZvcmUgb25jbG9zZSBldmVudCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgLS10b3RhbCB8fCBkb25lKCk7XG4gICAgICB9KTtcbiAgICB9KShwYWNrZXRzW2ldKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRvbmUgKCkge1xuICAgIHNlbGYuZW1pdCgnZmx1c2gnKTtcblxuICAgIC8vIGZha2UgZHJhaW5cbiAgICAvLyBkZWZlciB0byBuZXh0IHRpY2sgdG8gYWxsb3cgU29ja2V0IHRvIGNsZWFyIHdyaXRlQnVmZmVyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBzZWxmLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgIHNlbGYuZW1pdCgnZHJhaW4nKTtcbiAgICB9LCAwKTtcbiAgfVxufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBjbG9zZVxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbldTLnByb3RvdHlwZS5vbkNsb3NlID0gZnVuY3Rpb24gKCkge1xuICBUcmFuc3BvcnQucHJvdG90eXBlLm9uQ2xvc2UuY2FsbCh0aGlzKTtcbn07XG5cbi8qKlxuICogQ2xvc2VzIHNvY2tldC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5XUy5wcm90b3R5cGUuZG9DbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHR5cGVvZiB0aGlzLndzICE9PSAndW5kZWZpbmVkJykge1xuICAgIHRoaXMud3MuY2xvc2UoKTtcbiAgfVxufTtcblxuLyoqXG4gKiBHZW5lcmF0ZXMgdXJpIGZvciBjb25uZWN0aW9uLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbldTLnByb3RvdHlwZS51cmkgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBxdWVyeSA9IHRoaXMucXVlcnkgfHwge307XG4gIHZhciBzY2hlbWEgPSB0aGlzLnNlY3VyZSA/ICd3c3MnIDogJ3dzJztcbiAgdmFyIHBvcnQgPSAnJztcblxuICAvLyBhdm9pZCBwb3J0IGlmIGRlZmF1bHQgZm9yIHNjaGVtYVxuICBpZiAodGhpcy5wb3J0ICYmICgoJ3dzcycgPT09IHNjaGVtYSAmJiBOdW1iZXIodGhpcy5wb3J0KSAhPT0gNDQzKSB8fFxuICAgICgnd3MnID09PSBzY2hlbWEgJiYgTnVtYmVyKHRoaXMucG9ydCkgIT09IDgwKSkpIHtcbiAgICBwb3J0ID0gJzonICsgdGhpcy5wb3J0O1xuICB9XG5cbiAgLy8gYXBwZW5kIHRpbWVzdGFtcCB0byBVUklcbiAgaWYgKHRoaXMudGltZXN0YW1wUmVxdWVzdHMpIHtcbiAgICBxdWVyeVt0aGlzLnRpbWVzdGFtcFBhcmFtXSA9IHllYXN0KCk7XG4gIH1cblxuICAvLyBjb21tdW5pY2F0ZSBiaW5hcnkgc3VwcG9ydCBjYXBhYmlsaXRpZXNcbiAgaWYgKCF0aGlzLnN1cHBvcnRzQmluYXJ5KSB7XG4gICAgcXVlcnkuYjY0ID0gMTtcbiAgfVxuXG4gIHF1ZXJ5ID0gcGFyc2Vxcy5lbmNvZGUocXVlcnkpO1xuXG4gIC8vIHByZXBlbmQgPyB0byBxdWVyeVxuICBpZiAocXVlcnkubGVuZ3RoKSB7XG4gICAgcXVlcnkgPSAnPycgKyBxdWVyeTtcbiAgfVxuXG4gIHZhciBpcHY2ID0gdGhpcy5ob3N0bmFtZS5pbmRleE9mKCc6JykgIT09IC0xO1xuICByZXR1cm4gc2NoZW1hICsgJzovLycgKyAoaXB2NiA/ICdbJyArIHRoaXMuaG9zdG5hbWUgKyAnXScgOiB0aGlzLmhvc3RuYW1lKSArIHBvcnQgKyB0aGlzLnBhdGggKyBxdWVyeTtcbn07XG5cbi8qKlxuICogRmVhdHVyZSBkZXRlY3Rpb24gZm9yIFdlYlNvY2tldC5cbiAqXG4gKiBAcmV0dXJuIHtCb29sZWFufSB3aGV0aGVyIHRoaXMgdHJhbnNwb3J0IGlzIGF2YWlsYWJsZS5cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuV1MucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gISFXZWJTb2NrZXQgJiYgISgnX19pbml0aWFsaXplJyBpbiBXZWJTb2NrZXQgJiYgdGhpcy5uYW1lID09PSBXUy5wcm90b3R5cGUubmFtZSk7XG59O1xuIiwiXG4vKipcbiAqIE1vZHVsZSByZXF1aXJlbWVudHMuXG4gKi9cblxudmFyIFBvbGxpbmcgPSByZXF1aXJlKCcuL3BvbGxpbmcnKTtcbnZhciBpbmhlcml0ID0gcmVxdWlyZSgnY29tcG9uZW50LWluaGVyaXQnKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpTT05QUG9sbGluZztcblxuLyoqXG4gKiBDYWNoZWQgcmVndWxhciBleHByZXNzaW9ucy5cbiAqL1xuXG52YXIgck5ld2xpbmUgPSAvXFxuL2c7XG52YXIgckVzY2FwZWROZXdsaW5lID0gL1xcXFxuL2c7XG5cbi8qKlxuICogR2xvYmFsIEpTT05QIGNhbGxiYWNrcy5cbiAqL1xuXG52YXIgY2FsbGJhY2tzO1xuXG4vKipcbiAqIE5vb3AuXG4gKi9cblxuZnVuY3Rpb24gZW1wdHkgKCkgeyB9XG5cbi8qKlxuICogSlNPTlAgUG9sbGluZyBjb25zdHJ1Y3Rvci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cy5cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gSlNPTlBQb2xsaW5nIChvcHRzKSB7XG4gIFBvbGxpbmcuY2FsbCh0aGlzLCBvcHRzKTtcblxuICB0aGlzLnF1ZXJ5ID0gdGhpcy5xdWVyeSB8fCB7fTtcblxuICAvLyBkZWZpbmUgZ2xvYmFsIGNhbGxiYWNrcyBhcnJheSBpZiBub3QgcHJlc2VudFxuICAvLyB3ZSBkbyB0aGlzIGhlcmUgKGxhemlseSkgdG8gYXZvaWQgdW5uZWVkZWQgZ2xvYmFsIHBvbGx1dGlvblxuICBpZiAoIWNhbGxiYWNrcykge1xuICAgIC8vIHdlIG5lZWQgdG8gY29uc2lkZXIgbXVsdGlwbGUgZW5naW5lcyBpbiB0aGUgc2FtZSBwYWdlXG4gICAgaWYgKCFnbG9iYWwuX19fZWlvKSBnbG9iYWwuX19fZWlvID0gW107XG4gICAgY2FsbGJhY2tzID0gZ2xvYmFsLl9fX2VpbztcbiAgfVxuXG4gIC8vIGNhbGxiYWNrIGlkZW50aWZpZXJcbiAgdGhpcy5pbmRleCA9IGNhbGxiYWNrcy5sZW5ndGg7XG5cbiAgLy8gYWRkIGNhbGxiYWNrIHRvIGpzb25wIGdsb2JhbFxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIGNhbGxiYWNrcy5wdXNoKGZ1bmN0aW9uIChtc2cpIHtcbiAgICBzZWxmLm9uRGF0YShtc2cpO1xuICB9KTtcblxuICAvLyBhcHBlbmQgdG8gcXVlcnkgc3RyaW5nXG4gIHRoaXMucXVlcnkuaiA9IHRoaXMuaW5kZXg7XG5cbiAgLy8gcHJldmVudCBzcHVyaW91cyBlcnJvcnMgZnJvbSBiZWluZyBlbWl0dGVkIHdoZW4gdGhlIHdpbmRvdyBpcyB1bmxvYWRlZFxuICBpZiAoZ2xvYmFsLmRvY3VtZW50ICYmIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChzZWxmLnNjcmlwdCkgc2VsZi5zY3JpcHQub25lcnJvciA9IGVtcHR5O1xuICAgIH0sIGZhbHNlKTtcbiAgfVxufVxuXG4vKipcbiAqIEluaGVyaXRzIGZyb20gUG9sbGluZy5cbiAqL1xuXG5pbmhlcml0KEpTT05QUG9sbGluZywgUG9sbGluZyk7XG5cbi8qXG4gKiBKU09OUCBvbmx5IHN1cHBvcnRzIGJpbmFyeSBhcyBiYXNlNjQgZW5jb2RlZCBzdHJpbmdzXG4gKi9cblxuSlNPTlBQb2xsaW5nLnByb3RvdHlwZS5zdXBwb3J0c0JpbmFyeSA9IGZhbHNlO1xuXG4vKipcbiAqIENsb3NlcyB0aGUgc29ja2V0LlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbkpTT05QUG9sbGluZy5wcm90b3R5cGUuZG9DbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMuc2NyaXB0KSB7XG4gICAgdGhpcy5zY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLnNjcmlwdCk7XG4gICAgdGhpcy5zY3JpcHQgPSBudWxsO1xuICB9XG5cbiAgaWYgKHRoaXMuZm9ybSkge1xuICAgIHRoaXMuZm9ybS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZm9ybSk7XG4gICAgdGhpcy5mb3JtID0gbnVsbDtcbiAgICB0aGlzLmlmcmFtZSA9IG51bGw7XG4gIH1cblxuICBQb2xsaW5nLnByb3RvdHlwZS5kb0Nsb3NlLmNhbGwodGhpcyk7XG59O1xuXG4vKipcbiAqIFN0YXJ0cyBhIHBvbGwgY3ljbGUuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuSlNPTlBQb2xsaW5nLnByb3RvdHlwZS5kb1BvbGwgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuXG4gIGlmICh0aGlzLnNjcmlwdCkge1xuICAgIHRoaXMuc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5zY3JpcHQpO1xuICAgIHRoaXMuc2NyaXB0ID0gbnVsbDtcbiAgfVxuXG4gIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gIHNjcmlwdC5zcmMgPSB0aGlzLnVyaSgpO1xuICBzY3JpcHQub25lcnJvciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgc2VsZi5vbkVycm9yKCdqc29ucCBwb2xsIGVycm9yJywgZSk7XG4gIH07XG5cbiAgdmFyIGluc2VydEF0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xuICBpZiAoaW5zZXJ0QXQpIHtcbiAgICBpbnNlcnRBdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzY3JpcHQsIGluc2VydEF0KTtcbiAgfSBlbHNlIHtcbiAgICAoZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICB9XG4gIHRoaXMuc2NyaXB0ID0gc2NyaXB0O1xuXG4gIHZhciBpc1VBZ2Vja28gPSAndW5kZWZpbmVkJyAhPT0gdHlwZW9mIG5hdmlnYXRvciAmJiAvZ2Vja28vaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuXG4gIGlmIChpc1VBZ2Vja28pIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICB9LCAxMDApO1xuICB9XG59O1xuXG4vKipcbiAqIFdyaXRlcyB3aXRoIGEgaGlkZGVuIGlmcmFtZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZGF0YSB0byBzZW5kXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsZWQgdXBvbiBmbHVzaC5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbkpTT05QUG9sbGluZy5wcm90b3R5cGUuZG9Xcml0ZSA9IGZ1bmN0aW9uIChkYXRhLCBmbikge1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgaWYgKCF0aGlzLmZvcm0pIHtcbiAgICB2YXIgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICB2YXIgYXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgdmFyIGlkID0gdGhpcy5pZnJhbWVJZCA9ICdlaW9faWZyYW1lXycgKyB0aGlzLmluZGV4O1xuICAgIHZhciBpZnJhbWU7XG5cbiAgICBmb3JtLmNsYXNzTmFtZSA9ICdzb2NrZXRpbyc7XG4gICAgZm9ybS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgZm9ybS5zdHlsZS50b3AgPSAnLTEwMDBweCc7XG4gICAgZm9ybS5zdHlsZS5sZWZ0ID0gJy0xMDAwcHgnO1xuICAgIGZvcm0udGFyZ2V0ID0gaWQ7XG4gICAgZm9ybS5tZXRob2QgPSAnUE9TVCc7XG4gICAgZm9ybS5zZXRBdHRyaWJ1dGUoJ2FjY2VwdC1jaGFyc2V0JywgJ3V0Zi04Jyk7XG4gICAgYXJlYS5uYW1lID0gJ2QnO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoYXJlYSk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChmb3JtKTtcblxuICAgIHRoaXMuZm9ybSA9IGZvcm07XG4gICAgdGhpcy5hcmVhID0gYXJlYTtcbiAgfVxuXG4gIHRoaXMuZm9ybS5hY3Rpb24gPSB0aGlzLnVyaSgpO1xuXG4gIGZ1bmN0aW9uIGNvbXBsZXRlICgpIHtcbiAgICBpbml0SWZyYW1lKCk7XG4gICAgZm4oKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRJZnJhbWUgKCkge1xuICAgIGlmIChzZWxmLmlmcmFtZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2VsZi5mb3JtLnJlbW92ZUNoaWxkKHNlbGYuaWZyYW1lKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgc2VsZi5vbkVycm9yKCdqc29ucCBwb2xsaW5nIGlmcmFtZSByZW1vdmFsIGVycm9yJywgZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIGllNiBkeW5hbWljIGlmcmFtZXMgd2l0aCB0YXJnZXQ9XCJcIiBzdXBwb3J0ICh0aGFua3MgQ2hyaXMgTGFtYmFjaGVyKVxuICAgICAgdmFyIGh0bWwgPSAnPGlmcmFtZSBzcmM9XCJqYXZhc2NyaXB0OjBcIiBuYW1lPVwiJyArIHNlbGYuaWZyYW1lSWQgKyAnXCI+JztcbiAgICAgIGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaHRtbCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgICBpZnJhbWUubmFtZSA9IHNlbGYuaWZyYW1lSWQ7XG4gICAgICBpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6MCc7XG4gICAgfVxuXG4gICAgaWZyYW1lLmlkID0gc2VsZi5pZnJhbWVJZDtcblxuICAgIHNlbGYuZm9ybS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgIHNlbGYuaWZyYW1lID0gaWZyYW1lO1xuICB9XG5cbiAgaW5pdElmcmFtZSgpO1xuXG4gIC8vIGVzY2FwZSBcXG4gdG8gcHJldmVudCBpdCBmcm9tIGJlaW5nIGNvbnZlcnRlZCBpbnRvIFxcclxcbiBieSBzb21lIFVBc1xuICAvLyBkb3VibGUgZXNjYXBpbmcgaXMgcmVxdWlyZWQgZm9yIGVzY2FwZWQgbmV3IGxpbmVzIGJlY2F1c2UgdW5lc2NhcGluZyBvZiBuZXcgbGluZXMgY2FuIGJlIGRvbmUgc2FmZWx5IG9uIHNlcnZlci1zaWRlXG4gIGRhdGEgPSBkYXRhLnJlcGxhY2UockVzY2FwZWROZXdsaW5lLCAnXFxcXFxcbicpO1xuICB0aGlzLmFyZWEudmFsdWUgPSBkYXRhLnJlcGxhY2Uock5ld2xpbmUsICdcXFxcbicpO1xuXG4gIHRyeSB7XG4gICAgdGhpcy5mb3JtLnN1Ym1pdCgpO1xuICB9IGNhdGNoIChlKSB7fVxuXG4gIGlmICh0aGlzLmlmcmFtZS5hdHRhY2hFdmVudCkge1xuICAgIHRoaXMuaWZyYW1lLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChzZWxmLmlmcmFtZS5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSB7XG4gICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmlmcmFtZS5vbmxvYWQgPSBjb21wbGV0ZTtcbiAgfVxufTtcbiIsIi8qKlxuICogQ3JlYXRlIGEgYmxvYiBidWlsZGVyIGV2ZW4gd2hlbiB2ZW5kb3IgcHJlZml4ZXMgZXhpc3RcbiAqL1xuXG52YXIgQmxvYkJ1aWxkZXIgPSBnbG9iYWwuQmxvYkJ1aWxkZXJcbiAgfHwgZ2xvYmFsLldlYktpdEJsb2JCdWlsZGVyXG4gIHx8IGdsb2JhbC5NU0Jsb2JCdWlsZGVyXG4gIHx8IGdsb2JhbC5Nb3pCbG9iQnVpbGRlcjtcblxuLyoqXG4gKiBDaGVjayBpZiBCbG9iIGNvbnN0cnVjdG9yIGlzIHN1cHBvcnRlZFxuICovXG5cbnZhciBibG9iU3VwcG9ydGVkID0gKGZ1bmN0aW9uKCkge1xuICB0cnkge1xuICAgIHZhciBhID0gbmV3IEJsb2IoWydoaSddKTtcbiAgICByZXR1cm4gYS5zaXplID09PSAyO1xuICB9IGNhdGNoKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0pKCk7XG5cbi8qKlxuICogQ2hlY2sgaWYgQmxvYiBjb25zdHJ1Y3RvciBzdXBwb3J0cyBBcnJheUJ1ZmZlclZpZXdzXG4gKiBGYWlscyBpbiBTYWZhcmkgNiwgc28gd2UgbmVlZCB0byBtYXAgdG8gQXJyYXlCdWZmZXJzIHRoZXJlLlxuICovXG5cbnZhciBibG9iU3VwcG9ydHNBcnJheUJ1ZmZlclZpZXcgPSBibG9iU3VwcG9ydGVkICYmIChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICB2YXIgYiA9IG5ldyBCbG9iKFtuZXcgVWludDhBcnJheShbMSwyXSldKTtcbiAgICByZXR1cm4gYi5zaXplID09PSAyO1xuICB9IGNhdGNoKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0pKCk7XG5cbi8qKlxuICogQ2hlY2sgaWYgQmxvYkJ1aWxkZXIgaXMgc3VwcG9ydGVkXG4gKi9cblxudmFyIGJsb2JCdWlsZGVyU3VwcG9ydGVkID0gQmxvYkJ1aWxkZXJcbiAgJiYgQmxvYkJ1aWxkZXIucHJvdG90eXBlLmFwcGVuZFxuICAmJiBCbG9iQnVpbGRlci5wcm90b3R5cGUuZ2V0QmxvYjtcblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdGhhdCBtYXBzIEFycmF5QnVmZmVyVmlld3MgdG8gQXJyYXlCdWZmZXJzXG4gKiBVc2VkIGJ5IEJsb2JCdWlsZGVyIGNvbnN0cnVjdG9yIGFuZCBvbGQgYnJvd3NlcnMgdGhhdCBkaWRuJ3RcbiAqIHN1cHBvcnQgaXQgaW4gdGhlIEJsb2IgY29uc3RydWN0b3IuXG4gKi9cblxuZnVuY3Rpb24gbWFwQXJyYXlCdWZmZXJWaWV3cyhhcnkpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnkubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgY2h1bmsgPSBhcnlbaV07XG4gICAgaWYgKGNodW5rLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICB2YXIgYnVmID0gY2h1bmsuYnVmZmVyO1xuXG4gICAgICAvLyBpZiB0aGlzIGlzIGEgc3ViYXJyYXksIG1ha2UgYSBjb3B5IHNvIHdlIG9ubHlcbiAgICAgIC8vIGluY2x1ZGUgdGhlIHN1YmFycmF5IHJlZ2lvbiBmcm9tIHRoZSB1bmRlcmx5aW5nIGJ1ZmZlclxuICAgICAgaWYgKGNodW5rLmJ5dGVMZW5ndGggIT09IGJ1Zi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHZhciBjb3B5ID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmsuYnl0ZUxlbmd0aCk7XG4gICAgICAgIGNvcHkuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZiwgY2h1bmsuYnl0ZU9mZnNldCwgY2h1bmsuYnl0ZUxlbmd0aCkpO1xuICAgICAgICBidWYgPSBjb3B5LmJ1ZmZlcjtcbiAgICAgIH1cblxuICAgICAgYXJ5W2ldID0gYnVmO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBCbG9iQnVpbGRlckNvbnN0cnVjdG9yKGFyeSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgYmIgPSBuZXcgQmxvYkJ1aWxkZXIoKTtcbiAgbWFwQXJyYXlCdWZmZXJWaWV3cyhhcnkpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJ5Lmxlbmd0aDsgaSsrKSB7XG4gICAgYmIuYXBwZW5kKGFyeVtpXSk7XG4gIH1cblxuICByZXR1cm4gKG9wdGlvbnMudHlwZSkgPyBiYi5nZXRCbG9iKG9wdGlvbnMudHlwZSkgOiBiYi5nZXRCbG9iKCk7XG59O1xuXG5mdW5jdGlvbiBCbG9iQ29uc3RydWN0b3IoYXJ5LCBvcHRpb25zKSB7XG4gIG1hcEFycmF5QnVmZmVyVmlld3MoYXJ5KTtcbiAgcmV0dXJuIG5ldyBCbG9iKGFyeSwgb3B0aW9ucyB8fCB7fSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpIHtcbiAgaWYgKGJsb2JTdXBwb3J0ZWQpIHtcbiAgICByZXR1cm4gYmxvYlN1cHBvcnRzQXJyYXlCdWZmZXJWaWV3ID8gZ2xvYmFsLkJsb2IgOiBCbG9iQ29uc3RydWN0b3I7XG4gIH0gZWxzZSBpZiAoYmxvYkJ1aWxkZXJTdXBwb3J0ZWQpIHtcbiAgICByZXR1cm4gQmxvYkJ1aWxkZXJDb25zdHJ1Y3RvcjtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59KSgpO1xuIiwiLypcbiAqIGJhc2U2NC1hcnJheWJ1ZmZlclxuICogaHR0cHM6Ly9naXRodWIuY29tL25pa2xhc3ZoL2Jhc2U2NC1hcnJheWJ1ZmZlclxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMiBOaWtsYXMgdm9uIEhlcnR6ZW5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqL1xuKGZ1bmN0aW9uKCl7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBjaGFycyA9IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiO1xuXG4gIC8vIFVzZSBhIGxvb2t1cCB0YWJsZSB0byBmaW5kIHRoZSBpbmRleC5cbiAgdmFyIGxvb2t1cCA9IG5ldyBVaW50OEFycmF5KDI1Nik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHtcbiAgICBsb29rdXBbY2hhcnMuY2hhckNvZGVBdChpKV0gPSBpO1xuICB9XG5cbiAgZXhwb3J0cy5lbmNvZGUgPSBmdW5jdGlvbihhcnJheWJ1ZmZlcikge1xuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKSxcbiAgICBpLCBsZW4gPSBieXRlcy5sZW5ndGgsIGJhc2U2NCA9IFwiXCI7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKz0zKSB7XG4gICAgICBiYXNlNjQgKz0gY2hhcnNbYnl0ZXNbaV0gPj4gMl07XG4gICAgICBiYXNlNjQgKz0gY2hhcnNbKChieXRlc1tpXSAmIDMpIDw8IDQpIHwgKGJ5dGVzW2kgKyAxXSA+PiA0KV07XG4gICAgICBiYXNlNjQgKz0gY2hhcnNbKChieXRlc1tpICsgMV0gJiAxNSkgPDwgMikgfCAoYnl0ZXNbaSArIDJdID4+IDYpXTtcbiAgICAgIGJhc2U2NCArPSBjaGFyc1tieXRlc1tpICsgMl0gJiA2M107XG4gICAgfVxuXG4gICAgaWYgKChsZW4gJSAzKSA9PT0gMikge1xuICAgICAgYmFzZTY0ID0gYmFzZTY0LnN1YnN0cmluZygwLCBiYXNlNjQubGVuZ3RoIC0gMSkgKyBcIj1cIjtcbiAgICB9IGVsc2UgaWYgKGxlbiAlIDMgPT09IDEpIHtcbiAgICAgIGJhc2U2NCA9IGJhc2U2NC5zdWJzdHJpbmcoMCwgYmFzZTY0Lmxlbmd0aCAtIDIpICsgXCI9PVwiO1xuICAgIH1cblxuICAgIHJldHVybiBiYXNlNjQ7XG4gIH07XG5cbiAgZXhwb3J0cy5kZWNvZGUgPSAgZnVuY3Rpb24oYmFzZTY0KSB7XG4gICAgdmFyIGJ1ZmZlckxlbmd0aCA9IGJhc2U2NC5sZW5ndGggKiAwLjc1LFxuICAgIGxlbiA9IGJhc2U2NC5sZW5ndGgsIGksIHAgPSAwLFxuICAgIGVuY29kZWQxLCBlbmNvZGVkMiwgZW5jb2RlZDMsIGVuY29kZWQ0O1xuXG4gICAgaWYgKGJhc2U2NFtiYXNlNjQubGVuZ3RoIC0gMV0gPT09IFwiPVwiKSB7XG4gICAgICBidWZmZXJMZW5ndGgtLTtcbiAgICAgIGlmIChiYXNlNjRbYmFzZTY0Lmxlbmd0aCAtIDJdID09PSBcIj1cIikge1xuICAgICAgICBidWZmZXJMZW5ndGgtLTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgYXJyYXlidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoYnVmZmVyTGVuZ3RoKSxcbiAgICBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrPTQpIHtcbiAgICAgIGVuY29kZWQxID0gbG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkpXTtcbiAgICAgIGVuY29kZWQyID0gbG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkrMSldO1xuICAgICAgZW5jb2RlZDMgPSBsb29rdXBbYmFzZTY0LmNoYXJDb2RlQXQoaSsyKV07XG4gICAgICBlbmNvZGVkNCA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpKzMpXTtcblxuICAgICAgYnl0ZXNbcCsrXSA9IChlbmNvZGVkMSA8PCAyKSB8IChlbmNvZGVkMiA+PiA0KTtcbiAgICAgIGJ5dGVzW3ArK10gPSAoKGVuY29kZWQyICYgMTUpIDw8IDQpIHwgKGVuY29kZWQzID4+IDIpO1xuICAgICAgYnl0ZXNbcCsrXSA9ICgoZW5jb2RlZDMgJiAzKSA8PCA2KSB8IChlbmNvZGVkNCAmIDYzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyYXlidWZmZXI7XG4gIH07XG59KSgpO1xuIiwiLyohIGh0dHBzOi8vbXRocy5iZS91dGY4anMgdjIuMS4yIGJ5IEBtYXRoaWFzICovXG47KGZ1bmN0aW9uKHJvb3QpIHtcblxuXHQvLyBEZXRlY3QgZnJlZSB2YXJpYWJsZXMgYGV4cG9ydHNgXG5cdHZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHM7XG5cblx0Ly8gRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWBcblx0dmFyIGZyZWVNb2R1bGUgPSB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJlxuXHRcdG1vZHVsZS5leHBvcnRzID09IGZyZWVFeHBvcnRzICYmIG1vZHVsZTtcblxuXHQvLyBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCwgZnJvbSBOb2RlLmpzIG9yIEJyb3dzZXJpZmllZCBjb2RlLFxuXHQvLyBhbmQgdXNlIGl0IGFzIGByb290YFxuXHR2YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsO1xuXHRpZiAoZnJlZUdsb2JhbC5nbG9iYWwgPT09IGZyZWVHbG9iYWwgfHwgZnJlZUdsb2JhbC53aW5kb3cgPT09IGZyZWVHbG9iYWwpIHtcblx0XHRyb290ID0gZnJlZUdsb2JhbDtcblx0fVxuXG5cdC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cdHZhciBzdHJpbmdGcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlO1xuXG5cdC8vIFRha2VuIGZyb20gaHR0cHM6Ly9tdGhzLmJlL3B1bnljb2RlXG5cdGZ1bmN0aW9uIHVjczJkZWNvZGUoc3RyaW5nKSB7XG5cdFx0dmFyIG91dHB1dCA9IFtdO1xuXHRcdHZhciBjb3VudGVyID0gMDtcblx0XHR2YXIgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcblx0XHR2YXIgdmFsdWU7XG5cdFx0dmFyIGV4dHJhO1xuXHRcdHdoaWxlIChjb3VudGVyIDwgbGVuZ3RoKSB7XG5cdFx0XHR2YWx1ZSA9IHN0cmluZy5jaGFyQ29kZUF0KGNvdW50ZXIrKyk7XG5cdFx0XHRpZiAodmFsdWUgPj0gMHhEODAwICYmIHZhbHVlIDw9IDB4REJGRiAmJiBjb3VudGVyIDwgbGVuZ3RoKSB7XG5cdFx0XHRcdC8vIGhpZ2ggc3Vycm9nYXRlLCBhbmQgdGhlcmUgaXMgYSBuZXh0IGNoYXJhY3RlclxuXHRcdFx0XHRleHRyYSA9IHN0cmluZy5jaGFyQ29kZUF0KGNvdW50ZXIrKyk7XG5cdFx0XHRcdGlmICgoZXh0cmEgJiAweEZDMDApID09IDB4REMwMCkgeyAvLyBsb3cgc3Vycm9nYXRlXG5cdFx0XHRcdFx0b3V0cHV0LnB1c2goKCh2YWx1ZSAmIDB4M0ZGKSA8PCAxMCkgKyAoZXh0cmEgJiAweDNGRikgKyAweDEwMDAwKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyB1bm1hdGNoZWQgc3Vycm9nYXRlOyBvbmx5IGFwcGVuZCB0aGlzIGNvZGUgdW5pdCwgaW4gY2FzZSB0aGUgbmV4dFxuXHRcdFx0XHRcdC8vIGNvZGUgdW5pdCBpcyB0aGUgaGlnaCBzdXJyb2dhdGUgb2YgYSBzdXJyb2dhdGUgcGFpclxuXHRcdFx0XHRcdG91dHB1dC5wdXNoKHZhbHVlKTtcblx0XHRcdFx0XHRjb3VudGVyLS07XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG91dHB1dC5wdXNoKHZhbHVlKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIG91dHB1dDtcblx0fVxuXG5cdC8vIFRha2VuIGZyb20gaHR0cHM6Ly9tdGhzLmJlL3B1bnljb2RlXG5cdGZ1bmN0aW9uIHVjczJlbmNvZGUoYXJyYXkpIHtcblx0XHR2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuXHRcdHZhciBpbmRleCA9IC0xO1xuXHRcdHZhciB2YWx1ZTtcblx0XHR2YXIgb3V0cHV0ID0gJyc7XG5cdFx0d2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcblx0XHRcdHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuXHRcdFx0aWYgKHZhbHVlID4gMHhGRkZGKSB7XG5cdFx0XHRcdHZhbHVlIC09IDB4MTAwMDA7XG5cdFx0XHRcdG91dHB1dCArPSBzdHJpbmdGcm9tQ2hhckNvZGUodmFsdWUgPj4+IDEwICYgMHgzRkYgfCAweEQ4MDApO1xuXHRcdFx0XHR2YWx1ZSA9IDB4REMwMCB8IHZhbHVlICYgMHgzRkY7XG5cdFx0XHR9XG5cdFx0XHRvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlKTtcblx0XHR9XG5cdFx0cmV0dXJuIG91dHB1dDtcblx0fVxuXG5cdGZ1bmN0aW9uIGNoZWNrU2NhbGFyVmFsdWUoY29kZVBvaW50LCBzdHJpY3QpIHtcblx0XHRpZiAoY29kZVBvaW50ID49IDB4RDgwMCAmJiBjb2RlUG9pbnQgPD0gMHhERkZGKSB7XG5cdFx0XHRpZiAoc3RyaWN0KSB7XG5cdFx0XHRcdHRocm93IEVycm9yKFxuXHRcdFx0XHRcdCdMb25lIHN1cnJvZ2F0ZSBVKycgKyBjb2RlUG9pbnQudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCkgK1xuXHRcdFx0XHRcdCcgaXMgbm90IGEgc2NhbGFyIHZhbHVlJ1xuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXHQvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXHRmdW5jdGlvbiBjcmVhdGVCeXRlKGNvZGVQb2ludCwgc2hpZnQpIHtcblx0XHRyZXR1cm4gc3RyaW5nRnJvbUNoYXJDb2RlKCgoY29kZVBvaW50ID4+IHNoaWZ0KSAmIDB4M0YpIHwgMHg4MCk7XG5cdH1cblxuXHRmdW5jdGlvbiBlbmNvZGVDb2RlUG9pbnQoY29kZVBvaW50LCBzdHJpY3QpIHtcblx0XHRpZiAoKGNvZGVQb2ludCAmIDB4RkZGRkZGODApID09IDApIHsgLy8gMS1ieXRlIHNlcXVlbmNlXG5cdFx0XHRyZXR1cm4gc3RyaW5nRnJvbUNoYXJDb2RlKGNvZGVQb2ludCk7XG5cdFx0fVxuXHRcdHZhciBzeW1ib2wgPSAnJztcblx0XHRpZiAoKGNvZGVQb2ludCAmIDB4RkZGRkY4MDApID09IDApIHsgLy8gMi1ieXRlIHNlcXVlbmNlXG5cdFx0XHRzeW1ib2wgPSBzdHJpbmdGcm9tQ2hhckNvZGUoKChjb2RlUG9pbnQgPj4gNikgJiAweDFGKSB8IDB4QzApO1xuXHRcdH1cblx0XHRlbHNlIGlmICgoY29kZVBvaW50ICYgMHhGRkZGMDAwMCkgPT0gMCkgeyAvLyAzLWJ5dGUgc2VxdWVuY2Vcblx0XHRcdGlmICghY2hlY2tTY2FsYXJWYWx1ZShjb2RlUG9pbnQsIHN0cmljdCkpIHtcblx0XHRcdFx0Y29kZVBvaW50ID0gMHhGRkZEO1xuXHRcdFx0fVxuXHRcdFx0c3ltYm9sID0gc3RyaW5nRnJvbUNoYXJDb2RlKCgoY29kZVBvaW50ID4+IDEyKSAmIDB4MEYpIHwgMHhFMCk7XG5cdFx0XHRzeW1ib2wgKz0gY3JlYXRlQnl0ZShjb2RlUG9pbnQsIDYpO1xuXHRcdH1cblx0XHRlbHNlIGlmICgoY29kZVBvaW50ICYgMHhGRkUwMDAwMCkgPT0gMCkgeyAvLyA0LWJ5dGUgc2VxdWVuY2Vcblx0XHRcdHN5bWJvbCA9IHN0cmluZ0Zyb21DaGFyQ29kZSgoKGNvZGVQb2ludCA+PiAxOCkgJiAweDA3KSB8IDB4RjApO1xuXHRcdFx0c3ltYm9sICs9IGNyZWF0ZUJ5dGUoY29kZVBvaW50LCAxMik7XG5cdFx0XHRzeW1ib2wgKz0gY3JlYXRlQnl0ZShjb2RlUG9pbnQsIDYpO1xuXHRcdH1cblx0XHRzeW1ib2wgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKChjb2RlUG9pbnQgJiAweDNGKSB8IDB4ODApO1xuXHRcdHJldHVybiBzeW1ib2w7XG5cdH1cblxuXHRmdW5jdGlvbiB1dGY4ZW5jb2RlKHN0cmluZywgb3B0cykge1xuXHRcdG9wdHMgPSBvcHRzIHx8IHt9O1xuXHRcdHZhciBzdHJpY3QgPSBmYWxzZSAhPT0gb3B0cy5zdHJpY3Q7XG5cblx0XHR2YXIgY29kZVBvaW50cyA9IHVjczJkZWNvZGUoc3RyaW5nKTtcblx0XHR2YXIgbGVuZ3RoID0gY29kZVBvaW50cy5sZW5ndGg7XG5cdFx0dmFyIGluZGV4ID0gLTE7XG5cdFx0dmFyIGNvZGVQb2ludDtcblx0XHR2YXIgYnl0ZVN0cmluZyA9ICcnO1xuXHRcdHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG5cdFx0XHRjb2RlUG9pbnQgPSBjb2RlUG9pbnRzW2luZGV4XTtcblx0XHRcdGJ5dGVTdHJpbmcgKz0gZW5jb2RlQ29kZVBvaW50KGNvZGVQb2ludCwgc3RyaWN0KTtcblx0XHR9XG5cdFx0cmV0dXJuIGJ5dGVTdHJpbmc7XG5cdH1cblxuXHQvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXHRmdW5jdGlvbiByZWFkQ29udGludWF0aW9uQnl0ZSgpIHtcblx0XHRpZiAoYnl0ZUluZGV4ID49IGJ5dGVDb3VudCkge1xuXHRcdFx0dGhyb3cgRXJyb3IoJ0ludmFsaWQgYnl0ZSBpbmRleCcpO1xuXHRcdH1cblxuXHRcdHZhciBjb250aW51YXRpb25CeXRlID0gYnl0ZUFycmF5W2J5dGVJbmRleF0gJiAweEZGO1xuXHRcdGJ5dGVJbmRleCsrO1xuXG5cdFx0aWYgKChjb250aW51YXRpb25CeXRlICYgMHhDMCkgPT0gMHg4MCkge1xuXHRcdFx0cmV0dXJuIGNvbnRpbnVhdGlvbkJ5dGUgJiAweDNGO1xuXHRcdH1cblxuXHRcdC8vIElmIHdlIGVuZCB1cCBoZXJlLCBpdOKAmXMgbm90IGEgY29udGludWF0aW9uIGJ5dGVcblx0XHR0aHJvdyBFcnJvcignSW52YWxpZCBjb250aW51YXRpb24gYnl0ZScpO1xuXHR9XG5cblx0ZnVuY3Rpb24gZGVjb2RlU3ltYm9sKHN0cmljdCkge1xuXHRcdHZhciBieXRlMTtcblx0XHR2YXIgYnl0ZTI7XG5cdFx0dmFyIGJ5dGUzO1xuXHRcdHZhciBieXRlNDtcblx0XHR2YXIgY29kZVBvaW50O1xuXG5cdFx0aWYgKGJ5dGVJbmRleCA+IGJ5dGVDb3VudCkge1xuXHRcdFx0dGhyb3cgRXJyb3IoJ0ludmFsaWQgYnl0ZSBpbmRleCcpO1xuXHRcdH1cblxuXHRcdGlmIChieXRlSW5kZXggPT0gYnl0ZUNvdW50KSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gUmVhZCBmaXJzdCBieXRlXG5cdFx0Ynl0ZTEgPSBieXRlQXJyYXlbYnl0ZUluZGV4XSAmIDB4RkY7XG5cdFx0Ynl0ZUluZGV4Kys7XG5cblx0XHQvLyAxLWJ5dGUgc2VxdWVuY2UgKG5vIGNvbnRpbnVhdGlvbiBieXRlcylcblx0XHRpZiAoKGJ5dGUxICYgMHg4MCkgPT0gMCkge1xuXHRcdFx0cmV0dXJuIGJ5dGUxO1xuXHRcdH1cblxuXHRcdC8vIDItYnl0ZSBzZXF1ZW5jZVxuXHRcdGlmICgoYnl0ZTEgJiAweEUwKSA9PSAweEMwKSB7XG5cdFx0XHRieXRlMiA9IHJlYWRDb250aW51YXRpb25CeXRlKCk7XG5cdFx0XHRjb2RlUG9pbnQgPSAoKGJ5dGUxICYgMHgxRikgPDwgNikgfCBieXRlMjtcblx0XHRcdGlmIChjb2RlUG9pbnQgPj0gMHg4MCkge1xuXHRcdFx0XHRyZXR1cm4gY29kZVBvaW50O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhyb3cgRXJyb3IoJ0ludmFsaWQgY29udGludWF0aW9uIGJ5dGUnKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyAzLWJ5dGUgc2VxdWVuY2UgKG1heSBpbmNsdWRlIHVucGFpcmVkIHN1cnJvZ2F0ZXMpXG5cdFx0aWYgKChieXRlMSAmIDB4RjApID09IDB4RTApIHtcblx0XHRcdGJ5dGUyID0gcmVhZENvbnRpbnVhdGlvbkJ5dGUoKTtcblx0XHRcdGJ5dGUzID0gcmVhZENvbnRpbnVhdGlvbkJ5dGUoKTtcblx0XHRcdGNvZGVQb2ludCA9ICgoYnl0ZTEgJiAweDBGKSA8PCAxMikgfCAoYnl0ZTIgPDwgNikgfCBieXRlMztcblx0XHRcdGlmIChjb2RlUG9pbnQgPj0gMHgwODAwKSB7XG5cdFx0XHRcdHJldHVybiBjaGVja1NjYWxhclZhbHVlKGNvZGVQb2ludCwgc3RyaWN0KSA/IGNvZGVQb2ludCA6IDB4RkZGRDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRocm93IEVycm9yKCdJbnZhbGlkIGNvbnRpbnVhdGlvbiBieXRlJyk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gNC1ieXRlIHNlcXVlbmNlXG5cdFx0aWYgKChieXRlMSAmIDB4RjgpID09IDB4RjApIHtcblx0XHRcdGJ5dGUyID0gcmVhZENvbnRpbnVhdGlvbkJ5dGUoKTtcblx0XHRcdGJ5dGUzID0gcmVhZENvbnRpbnVhdGlvbkJ5dGUoKTtcblx0XHRcdGJ5dGU0ID0gcmVhZENvbnRpbnVhdGlvbkJ5dGUoKTtcblx0XHRcdGNvZGVQb2ludCA9ICgoYnl0ZTEgJiAweDA3KSA8PCAweDEyKSB8IChieXRlMiA8PCAweDBDKSB8XG5cdFx0XHRcdChieXRlMyA8PCAweDA2KSB8IGJ5dGU0O1xuXHRcdFx0aWYgKGNvZGVQb2ludCA+PSAweDAxMDAwMCAmJiBjb2RlUG9pbnQgPD0gMHgxMEZGRkYpIHtcblx0XHRcdFx0cmV0dXJuIGNvZGVQb2ludDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aHJvdyBFcnJvcignSW52YWxpZCBVVEYtOCBkZXRlY3RlZCcpO1xuXHR9XG5cblx0dmFyIGJ5dGVBcnJheTtcblx0dmFyIGJ5dGVDb3VudDtcblx0dmFyIGJ5dGVJbmRleDtcblx0ZnVuY3Rpb24gdXRmOGRlY29kZShieXRlU3RyaW5nLCBvcHRzKSB7XG5cdFx0b3B0cyA9IG9wdHMgfHwge307XG5cdFx0dmFyIHN0cmljdCA9IGZhbHNlICE9PSBvcHRzLnN0cmljdDtcblxuXHRcdGJ5dGVBcnJheSA9IHVjczJkZWNvZGUoYnl0ZVN0cmluZyk7XG5cdFx0Ynl0ZUNvdW50ID0gYnl0ZUFycmF5Lmxlbmd0aDtcblx0XHRieXRlSW5kZXggPSAwO1xuXHRcdHZhciBjb2RlUG9pbnRzID0gW107XG5cdFx0dmFyIHRtcDtcblx0XHR3aGlsZSAoKHRtcCA9IGRlY29kZVN5bWJvbChzdHJpY3QpKSAhPT0gZmFsc2UpIHtcblx0XHRcdGNvZGVQb2ludHMucHVzaCh0bXApO1xuXHRcdH1cblx0XHRyZXR1cm4gdWNzMmVuY29kZShjb2RlUG9pbnRzKTtcblx0fVxuXG5cdC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cdHZhciB1dGY4ID0ge1xuXHRcdCd2ZXJzaW9uJzogJzIuMS4yJyxcblx0XHQnZW5jb2RlJzogdXRmOGVuY29kZSxcblx0XHQnZGVjb2RlJzogdXRmOGRlY29kZVxuXHR9O1xuXG5cdC8vIFNvbWUgQU1EIGJ1aWxkIG9wdGltaXplcnMsIGxpa2Ugci5qcywgY2hlY2sgZm9yIHNwZWNpZmljIGNvbmRpdGlvbiBwYXR0ZXJuc1xuXHQvLyBsaWtlIHRoZSBmb2xsb3dpbmc6XG5cdGlmIChcblx0XHR0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiZcblx0XHR0eXBlb2YgZGVmaW5lLmFtZCA9PSAnb2JqZWN0JyAmJlxuXHRcdGRlZmluZS5hbWRcblx0KSB7XG5cdFx0ZGVmaW5lKGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHV0Zjg7XG5cdFx0fSk7XG5cdH1cdGVsc2UgaWYgKGZyZWVFeHBvcnRzICYmICFmcmVlRXhwb3J0cy5ub2RlVHlwZSkge1xuXHRcdGlmIChmcmVlTW9kdWxlKSB7IC8vIGluIE5vZGUuanMgb3IgUmluZ29KUyB2MC44LjArXG5cdFx0XHRmcmVlTW9kdWxlLmV4cG9ydHMgPSB1dGY4O1xuXHRcdH0gZWxzZSB7IC8vIGluIE5hcndoYWwgb3IgUmluZ29KUyB2MC43LjAtXG5cdFx0XHR2YXIgb2JqZWN0ID0ge307XG5cdFx0XHR2YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3QuaGFzT3duUHJvcGVydHk7XG5cdFx0XHRmb3IgKHZhciBrZXkgaW4gdXRmOCkge1xuXHRcdFx0XHRoYXNPd25Qcm9wZXJ0eS5jYWxsKHV0ZjgsIGtleSkgJiYgKGZyZWVFeHBvcnRzW2tleV0gPSB1dGY4W2tleV0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIHsgLy8gaW4gUmhpbm8gb3IgYSB3ZWIgYnJvd3NlclxuXHRcdHJvb3QudXRmOCA9IHV0Zjg7XG5cdH1cblxufSh0aGlzKSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGFmdGVyXG5cbmZ1bmN0aW9uIGFmdGVyKGNvdW50LCBjYWxsYmFjaywgZXJyX2NiKSB7XG4gICAgdmFyIGJhaWwgPSBmYWxzZVxuICAgIGVycl9jYiA9IGVycl9jYiB8fCBub29wXG4gICAgcHJveHkuY291bnQgPSBjb3VudFxuXG4gICAgcmV0dXJuIChjb3VudCA9PT0gMCkgPyBjYWxsYmFjaygpIDogcHJveHlcblxuICAgIGZ1bmN0aW9uIHByb3h5KGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChwcm94eS5jb3VudCA8PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FmdGVyIGNhbGxlZCB0b28gbWFueSB0aW1lcycpXG4gICAgICAgIH1cbiAgICAgICAgLS1wcm94eS5jb3VudFxuXG4gICAgICAgIC8vIGFmdGVyIGZpcnN0IGVycm9yLCByZXN0IGFyZSBwYXNzZWQgdG8gZXJyX2NiXG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGJhaWwgPSB0cnVlXG4gICAgICAgICAgICBjYWxsYmFjayhlcnIpXG4gICAgICAgICAgICAvLyBmdXR1cmUgZXJyb3IgY2FsbGJhY2tzIHdpbGwgZ28gdG8gZXJyb3IgaGFuZGxlclxuICAgICAgICAgICAgY2FsbGJhY2sgPSBlcnJfY2JcbiAgICAgICAgfSBlbHNlIGlmIChwcm94eS5jb3VudCA9PT0gMCAmJiAhYmFpbCkge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0KVxuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBub29wKCkge31cbiIsIi8qKlxuICogQW4gYWJzdHJhY3Rpb24gZm9yIHNsaWNpbmcgYW4gYXJyYXlidWZmZXIgZXZlbiB3aGVuXG4gKiBBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2UgaXMgbm90IHN1cHBvcnRlZFxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhcnJheWJ1ZmZlciwgc3RhcnQsIGVuZCkge1xuICB2YXIgYnl0ZXMgPSBhcnJheWJ1ZmZlci5ieXRlTGVuZ3RoO1xuICBzdGFydCA9IHN0YXJ0IHx8IDA7XG4gIGVuZCA9IGVuZCB8fCBieXRlcztcblxuICBpZiAoYXJyYXlidWZmZXIuc2xpY2UpIHsgcmV0dXJuIGFycmF5YnVmZmVyLnNsaWNlKHN0YXJ0LCBlbmQpOyB9XG5cbiAgaWYgKHN0YXJ0IDwgMCkgeyBzdGFydCArPSBieXRlczsgfVxuICBpZiAoZW5kIDwgMCkgeyBlbmQgKz0gYnl0ZXM7IH1cbiAgaWYgKGVuZCA+IGJ5dGVzKSB7IGVuZCA9IGJ5dGVzOyB9XG5cbiAgaWYgKHN0YXJ0ID49IGJ5dGVzIHx8IHN0YXJ0ID49IGVuZCB8fCBieXRlcyA9PT0gMCkge1xuICAgIHJldHVybiBuZXcgQXJyYXlCdWZmZXIoMCk7XG4gIH1cblxuICB2YXIgYWJ2ID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpO1xuICB2YXIgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoZW5kIC0gc3RhcnQpO1xuICBmb3IgKHZhciBpID0gc3RhcnQsIGlpID0gMDsgaSA8IGVuZDsgaSsrLCBpaSsrKSB7XG4gICAgcmVzdWx0W2lpXSA9IGFidltpXTtcbiAgfVxuICByZXR1cm4gcmVzdWx0LmJ1ZmZlcjtcbn07XG4iLCJcbi8qKlxuICogR2V0cyB0aGUga2V5cyBmb3IgYW4gb2JqZWN0LlxuICpcbiAqIEByZXR1cm4ge0FycmF5fSBrZXlzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMgKG9iail7XG4gIHZhciBhcnIgPSBbXTtcbiAgdmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcbiAgICBpZiAoaGFzLmNhbGwob2JqLCBpKSkge1xuICAgICAgYXJyLnB1c2goaSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBhcnI7XG59O1xuIiwiLyoqXG4gKiBNb2R1bGUgcmVxdWlyZW1lbnRzLlxuICovXG5cbnZhciBYTUxIdHRwUmVxdWVzdCA9IHJlcXVpcmUoJ3htbGh0dHByZXF1ZXN0LXNzbCcpO1xudmFyIFBvbGxpbmcgPSByZXF1aXJlKCcuL3BvbGxpbmcnKTtcbnZhciBFbWl0dGVyID0gcmVxdWlyZSgnY29tcG9uZW50LWVtaXR0ZXInKTtcbnZhciBpbmhlcml0ID0gcmVxdWlyZSgnY29tcG9uZW50LWluaGVyaXQnKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2VuZ2luZS5pby1jbGllbnQ6cG9sbGluZy14aHInKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhIUjtcbm1vZHVsZS5leHBvcnRzLlJlcXVlc3QgPSBSZXF1ZXN0O1xuXG4vKipcbiAqIEVtcHR5IGZ1bmN0aW9uXG4gKi9cblxuZnVuY3Rpb24gZW1wdHkgKCkge31cblxuLyoqXG4gKiBYSFIgUG9sbGluZyBjb25zdHJ1Y3Rvci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBYSFIgKG9wdHMpIHtcbiAgUG9sbGluZy5jYWxsKHRoaXMsIG9wdHMpO1xuICB0aGlzLnJlcXVlc3RUaW1lb3V0ID0gb3B0cy5yZXF1ZXN0VGltZW91dDtcbiAgdGhpcy5leHRyYUhlYWRlcnMgPSBvcHRzLmV4dHJhSGVhZGVycztcblxuICBpZiAoZ2xvYmFsLmxvY2F0aW9uKSB7XG4gICAgdmFyIGlzU1NMID0gJ2h0dHBzOicgPT09IGxvY2F0aW9uLnByb3RvY29sO1xuICAgIHZhciBwb3J0ID0gbG9jYXRpb24ucG9ydDtcblxuICAgIC8vIHNvbWUgdXNlciBhZ2VudHMgaGF2ZSBlbXB0eSBgbG9jYXRpb24ucG9ydGBcbiAgICBpZiAoIXBvcnQpIHtcbiAgICAgIHBvcnQgPSBpc1NTTCA/IDQ0MyA6IDgwO1xuICAgIH1cblxuICAgIHRoaXMueGQgPSBvcHRzLmhvc3RuYW1lICE9PSBnbG9iYWwubG9jYXRpb24uaG9zdG5hbWUgfHxcbiAgICAgIHBvcnQgIT09IG9wdHMucG9ydDtcbiAgICB0aGlzLnhzID0gb3B0cy5zZWN1cmUgIT09IGlzU1NMO1xuICB9XG59XG5cbi8qKlxuICogSW5oZXJpdHMgZnJvbSBQb2xsaW5nLlxuICovXG5cbmluaGVyaXQoWEhSLCBQb2xsaW5nKTtcblxuLyoqXG4gKiBYSFIgc3VwcG9ydHMgYmluYXJ5XG4gKi9cblxuWEhSLnByb3RvdHlwZS5zdXBwb3J0c0JpbmFyeSA9IHRydWU7XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1ldGhvZFxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuWEhSLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gKG9wdHMpIHtcbiAgb3B0cyA9IG9wdHMgfHwge307XG4gIG9wdHMudXJpID0gdGhpcy51cmkoKTtcbiAgb3B0cy54ZCA9IHRoaXMueGQ7XG4gIG9wdHMueHMgPSB0aGlzLnhzO1xuICBvcHRzLmFnZW50ID0gdGhpcy5hZ2VudCB8fCBmYWxzZTtcbiAgb3B0cy5zdXBwb3J0c0JpbmFyeSA9IHRoaXMuc3VwcG9ydHNCaW5hcnk7XG4gIG9wdHMuZW5hYmxlc1hEUiA9IHRoaXMuZW5hYmxlc1hEUjtcblxuICAvLyBTU0wgb3B0aW9ucyBmb3IgTm9kZS5qcyBjbGllbnRcbiAgb3B0cy5wZnggPSB0aGlzLnBmeDtcbiAgb3B0cy5rZXkgPSB0aGlzLmtleTtcbiAgb3B0cy5wYXNzcGhyYXNlID0gdGhpcy5wYXNzcGhyYXNlO1xuICBvcHRzLmNlcnQgPSB0aGlzLmNlcnQ7XG4gIG9wdHMuY2EgPSB0aGlzLmNhO1xuICBvcHRzLmNpcGhlcnMgPSB0aGlzLmNpcGhlcnM7XG4gIG9wdHMucmVqZWN0VW5hdXRob3JpemVkID0gdGhpcy5yZWplY3RVbmF1dGhvcml6ZWQ7XG4gIG9wdHMucmVxdWVzdFRpbWVvdXQgPSB0aGlzLnJlcXVlc3RUaW1lb3V0O1xuXG4gIC8vIG90aGVyIG9wdGlvbnMgZm9yIE5vZGUuanMgY2xpZW50XG4gIG9wdHMuZXh0cmFIZWFkZXJzID0gdGhpcy5leHRyYUhlYWRlcnM7XG5cbiAgcmV0dXJuIG5ldyBSZXF1ZXN0KG9wdHMpO1xufTtcblxuLyoqXG4gKiBTZW5kcyBkYXRhLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhIHRvIHNlbmQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsZWQgdXBvbiBmbHVzaC5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblhIUi5wcm90b3R5cGUuZG9Xcml0ZSA9IGZ1bmN0aW9uIChkYXRhLCBmbikge1xuICB2YXIgaXNCaW5hcnkgPSB0eXBlb2YgZGF0YSAhPT0gJ3N0cmluZycgJiYgZGF0YSAhPT0gdW5kZWZpbmVkO1xuICB2YXIgcmVxID0gdGhpcy5yZXF1ZXN0KHsgbWV0aG9kOiAnUE9TVCcsIGRhdGE6IGRhdGEsIGlzQmluYXJ5OiBpc0JpbmFyeSB9KTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICByZXEub24oJ3N1Y2Nlc3MnLCBmbik7XG4gIHJlcS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgc2VsZi5vbkVycm9yKCd4aHIgcG9zdCBlcnJvcicsIGVycik7XG4gIH0pO1xuICB0aGlzLnNlbmRYaHIgPSByZXE7XG59O1xuXG4vKipcbiAqIFN0YXJ0cyBhIHBvbGwgY3ljbGUuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuWEhSLnByb3RvdHlwZS5kb1BvbGwgPSBmdW5jdGlvbiAoKSB7XG4gIGRlYnVnKCd4aHIgcG9sbCcpO1xuICB2YXIgcmVxID0gdGhpcy5yZXF1ZXN0KCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgcmVxLm9uKCdkYXRhJywgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBzZWxmLm9uRGF0YShkYXRhKTtcbiAgfSk7XG4gIHJlcS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgc2VsZi5vbkVycm9yKCd4aHIgcG9sbCBlcnJvcicsIGVycik7XG4gIH0pO1xuICB0aGlzLnBvbGxYaHIgPSByZXE7XG59O1xuXG4vKipcbiAqIFJlcXVlc3QgY29uc3RydWN0b3JcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBSZXF1ZXN0IChvcHRzKSB7XG4gIHRoaXMubWV0aG9kID0gb3B0cy5tZXRob2QgfHwgJ0dFVCc7XG4gIHRoaXMudXJpID0gb3B0cy51cmk7XG4gIHRoaXMueGQgPSAhIW9wdHMueGQ7XG4gIHRoaXMueHMgPSAhIW9wdHMueHM7XG4gIHRoaXMuYXN5bmMgPSBmYWxzZSAhPT0gb3B0cy5hc3luYztcbiAgdGhpcy5kYXRhID0gdW5kZWZpbmVkICE9PSBvcHRzLmRhdGEgPyBvcHRzLmRhdGEgOiBudWxsO1xuICB0aGlzLmFnZW50ID0gb3B0cy5hZ2VudDtcbiAgdGhpcy5pc0JpbmFyeSA9IG9wdHMuaXNCaW5hcnk7XG4gIHRoaXMuc3VwcG9ydHNCaW5hcnkgPSBvcHRzLnN1cHBvcnRzQmluYXJ5O1xuICB0aGlzLmVuYWJsZXNYRFIgPSBvcHRzLmVuYWJsZXNYRFI7XG4gIHRoaXMucmVxdWVzdFRpbWVvdXQgPSBvcHRzLnJlcXVlc3RUaW1lb3V0O1xuXG4gIC8vIFNTTCBvcHRpb25zIGZvciBOb2RlLmpzIGNsaWVudFxuICB0aGlzLnBmeCA9IG9wdHMucGZ4O1xuICB0aGlzLmtleSA9IG9wdHMua2V5O1xuICB0aGlzLnBhc3NwaHJhc2UgPSBvcHRzLnBhc3NwaHJhc2U7XG4gIHRoaXMuY2VydCA9IG9wdHMuY2VydDtcbiAgdGhpcy5jYSA9IG9wdHMuY2E7XG4gIHRoaXMuY2lwaGVycyA9IG9wdHMuY2lwaGVycztcbiAgdGhpcy5yZWplY3RVbmF1dGhvcml6ZWQgPSBvcHRzLnJlamVjdFVuYXV0aG9yaXplZDtcblxuICAvLyBvdGhlciBvcHRpb25zIGZvciBOb2RlLmpzIGNsaWVudFxuICB0aGlzLmV4dHJhSGVhZGVycyA9IG9wdHMuZXh0cmFIZWFkZXJzO1xuXG4gIHRoaXMuY3JlYXRlKCk7XG59XG5cbi8qKlxuICogTWl4IGluIGBFbWl0dGVyYC5cbiAqL1xuXG5FbWl0dGVyKFJlcXVlc3QucHJvdG90eXBlKTtcblxuLyoqXG4gKiBDcmVhdGVzIHRoZSBYSFIgb2JqZWN0IGFuZCBzZW5kcyB0aGUgcmVxdWVzdC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBvcHRzID0geyBhZ2VudDogdGhpcy5hZ2VudCwgeGRvbWFpbjogdGhpcy54ZCwgeHNjaGVtZTogdGhpcy54cywgZW5hYmxlc1hEUjogdGhpcy5lbmFibGVzWERSIH07XG5cbiAgLy8gU1NMIG9wdGlvbnMgZm9yIE5vZGUuanMgY2xpZW50XG4gIG9wdHMucGZ4ID0gdGhpcy5wZng7XG4gIG9wdHMua2V5ID0gdGhpcy5rZXk7XG4gIG9wdHMucGFzc3BocmFzZSA9IHRoaXMucGFzc3BocmFzZTtcbiAgb3B0cy5jZXJ0ID0gdGhpcy5jZXJ0O1xuICBvcHRzLmNhID0gdGhpcy5jYTtcbiAgb3B0cy5jaXBoZXJzID0gdGhpcy5jaXBoZXJzO1xuICBvcHRzLnJlamVjdFVuYXV0aG9yaXplZCA9IHRoaXMucmVqZWN0VW5hdXRob3JpemVkO1xuXG4gIHZhciB4aHIgPSB0aGlzLnhociA9IG5ldyBYTUxIdHRwUmVxdWVzdChvcHRzKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gIHRyeSB7XG4gICAgZGVidWcoJ3hociBvcGVuICVzOiAlcycsIHRoaXMubWV0aG9kLCB0aGlzLnVyaSk7XG4gICAgeGhyLm9wZW4odGhpcy5tZXRob2QsIHRoaXMudXJpLCB0aGlzLmFzeW5jKTtcbiAgICB0cnkge1xuICAgICAgaWYgKHRoaXMuZXh0cmFIZWFkZXJzKSB7XG4gICAgICAgIHhoci5zZXREaXNhYmxlSGVhZGVyQ2hlY2sgJiYgeGhyLnNldERpc2FibGVIZWFkZXJDaGVjayh0cnVlKTtcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLmV4dHJhSGVhZGVycykge1xuICAgICAgICAgIGlmICh0aGlzLmV4dHJhSGVhZGVycy5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoaSwgdGhpcy5leHRyYUhlYWRlcnNbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHt9XG5cbiAgICBpZiAoJ1BPU1QnID09PSB0aGlzLm1ldGhvZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKHRoaXMuaXNCaW5hcnkpIHtcbiAgICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdDb250ZW50LXR5cGUnLCAndGV4dC9wbGFpbjtjaGFyc2V0PVVURi04Jyk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdBY2NlcHQnLCAnKi8qJyk7XG4gICAgfSBjYXRjaCAoZSkge31cblxuICAgIC8vIGllNiBjaGVja1xuICAgIGlmICgnd2l0aENyZWRlbnRpYWxzJyBpbiB4aHIpIHtcbiAgICAgIHhoci53aXRoQ3JlZGVudGlhbHMgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJlcXVlc3RUaW1lb3V0KSB7XG4gICAgICB4aHIudGltZW91dCA9IHRoaXMucmVxdWVzdFRpbWVvdXQ7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaGFzWERSKCkpIHtcbiAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYub25Mb2FkKCk7XG4gICAgICB9O1xuICAgICAgeGhyLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYub25FcnJvcih4aHIucmVzcG9uc2VUZXh0KTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gMikge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgY29udGVudFR5cGUgPSB4aHIuZ2V0UmVzcG9uc2VIZWFkZXIoJ0NvbnRlbnQtVHlwZScpO1xuICAgICAgICAgICAgaWYgKHNlbGYuc3VwcG9ydHNCaW5hcnkgJiYgY29udGVudFR5cGUgPT09ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nKSB7XG4gICAgICAgICAgICAgIHhoci5yZXNwb25zZVR5cGUgPSAnYXJyYXlidWZmZXInO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKDQgIT09IHhoci5yZWFkeVN0YXRlKSByZXR1cm47XG4gICAgICAgIGlmICgyMDAgPT09IHhoci5zdGF0dXMgfHwgMTIyMyA9PT0geGhyLnN0YXR1cykge1xuICAgICAgICAgIHNlbGYub25Mb2FkKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gbWFrZSBzdXJlIHRoZSBgZXJyb3JgIGV2ZW50IGhhbmRsZXIgdGhhdCdzIHVzZXItc2V0XG4gICAgICAgICAgLy8gZG9lcyBub3QgdGhyb3cgaW4gdGhlIHNhbWUgdGljayBhbmQgZ2V0cyBjYXVnaHQgaGVyZVxuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2VsZi5vbkVycm9yKHhoci5zdGF0dXMpO1xuICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIGRlYnVnKCd4aHIgZGF0YSAlcycsIHRoaXMuZGF0YSk7XG4gICAgeGhyLnNlbmQodGhpcy5kYXRhKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIE5lZWQgdG8gZGVmZXIgc2luY2UgLmNyZWF0ZSgpIGlzIGNhbGxlZCBkaXJlY3RseSBmaHJvbSB0aGUgY29uc3RydWN0b3JcbiAgICAvLyBhbmQgdGh1cyB0aGUgJ2Vycm9yJyBldmVudCBjYW4gb25seSBiZSBvbmx5IGJvdW5kICphZnRlciogdGhpcyBleGNlcHRpb25cbiAgICAvLyBvY2N1cnMuICBUaGVyZWZvcmUsIGFsc28sIHdlIGNhbm5vdCB0aHJvdyBoZXJlIGF0IGFsbC5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIHNlbGYub25FcnJvcihlKTtcbiAgICB9LCAwKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoZ2xvYmFsLmRvY3VtZW50KSB7XG4gICAgdGhpcy5pbmRleCA9IFJlcXVlc3QucmVxdWVzdHNDb3VudCsrO1xuICAgIFJlcXVlc3QucmVxdWVzdHNbdGhpcy5pbmRleF0gPSB0aGlzO1xuICB9XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIHN1Y2Nlc3NmdWwgcmVzcG9uc2UuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUub25TdWNjZXNzID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLmVtaXQoJ3N1Y2Nlc3MnKTtcbiAgdGhpcy5jbGVhbnVwKCk7XG59O1xuXG4vKipcbiAqIENhbGxlZCBpZiB3ZSBoYXZlIGRhdGEuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUub25EYXRhID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgdGhpcy5lbWl0KCdkYXRhJywgZGF0YSk7XG4gIHRoaXMub25TdWNjZXNzKCk7XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIGVycm9yLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3QucHJvdG90eXBlLm9uRXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICB0aGlzLmNsZWFudXAodHJ1ZSk7XG59O1xuXG4vKipcbiAqIENsZWFucyB1cCBob3VzZS5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5jbGVhbnVwID0gZnVuY3Rpb24gKGZyb21FcnJvcikge1xuICBpZiAoJ3VuZGVmaW5lZCcgPT09IHR5cGVvZiB0aGlzLnhociB8fCBudWxsID09PSB0aGlzLnhocikge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyB4bWxodHRwcmVxdWVzdFxuICBpZiAodGhpcy5oYXNYRFIoKSkge1xuICAgIHRoaXMueGhyLm9ubG9hZCA9IHRoaXMueGhyLm9uZXJyb3IgPSBlbXB0eTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBlbXB0eTtcbiAgfVxuXG4gIGlmIChmcm9tRXJyb3IpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy54aHIuYWJvcnQoKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG5cbiAgaWYgKGdsb2JhbC5kb2N1bWVudCkge1xuICAgIGRlbGV0ZSBSZXF1ZXN0LnJlcXVlc3RzW3RoaXMuaW5kZXhdO1xuICB9XG5cbiAgdGhpcy54aHIgPSBudWxsO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiBsb2FkLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3QucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGRhdGE7XG4gIHRyeSB7XG4gICAgdmFyIGNvbnRlbnRUeXBlO1xuICAgIHRyeSB7XG4gICAgICBjb250ZW50VHlwZSA9IHRoaXMueGhyLmdldFJlc3BvbnNlSGVhZGVyKCdDb250ZW50LVR5cGUnKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICAgIGlmIChjb250ZW50VHlwZSA9PT0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpIHtcbiAgICAgIGRhdGEgPSB0aGlzLnhoci5yZXNwb25zZSB8fCB0aGlzLnhoci5yZXNwb25zZVRleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEgPSB0aGlzLnhoci5yZXNwb25zZVRleHQ7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgdGhpcy5vbkVycm9yKGUpO1xuICB9XG4gIGlmIChudWxsICE9IGRhdGEpIHtcbiAgICB0aGlzLm9uRGF0YShkYXRhKTtcbiAgfVxufTtcblxuLyoqXG4gKiBDaGVjayBpZiBpdCBoYXMgWERvbWFpblJlcXVlc3QuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUuaGFzWERSID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBnbG9iYWwuWERvbWFpblJlcXVlc3QgJiYgIXRoaXMueHMgJiYgdGhpcy5lbmFibGVzWERSO1xufTtcblxuLyoqXG4gKiBBYm9ydHMgdGhlIHJlcXVlc3QuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5jbGVhbnVwKCk7XG59O1xuXG4vKipcbiAqIEFib3J0cyBwZW5kaW5nIHJlcXVlc3RzIHdoZW4gdW5sb2FkaW5nIHRoZSB3aW5kb3cuIFRoaXMgaXMgbmVlZGVkIHRvIHByZXZlbnRcbiAqIG1lbW9yeSBsZWFrcyAoZS5nLiB3aGVuIHVzaW5nIElFKSBhbmQgdG8gZW5zdXJlIHRoYXQgbm8gc3B1cmlvdXMgZXJyb3IgaXNcbiAqIGVtaXR0ZWQuXG4gKi9cblxuUmVxdWVzdC5yZXF1ZXN0c0NvdW50ID0gMDtcblJlcXVlc3QucmVxdWVzdHMgPSB7fTtcblxuaWYgKGdsb2JhbC5kb2N1bWVudCkge1xuICBpZiAoZ2xvYmFsLmF0dGFjaEV2ZW50KSB7XG4gICAgZ2xvYmFsLmF0dGFjaEV2ZW50KCdvbnVubG9hZCcsIHVubG9hZEhhbmRsZXIpO1xuICB9IGVsc2UgaWYgKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIHVubG9hZEhhbmRsZXIsIGZhbHNlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1bmxvYWRIYW5kbGVyICgpIHtcbiAgZm9yICh2YXIgaSBpbiBSZXF1ZXN0LnJlcXVlc3RzKSB7XG4gICAgaWYgKFJlcXVlc3QucmVxdWVzdHMuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgIFJlcXVlc3QucmVxdWVzdHNbaV0uYWJvcnQoKTtcbiAgICB9XG4gIH1cbn1cbiIsIlxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqXG4gKiBMb2dpYyBib3Jyb3dlZCBmcm9tIE1vZGVybml6cjpcbiAqXG4gKiAgIC0gaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2NvcnMuanNcbiAqL1xuXG50cnkge1xuICBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAnd2l0aENyZWRlbnRpYWxzJyBpbiBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbn0gY2F0Y2ggKGVycikge1xuICAvLyBpZiBYTUxIdHRwIHN1cHBvcnQgaXMgZGlzYWJsZWQgaW4gSUUgdGhlbiBpdCB3aWxsIHRocm93XG4gIC8vIHdoZW4gdHJ5aW5nIHRvIGNyZWF0ZVxuICBtb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xufVxuIiwiLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciB0cmFuc3BvcnRzID0gcmVxdWlyZSgnLi90cmFuc3BvcnRzL2luZGV4Jyk7XG52YXIgRW1pdHRlciA9IHJlcXVpcmUoJ2NvbXBvbmVudC1lbWl0dGVyJyk7XG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdlbmdpbmUuaW8tY2xpZW50OnNvY2tldCcpO1xudmFyIGluZGV4ID0gcmVxdWlyZSgnaW5kZXhvZicpO1xudmFyIHBhcnNlciA9IHJlcXVpcmUoJ2VuZ2luZS5pby1wYXJzZXInKTtcbnZhciBwYXJzZXVyaSA9IHJlcXVpcmUoJ3BhcnNldXJpJyk7XG52YXIgcGFyc2VxcyA9IHJlcXVpcmUoJ3BhcnNlcXMnKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNvY2tldDtcblxuLyoqXG4gKiBTb2NrZXQgY29uc3RydWN0b3IuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8T2JqZWN0fSB1cmkgb3Igb3B0aW9uc1xuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gU29ja2V0ICh1cmksIG9wdHMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFNvY2tldCkpIHJldHVybiBuZXcgU29ja2V0KHVyaSwgb3B0cyk7XG5cbiAgb3B0cyA9IG9wdHMgfHwge307XG5cbiAgaWYgKHVyaSAmJiAnb2JqZWN0JyA9PT0gdHlwZW9mIHVyaSkge1xuICAgIG9wdHMgPSB1cmk7XG4gICAgdXJpID0gbnVsbDtcbiAgfVxuXG4gIGlmICh1cmkpIHtcbiAgICB1cmkgPSBwYXJzZXVyaSh1cmkpO1xuICAgIG9wdHMuaG9zdG5hbWUgPSB1cmkuaG9zdDtcbiAgICBvcHRzLnNlY3VyZSA9IHVyaS5wcm90b2NvbCA9PT0gJ2h0dHBzJyB8fCB1cmkucHJvdG9jb2wgPT09ICd3c3MnO1xuICAgIG9wdHMucG9ydCA9IHVyaS5wb3J0O1xuICAgIGlmICh1cmkucXVlcnkpIG9wdHMucXVlcnkgPSB1cmkucXVlcnk7XG4gIH0gZWxzZSBpZiAob3B0cy5ob3N0KSB7XG4gICAgb3B0cy5ob3N0bmFtZSA9IHBhcnNldXJpKG9wdHMuaG9zdCkuaG9zdDtcbiAgfVxuXG4gIHRoaXMuc2VjdXJlID0gbnVsbCAhPSBvcHRzLnNlY3VyZSA/IG9wdHMuc2VjdXJlXG4gICAgOiAoZ2xvYmFsLmxvY2F0aW9uICYmICdodHRwczonID09PSBsb2NhdGlvbi5wcm90b2NvbCk7XG5cbiAgaWYgKG9wdHMuaG9zdG5hbWUgJiYgIW9wdHMucG9ydCkge1xuICAgIC8vIGlmIG5vIHBvcnQgaXMgc3BlY2lmaWVkIG1hbnVhbGx5LCB1c2UgdGhlIHByb3RvY29sIGRlZmF1bHRcbiAgICBvcHRzLnBvcnQgPSB0aGlzLnNlY3VyZSA/ICc0NDMnIDogJzgwJztcbiAgfVxuXG4gIHRoaXMuYWdlbnQgPSBvcHRzLmFnZW50IHx8IGZhbHNlO1xuICB0aGlzLmhvc3RuYW1lID0gb3B0cy5ob3N0bmFtZSB8fFxuICAgIChnbG9iYWwubG9jYXRpb24gPyBsb2NhdGlvbi5ob3N0bmFtZSA6ICdsb2NhbGhvc3QnKTtcbiAgdGhpcy5wb3J0ID0gb3B0cy5wb3J0IHx8IChnbG9iYWwubG9jYXRpb24gJiYgbG9jYXRpb24ucG9ydFxuICAgICAgPyBsb2NhdGlvbi5wb3J0XG4gICAgICA6ICh0aGlzLnNlY3VyZSA/IDQ0MyA6IDgwKSk7XG4gIHRoaXMucXVlcnkgPSBvcHRzLnF1ZXJ5IHx8IHt9O1xuICBpZiAoJ3N0cmluZycgPT09IHR5cGVvZiB0aGlzLnF1ZXJ5KSB0aGlzLnF1ZXJ5ID0gcGFyc2Vxcy5kZWNvZGUodGhpcy5xdWVyeSk7XG4gIHRoaXMudXBncmFkZSA9IGZhbHNlICE9PSBvcHRzLnVwZ3JhZGU7XG4gIHRoaXMucGF0aCA9IChvcHRzLnBhdGggfHwgJy9lbmdpbmUuaW8nKS5yZXBsYWNlKC9cXC8kLywgJycpICsgJy8nO1xuICB0aGlzLmZvcmNlSlNPTlAgPSAhIW9wdHMuZm9yY2VKU09OUDtcbiAgdGhpcy5qc29ucCA9IGZhbHNlICE9PSBvcHRzLmpzb25wO1xuICB0aGlzLmZvcmNlQmFzZTY0ID0gISFvcHRzLmZvcmNlQmFzZTY0O1xuICB0aGlzLmVuYWJsZXNYRFIgPSAhIW9wdHMuZW5hYmxlc1hEUjtcbiAgdGhpcy50aW1lc3RhbXBQYXJhbSA9IG9wdHMudGltZXN0YW1wUGFyYW0gfHwgJ3QnO1xuICB0aGlzLnRpbWVzdGFtcFJlcXVlc3RzID0gb3B0cy50aW1lc3RhbXBSZXF1ZXN0cztcbiAgdGhpcy50cmFuc3BvcnRzID0gb3B0cy50cmFuc3BvcnRzIHx8IFsncG9sbGluZycsICd3ZWJzb2NrZXQnXTtcbiAgdGhpcy50cmFuc3BvcnRPcHRpb25zID0gb3B0cy50cmFuc3BvcnRPcHRpb25zIHx8IHt9O1xuICB0aGlzLnJlYWR5U3RhdGUgPSAnJztcbiAgdGhpcy53cml0ZUJ1ZmZlciA9IFtdO1xuICB0aGlzLnByZXZCdWZmZXJMZW4gPSAwO1xuICB0aGlzLnBvbGljeVBvcnQgPSBvcHRzLnBvbGljeVBvcnQgfHwgODQzO1xuICB0aGlzLnJlbWVtYmVyVXBncmFkZSA9IG9wdHMucmVtZW1iZXJVcGdyYWRlIHx8IGZhbHNlO1xuICB0aGlzLmJpbmFyeVR5cGUgPSBudWxsO1xuICB0aGlzLm9ubHlCaW5hcnlVcGdyYWRlcyA9IG9wdHMub25seUJpbmFyeVVwZ3JhZGVzO1xuICB0aGlzLnBlck1lc3NhZ2VEZWZsYXRlID0gZmFsc2UgIT09IG9wdHMucGVyTWVzc2FnZURlZmxhdGUgPyAob3B0cy5wZXJNZXNzYWdlRGVmbGF0ZSB8fCB7fSkgOiBmYWxzZTtcblxuICBpZiAodHJ1ZSA9PT0gdGhpcy5wZXJNZXNzYWdlRGVmbGF0ZSkgdGhpcy5wZXJNZXNzYWdlRGVmbGF0ZSA9IHt9O1xuICBpZiAodGhpcy5wZXJNZXNzYWdlRGVmbGF0ZSAmJiBudWxsID09IHRoaXMucGVyTWVzc2FnZURlZmxhdGUudGhyZXNob2xkKSB7XG4gICAgdGhpcy5wZXJNZXNzYWdlRGVmbGF0ZS50aHJlc2hvbGQgPSAxMDI0O1xuICB9XG5cbiAgLy8gU1NMIG9wdGlvbnMgZm9yIE5vZGUuanMgY2xpZW50XG4gIHRoaXMucGZ4ID0gb3B0cy5wZnggfHwgbnVsbDtcbiAgdGhpcy5rZXkgPSBvcHRzLmtleSB8fCBudWxsO1xuICB0aGlzLnBhc3NwaHJhc2UgPSBvcHRzLnBhc3NwaHJhc2UgfHwgbnVsbDtcbiAgdGhpcy5jZXJ0ID0gb3B0cy5jZXJ0IHx8IG51bGw7XG4gIHRoaXMuY2EgPSBvcHRzLmNhIHx8IG51bGw7XG4gIHRoaXMuY2lwaGVycyA9IG9wdHMuY2lwaGVycyB8fCBudWxsO1xuICB0aGlzLnJlamVjdFVuYXV0aG9yaXplZCA9IG9wdHMucmVqZWN0VW5hdXRob3JpemVkID09PSB1bmRlZmluZWQgPyB0cnVlIDogb3B0cy5yZWplY3RVbmF1dGhvcml6ZWQ7XG4gIHRoaXMuZm9yY2VOb2RlID0gISFvcHRzLmZvcmNlTm9kZTtcblxuICAvLyBvdGhlciBvcHRpb25zIGZvciBOb2RlLmpzIGNsaWVudFxuICB2YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT09ICdvYmplY3QnICYmIGdsb2JhbDtcbiAgaWYgKGZyZWVHbG9iYWwuZ2xvYmFsID09PSBmcmVlR2xvYmFsKSB7XG4gICAgaWYgKG9wdHMuZXh0cmFIZWFkZXJzICYmIE9iamVjdC5rZXlzKG9wdHMuZXh0cmFIZWFkZXJzKS5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmV4dHJhSGVhZGVycyA9IG9wdHMuZXh0cmFIZWFkZXJzO1xuICAgIH1cblxuICAgIGlmIChvcHRzLmxvY2FsQWRkcmVzcykge1xuICAgICAgdGhpcy5sb2NhbEFkZHJlc3MgPSBvcHRzLmxvY2FsQWRkcmVzcztcbiAgICB9XG4gIH1cblxuICAvLyBzZXQgb24gaGFuZHNoYWtlXG4gIHRoaXMuaWQgPSBudWxsO1xuICB0aGlzLnVwZ3JhZGVzID0gbnVsbDtcbiAgdGhpcy5waW5nSW50ZXJ2YWwgPSBudWxsO1xuICB0aGlzLnBpbmdUaW1lb3V0ID0gbnVsbDtcblxuICAvLyBzZXQgb24gaGVhcnRiZWF0XG4gIHRoaXMucGluZ0ludGVydmFsVGltZXIgPSBudWxsO1xuICB0aGlzLnBpbmdUaW1lb3V0VGltZXIgPSBudWxsO1xuXG4gIHRoaXMub3BlbigpO1xufVxuXG5Tb2NrZXQucHJpb3JXZWJzb2NrZXRTdWNjZXNzID0gZmFsc2U7XG5cbi8qKlxuICogTWl4IGluIGBFbWl0dGVyYC5cbiAqL1xuXG5FbWl0dGVyKFNvY2tldC5wcm90b3R5cGUpO1xuXG4vKipcbiAqIFByb3RvY29sIHZlcnNpb24uXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5Tb2NrZXQucHJvdG9jb2wgPSBwYXJzZXIucHJvdG9jb2w7IC8vIHRoaXMgaXMgYW4gaW50XG5cbi8qKlxuICogRXhwb3NlIGRlcHMgZm9yIGxlZ2FjeSBjb21wYXRpYmlsaXR5XG4gKiBhbmQgc3RhbmRhbG9uZSBicm93c2VyIGFjY2Vzcy5cbiAqL1xuXG5Tb2NrZXQuU29ja2V0ID0gU29ja2V0O1xuU29ja2V0LlRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0Jyk7XG5Tb2NrZXQudHJhbnNwb3J0cyA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0cy9pbmRleCcpO1xuU29ja2V0LnBhcnNlciA9IHJlcXVpcmUoJ2VuZ2luZS5pby1wYXJzZXInKTtcblxuLyoqXG4gKiBDcmVhdGVzIHRyYW5zcG9ydCBvZiB0aGUgZ2l2ZW4gdHlwZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHJhbnNwb3J0IG5hbWVcbiAqIEByZXR1cm4ge1RyYW5zcG9ydH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNvY2tldC5wcm90b3R5cGUuY3JlYXRlVHJhbnNwb3J0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgZGVidWcoJ2NyZWF0aW5nIHRyYW5zcG9ydCBcIiVzXCInLCBuYW1lKTtcbiAgdmFyIHF1ZXJ5ID0gY2xvbmUodGhpcy5xdWVyeSk7XG5cbiAgLy8gYXBwZW5kIGVuZ2luZS5pbyBwcm90b2NvbCBpZGVudGlmaWVyXG4gIHF1ZXJ5LkVJTyA9IHBhcnNlci5wcm90b2NvbDtcblxuICAvLyB0cmFuc3BvcnQgbmFtZVxuICBxdWVyeS50cmFuc3BvcnQgPSBuYW1lO1xuXG4gIC8vIHBlci10cmFuc3BvcnQgb3B0aW9uc1xuICB2YXIgb3B0aW9ucyA9IHRoaXMudHJhbnNwb3J0T3B0aW9uc1tuYW1lXSB8fCB7fTtcblxuICAvLyBzZXNzaW9uIGlkIGlmIHdlIGFscmVhZHkgaGF2ZSBvbmVcbiAgaWYgKHRoaXMuaWQpIHF1ZXJ5LnNpZCA9IHRoaXMuaWQ7XG5cbiAgdmFyIHRyYW5zcG9ydCA9IG5ldyB0cmFuc3BvcnRzW25hbWVdKHtcbiAgICBxdWVyeTogcXVlcnksXG4gICAgc29ja2V0OiB0aGlzLFxuICAgIGFnZW50OiBvcHRpb25zLmFnZW50IHx8IHRoaXMuYWdlbnQsXG4gICAgaG9zdG5hbWU6IG9wdGlvbnMuaG9zdG5hbWUgfHwgdGhpcy5ob3N0bmFtZSxcbiAgICBwb3J0OiBvcHRpb25zLnBvcnQgfHwgdGhpcy5wb3J0LFxuICAgIHNlY3VyZTogb3B0aW9ucy5zZWN1cmUgfHwgdGhpcy5zZWN1cmUsXG4gICAgcGF0aDogb3B0aW9ucy5wYXRoIHx8IHRoaXMucGF0aCxcbiAgICBmb3JjZUpTT05QOiBvcHRpb25zLmZvcmNlSlNPTlAgfHwgdGhpcy5mb3JjZUpTT05QLFxuICAgIGpzb25wOiBvcHRpb25zLmpzb25wIHx8IHRoaXMuanNvbnAsXG4gICAgZm9yY2VCYXNlNjQ6IG9wdGlvbnMuZm9yY2VCYXNlNjQgfHwgdGhpcy5mb3JjZUJhc2U2NCxcbiAgICBlbmFibGVzWERSOiBvcHRpb25zLmVuYWJsZXNYRFIgfHwgdGhpcy5lbmFibGVzWERSLFxuICAgIHRpbWVzdGFtcFJlcXVlc3RzOiBvcHRpb25zLnRpbWVzdGFtcFJlcXVlc3RzIHx8IHRoaXMudGltZXN0YW1wUmVxdWVzdHMsXG4gICAgdGltZXN0YW1wUGFyYW06IG9wdGlvbnMudGltZXN0YW1wUGFyYW0gfHwgdGhpcy50aW1lc3RhbXBQYXJhbSxcbiAgICBwb2xpY3lQb3J0OiBvcHRpb25zLnBvbGljeVBvcnQgfHwgdGhpcy5wb2xpY3lQb3J0LFxuICAgIHBmeDogb3B0aW9ucy5wZnggfHwgdGhpcy5wZngsXG4gICAga2V5OiBvcHRpb25zLmtleSB8fCB0aGlzLmtleSxcbiAgICBwYXNzcGhyYXNlOiBvcHRpb25zLnBhc3NwaHJhc2UgfHwgdGhpcy5wYXNzcGhyYXNlLFxuICAgIGNlcnQ6IG9wdGlvbnMuY2VydCB8fCB0aGlzLmNlcnQsXG4gICAgY2E6IG9wdGlvbnMuY2EgfHwgdGhpcy5jYSxcbiAgICBjaXBoZXJzOiBvcHRpb25zLmNpcGhlcnMgfHwgdGhpcy5jaXBoZXJzLFxuICAgIHJlamVjdFVuYXV0aG9yaXplZDogb3B0aW9ucy5yZWplY3RVbmF1dGhvcml6ZWQgfHwgdGhpcy5yZWplY3RVbmF1dGhvcml6ZWQsXG4gICAgcGVyTWVzc2FnZURlZmxhdGU6IG9wdGlvbnMucGVyTWVzc2FnZURlZmxhdGUgfHwgdGhpcy5wZXJNZXNzYWdlRGVmbGF0ZSxcbiAgICBleHRyYUhlYWRlcnM6IG9wdGlvbnMuZXh0cmFIZWFkZXJzIHx8IHRoaXMuZXh0cmFIZWFkZXJzLFxuICAgIGZvcmNlTm9kZTogb3B0aW9ucy5mb3JjZU5vZGUgfHwgdGhpcy5mb3JjZU5vZGUsXG4gICAgbG9jYWxBZGRyZXNzOiBvcHRpb25zLmxvY2FsQWRkcmVzcyB8fCB0aGlzLmxvY2FsQWRkcmVzcyxcbiAgICByZXF1ZXN0VGltZW91dDogb3B0aW9ucy5yZXF1ZXN0VGltZW91dCB8fCB0aGlzLnJlcXVlc3RUaW1lb3V0LFxuICAgIHByb3RvY29sczogb3B0aW9ucy5wcm90b2NvbHMgfHwgdm9pZCAoMClcbiAgfSk7XG5cbiAgcmV0dXJuIHRyYW5zcG9ydDtcbn07XG5cbmZ1bmN0aW9uIGNsb25lIChvYmopIHtcbiAgdmFyIG8gPSB7fTtcbiAgZm9yICh2YXIgaSBpbiBvYmopIHtcbiAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICBvW2ldID0gb2JqW2ldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbztcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplcyB0cmFuc3BvcnQgdG8gdXNlIGFuZCBzdGFydHMgcHJvYmUuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblNvY2tldC5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRyYW5zcG9ydDtcbiAgaWYgKHRoaXMucmVtZW1iZXJVcGdyYWRlICYmIFNvY2tldC5wcmlvcldlYnNvY2tldFN1Y2Nlc3MgJiYgdGhpcy50cmFuc3BvcnRzLmluZGV4T2YoJ3dlYnNvY2tldCcpICE9PSAtMSkge1xuICAgIHRyYW5zcG9ydCA9ICd3ZWJzb2NrZXQnO1xuICB9IGVsc2UgaWYgKDAgPT09IHRoaXMudHJhbnNwb3J0cy5sZW5ndGgpIHtcbiAgICAvLyBFbWl0IGVycm9yIG9uIG5leHQgdGljayBzbyBpdCBjYW4gYmUgbGlzdGVuZWQgdG9cbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBzZWxmLmVtaXQoJ2Vycm9yJywgJ05vIHRyYW5zcG9ydHMgYXZhaWxhYmxlJyk7XG4gICAgfSwgMCk7XG4gICAgcmV0dXJuO1xuICB9IGVsc2Uge1xuICAgIHRyYW5zcG9ydCA9IHRoaXMudHJhbnNwb3J0c1swXTtcbiAgfVxuICB0aGlzLnJlYWR5U3RhdGUgPSAnb3BlbmluZyc7XG5cbiAgLy8gUmV0cnkgd2l0aCB0aGUgbmV4dCB0cmFuc3BvcnQgaWYgdGhlIHRyYW5zcG9ydCBpcyBkaXNhYmxlZCAoanNvbnA6IGZhbHNlKVxuICB0cnkge1xuICAgIHRyYW5zcG9ydCA9IHRoaXMuY3JlYXRlVHJhbnNwb3J0KHRyYW5zcG9ydCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0aGlzLnRyYW5zcG9ydHMuc2hpZnQoKTtcbiAgICB0aGlzLm9wZW4oKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB0cmFuc3BvcnQub3BlbigpO1xuICB0aGlzLnNldFRyYW5zcG9ydCh0cmFuc3BvcnQpO1xufTtcblxuLyoqXG4gKiBTZXRzIHRoZSBjdXJyZW50IHRyYW5zcG9ydC4gRGlzYWJsZXMgdGhlIGV4aXN0aW5nIG9uZSAoaWYgYW55KS5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLnNldFRyYW5zcG9ydCA9IGZ1bmN0aW9uICh0cmFuc3BvcnQpIHtcbiAgZGVidWcoJ3NldHRpbmcgdHJhbnNwb3J0ICVzJywgdHJhbnNwb3J0Lm5hbWUpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgaWYgKHRoaXMudHJhbnNwb3J0KSB7XG4gICAgZGVidWcoJ2NsZWFyaW5nIGV4aXN0aW5nIHRyYW5zcG9ydCAlcycsIHRoaXMudHJhbnNwb3J0Lm5hbWUpO1xuICAgIHRoaXMudHJhbnNwb3J0LnJlbW92ZUFsbExpc3RlbmVycygpO1xuICB9XG5cbiAgLy8gc2V0IHVwIHRyYW5zcG9ydFxuICB0aGlzLnRyYW5zcG9ydCA9IHRyYW5zcG9ydDtcblxuICAvLyBzZXQgdXAgdHJhbnNwb3J0IGxpc3RlbmVyc1xuICB0cmFuc3BvcnRcbiAgLm9uKCdkcmFpbicsIGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLm9uRHJhaW4oKTtcbiAgfSlcbiAgLm9uKCdwYWNrZXQnLCBmdW5jdGlvbiAocGFja2V0KSB7XG4gICAgc2VsZi5vblBhY2tldChwYWNrZXQpO1xuICB9KVxuICAub24oJ2Vycm9yJywgZnVuY3Rpb24gKGUpIHtcbiAgICBzZWxmLm9uRXJyb3IoZSk7XG4gIH0pXG4gIC5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgc2VsZi5vbkNsb3NlKCd0cmFuc3BvcnQgY2xvc2UnKTtcbiAgfSk7XG59O1xuXG4vKipcbiAqIFByb2JlcyBhIHRyYW5zcG9ydC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHJhbnNwb3J0IG5hbWVcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNvY2tldC5wcm90b3R5cGUucHJvYmUgPSBmdW5jdGlvbiAobmFtZSkge1xuICBkZWJ1ZygncHJvYmluZyB0cmFuc3BvcnQgXCIlc1wiJywgbmFtZSk7XG4gIHZhciB0cmFuc3BvcnQgPSB0aGlzLmNyZWF0ZVRyYW5zcG9ydChuYW1lLCB7IHByb2JlOiAxIH0pO1xuICB2YXIgZmFpbGVkID0gZmFsc2U7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICBTb2NrZXQucHJpb3JXZWJzb2NrZXRTdWNjZXNzID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gb25UcmFuc3BvcnRPcGVuICgpIHtcbiAgICBpZiAoc2VsZi5vbmx5QmluYXJ5VXBncmFkZXMpIHtcbiAgICAgIHZhciB1cGdyYWRlTG9zZXNCaW5hcnkgPSAhdGhpcy5zdXBwb3J0c0JpbmFyeSAmJiBzZWxmLnRyYW5zcG9ydC5zdXBwb3J0c0JpbmFyeTtcbiAgICAgIGZhaWxlZCA9IGZhaWxlZCB8fCB1cGdyYWRlTG9zZXNCaW5hcnk7XG4gICAgfVxuICAgIGlmIChmYWlsZWQpIHJldHVybjtcblxuICAgIGRlYnVnKCdwcm9iZSB0cmFuc3BvcnQgXCIlc1wiIG9wZW5lZCcsIG5hbWUpO1xuICAgIHRyYW5zcG9ydC5zZW5kKFt7IHR5cGU6ICdwaW5nJywgZGF0YTogJ3Byb2JlJyB9XSk7XG4gICAgdHJhbnNwb3J0Lm9uY2UoJ3BhY2tldCcsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgIGlmIChmYWlsZWQpIHJldHVybjtcbiAgICAgIGlmICgncG9uZycgPT09IG1zZy50eXBlICYmICdwcm9iZScgPT09IG1zZy5kYXRhKSB7XG4gICAgICAgIGRlYnVnKCdwcm9iZSB0cmFuc3BvcnQgXCIlc1wiIHBvbmcnLCBuYW1lKTtcbiAgICAgICAgc2VsZi51cGdyYWRpbmcgPSB0cnVlO1xuICAgICAgICBzZWxmLmVtaXQoJ3VwZ3JhZGluZycsIHRyYW5zcG9ydCk7XG4gICAgICAgIGlmICghdHJhbnNwb3J0KSByZXR1cm47XG4gICAgICAgIFNvY2tldC5wcmlvcldlYnNvY2tldFN1Y2Nlc3MgPSAnd2Vic29ja2V0JyA9PT0gdHJhbnNwb3J0Lm5hbWU7XG5cbiAgICAgICAgZGVidWcoJ3BhdXNpbmcgY3VycmVudCB0cmFuc3BvcnQgXCIlc1wiJywgc2VsZi50cmFuc3BvcnQubmFtZSk7XG4gICAgICAgIHNlbGYudHJhbnNwb3J0LnBhdXNlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoZmFpbGVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKCdjbG9zZWQnID09PSBzZWxmLnJlYWR5U3RhdGUpIHJldHVybjtcbiAgICAgICAgICBkZWJ1ZygnY2hhbmdpbmcgdHJhbnNwb3J0IGFuZCBzZW5kaW5nIHVwZ3JhZGUgcGFja2V0Jyk7XG5cbiAgICAgICAgICBjbGVhbnVwKCk7XG5cbiAgICAgICAgICBzZWxmLnNldFRyYW5zcG9ydCh0cmFuc3BvcnQpO1xuICAgICAgICAgIHRyYW5zcG9ydC5zZW5kKFt7IHR5cGU6ICd1cGdyYWRlJyB9XSk7XG4gICAgICAgICAgc2VsZi5lbWl0KCd1cGdyYWRlJywgdHJhbnNwb3J0KTtcbiAgICAgICAgICB0cmFuc3BvcnQgPSBudWxsO1xuICAgICAgICAgIHNlbGYudXBncmFkaW5nID0gZmFsc2U7XG4gICAgICAgICAgc2VsZi5mbHVzaCgpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlYnVnKCdwcm9iZSB0cmFuc3BvcnQgXCIlc1wiIGZhaWxlZCcsIG5hbWUpO1xuICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdwcm9iZSBlcnJvcicpO1xuICAgICAgICBlcnIudHJhbnNwb3J0ID0gdHJhbnNwb3J0Lm5hbWU7XG4gICAgICAgIHNlbGYuZW1pdCgndXBncmFkZUVycm9yJywgZXJyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZyZWV6ZVRyYW5zcG9ydCAoKSB7XG4gICAgaWYgKGZhaWxlZCkgcmV0dXJuO1xuXG4gICAgLy8gQW55IGNhbGxiYWNrIGNhbGxlZCBieSB0cmFuc3BvcnQgc2hvdWxkIGJlIGlnbm9yZWQgc2luY2Ugbm93XG4gICAgZmFpbGVkID0gdHJ1ZTtcblxuICAgIGNsZWFudXAoKTtcblxuICAgIHRyYW5zcG9ydC5jbG9zZSgpO1xuICAgIHRyYW5zcG9ydCA9IG51bGw7XG4gIH1cblxuICAvLyBIYW5kbGUgYW55IGVycm9yIHRoYXQgaGFwcGVucyB3aGlsZSBwcm9iaW5nXG4gIGZ1bmN0aW9uIG9uZXJyb3IgKGVycikge1xuICAgIHZhciBlcnJvciA9IG5ldyBFcnJvcigncHJvYmUgZXJyb3I6ICcgKyBlcnIpO1xuICAgIGVycm9yLnRyYW5zcG9ydCA9IHRyYW5zcG9ydC5uYW1lO1xuXG4gICAgZnJlZXplVHJhbnNwb3J0KCk7XG5cbiAgICBkZWJ1ZygncHJvYmUgdHJhbnNwb3J0IFwiJXNcIiBmYWlsZWQgYmVjYXVzZSBvZiBlcnJvcjogJXMnLCBuYW1lLCBlcnIpO1xuXG4gICAgc2VsZi5lbWl0KCd1cGdyYWRlRXJyb3InLCBlcnJvcik7XG4gIH1cblxuICBmdW5jdGlvbiBvblRyYW5zcG9ydENsb3NlICgpIHtcbiAgICBvbmVycm9yKCd0cmFuc3BvcnQgY2xvc2VkJyk7XG4gIH1cblxuICAvLyBXaGVuIHRoZSBzb2NrZXQgaXMgY2xvc2VkIHdoaWxlIHdlJ3JlIHByb2JpbmdcbiAgZnVuY3Rpb24gb25jbG9zZSAoKSB7XG4gICAgb25lcnJvcignc29ja2V0IGNsb3NlZCcpO1xuICB9XG5cbiAgLy8gV2hlbiB0aGUgc29ja2V0IGlzIHVwZ3JhZGVkIHdoaWxlIHdlJ3JlIHByb2JpbmdcbiAgZnVuY3Rpb24gb251cGdyYWRlICh0bykge1xuICAgIGlmICh0cmFuc3BvcnQgJiYgdG8ubmFtZSAhPT0gdHJhbnNwb3J0Lm5hbWUpIHtcbiAgICAgIGRlYnVnKCdcIiVzXCIgd29ya3MgLSBhYm9ydGluZyBcIiVzXCInLCB0by5uYW1lLCB0cmFuc3BvcnQubmFtZSk7XG4gICAgICBmcmVlemVUcmFuc3BvcnQoKTtcbiAgICB9XG4gIH1cblxuICAvLyBSZW1vdmUgYWxsIGxpc3RlbmVycyBvbiB0aGUgdHJhbnNwb3J0IGFuZCBvbiBzZWxmXG4gIGZ1bmN0aW9uIGNsZWFudXAgKCkge1xuICAgIHRyYW5zcG9ydC5yZW1vdmVMaXN0ZW5lcignb3BlbicsIG9uVHJhbnNwb3J0T3Blbik7XG4gICAgdHJhbnNwb3J0LnJlbW92ZUxpc3RlbmVyKCdlcnJvcicsIG9uZXJyb3IpO1xuICAgIHRyYW5zcG9ydC5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvblRyYW5zcG9ydENsb3NlKTtcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuICAgIHNlbGYucmVtb3ZlTGlzdGVuZXIoJ3VwZ3JhZGluZycsIG9udXBncmFkZSk7XG4gIH1cblxuICB0cmFuc3BvcnQub25jZSgnb3BlbicsIG9uVHJhbnNwb3J0T3Blbik7XG4gIHRyYW5zcG9ydC5vbmNlKCdlcnJvcicsIG9uZXJyb3IpO1xuICB0cmFuc3BvcnQub25jZSgnY2xvc2UnLCBvblRyYW5zcG9ydENsb3NlKTtcblxuICB0aGlzLm9uY2UoJ2Nsb3NlJywgb25jbG9zZSk7XG4gIHRoaXMub25jZSgndXBncmFkaW5nJywgb251cGdyYWRlKTtcblxuICB0cmFuc3BvcnQub3BlbigpO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgd2hlbiBjb25uZWN0aW9uIGlzIGRlZW1lZCBvcGVuLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5vbk9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gIGRlYnVnKCdzb2NrZXQgb3BlbicpO1xuICB0aGlzLnJlYWR5U3RhdGUgPSAnb3Blbic7XG4gIFNvY2tldC5wcmlvcldlYnNvY2tldFN1Y2Nlc3MgPSAnd2Vic29ja2V0JyA9PT0gdGhpcy50cmFuc3BvcnQubmFtZTtcbiAgdGhpcy5lbWl0KCdvcGVuJyk7XG4gIHRoaXMuZmx1c2goKTtcblxuICAvLyB3ZSBjaGVjayBmb3IgYHJlYWR5U3RhdGVgIGluIGNhc2UgYW4gYG9wZW5gXG4gIC8vIGxpc3RlbmVyIGFscmVhZHkgY2xvc2VkIHRoZSBzb2NrZXRcbiAgaWYgKCdvcGVuJyA9PT0gdGhpcy5yZWFkeVN0YXRlICYmIHRoaXMudXBncmFkZSAmJiB0aGlzLnRyYW5zcG9ydC5wYXVzZSkge1xuICAgIGRlYnVnKCdzdGFydGluZyB1cGdyYWRlIHByb2JlcycpO1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy51cGdyYWRlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHRoaXMucHJvYmUodGhpcy51cGdyYWRlc1tpXSk7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIEhhbmRsZXMgYSBwYWNrZXQuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5vblBhY2tldCA9IGZ1bmN0aW9uIChwYWNrZXQpIHtcbiAgaWYgKCdvcGVuaW5nJyA9PT0gdGhpcy5yZWFkeVN0YXRlIHx8ICdvcGVuJyA9PT0gdGhpcy5yZWFkeVN0YXRlIHx8XG4gICAgICAnY2xvc2luZycgPT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgIGRlYnVnKCdzb2NrZXQgcmVjZWl2ZTogdHlwZSBcIiVzXCIsIGRhdGEgXCIlc1wiJywgcGFja2V0LnR5cGUsIHBhY2tldC5kYXRhKTtcblxuICAgIHRoaXMuZW1pdCgncGFja2V0JywgcGFja2V0KTtcblxuICAgIC8vIFNvY2tldCBpcyBsaXZlIC0gYW55IHBhY2tldCBjb3VudHNcbiAgICB0aGlzLmVtaXQoJ2hlYXJ0YmVhdCcpO1xuXG4gICAgc3dpdGNoIChwYWNrZXQudHlwZSkge1xuICAgICAgY2FzZSAnb3Blbic6XG4gICAgICAgIHRoaXMub25IYW5kc2hha2UoSlNPTi5wYXJzZShwYWNrZXQuZGF0YSkpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAncG9uZyc6XG4gICAgICAgIHRoaXMuc2V0UGluZygpO1xuICAgICAgICB0aGlzLmVtaXQoJ3BvbmcnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgICAgdmFyIGVyciA9IG5ldyBFcnJvcignc2VydmVyIGVycm9yJyk7XG4gICAgICAgIGVyci5jb2RlID0gcGFja2V0LmRhdGE7XG4gICAgICAgIHRoaXMub25FcnJvcihlcnIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnbWVzc2FnZSc6XG4gICAgICAgIHRoaXMuZW1pdCgnZGF0YScsIHBhY2tldC5kYXRhKTtcbiAgICAgICAgdGhpcy5lbWl0KCdtZXNzYWdlJywgcGFja2V0LmRhdGEpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZGVidWcoJ3BhY2tldCByZWNlaXZlZCB3aXRoIHNvY2tldCByZWFkeVN0YXRlIFwiJXNcIicsIHRoaXMucmVhZHlTdGF0ZSk7XG4gIH1cbn07XG5cbi8qKlxuICogQ2FsbGVkIHVwb24gaGFuZHNoYWtlIGNvbXBsZXRpb24uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGhhbmRzaGFrZSBvYmpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNvY2tldC5wcm90b3R5cGUub25IYW5kc2hha2UgPSBmdW5jdGlvbiAoZGF0YSkge1xuICB0aGlzLmVtaXQoJ2hhbmRzaGFrZScsIGRhdGEpO1xuICB0aGlzLmlkID0gZGF0YS5zaWQ7XG4gIHRoaXMudHJhbnNwb3J0LnF1ZXJ5LnNpZCA9IGRhdGEuc2lkO1xuICB0aGlzLnVwZ3JhZGVzID0gdGhpcy5maWx0ZXJVcGdyYWRlcyhkYXRhLnVwZ3JhZGVzKTtcbiAgdGhpcy5waW5nSW50ZXJ2YWwgPSBkYXRhLnBpbmdJbnRlcnZhbDtcbiAgdGhpcy5waW5nVGltZW91dCA9IGRhdGEucGluZ1RpbWVvdXQ7XG4gIHRoaXMub25PcGVuKCk7XG4gIC8vIEluIGNhc2Ugb3BlbiBoYW5kbGVyIGNsb3NlcyBzb2NrZXRcbiAgaWYgKCdjbG9zZWQnID09PSB0aGlzLnJlYWR5U3RhdGUpIHJldHVybjtcbiAgdGhpcy5zZXRQaW5nKCk7XG5cbiAgLy8gUHJvbG9uZyBsaXZlbmVzcyBvZiBzb2NrZXQgb24gaGVhcnRiZWF0XG4gIHRoaXMucmVtb3ZlTGlzdGVuZXIoJ2hlYXJ0YmVhdCcsIHRoaXMub25IZWFydGJlYXQpO1xuICB0aGlzLm9uKCdoZWFydGJlYXQnLCB0aGlzLm9uSGVhcnRiZWF0KTtcbn07XG5cbi8qKlxuICogUmVzZXRzIHBpbmcgdGltZW91dC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uSGVhcnRiZWF0ID0gZnVuY3Rpb24gKHRpbWVvdXQpIHtcbiAgY2xlYXJUaW1lb3V0KHRoaXMucGluZ1RpbWVvdXRUaW1lcik7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgc2VsZi5waW5nVGltZW91dFRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCdjbG9zZWQnID09PSBzZWxmLnJlYWR5U3RhdGUpIHJldHVybjtcbiAgICBzZWxmLm9uQ2xvc2UoJ3BpbmcgdGltZW91dCcpO1xuICB9LCB0aW1lb3V0IHx8IChzZWxmLnBpbmdJbnRlcnZhbCArIHNlbGYucGluZ1RpbWVvdXQpKTtcbn07XG5cbi8qKlxuICogUGluZ3Mgc2VydmVyIGV2ZXJ5IGB0aGlzLnBpbmdJbnRlcnZhbGAgYW5kIGV4cGVjdHMgcmVzcG9uc2VcbiAqIHdpdGhpbiBgdGhpcy5waW5nVGltZW91dGAgb3IgY2xvc2VzIGNvbm5lY3Rpb24uXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5zZXRQaW5nID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIGNsZWFyVGltZW91dChzZWxmLnBpbmdJbnRlcnZhbFRpbWVyKTtcbiAgc2VsZi5waW5nSW50ZXJ2YWxUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIGRlYnVnKCd3cml0aW5nIHBpbmcgcGFja2V0IC0gZXhwZWN0aW5nIHBvbmcgd2l0aGluICVzbXMnLCBzZWxmLnBpbmdUaW1lb3V0KTtcbiAgICBzZWxmLnBpbmcoKTtcbiAgICBzZWxmLm9uSGVhcnRiZWF0KHNlbGYucGluZ1RpbWVvdXQpO1xuICB9LCBzZWxmLnBpbmdJbnRlcnZhbCk7XG59O1xuXG4vKipcbiogU2VuZHMgYSBwaW5nIHBhY2tldC5cbipcbiogQGFwaSBwcml2YXRlXG4qL1xuXG5Tb2NrZXQucHJvdG90eXBlLnBpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5zZW5kUGFja2V0KCdwaW5nJywgZnVuY3Rpb24gKCkge1xuICAgIHNlbGYuZW1pdCgncGluZycpO1xuICB9KTtcbn07XG5cbi8qKlxuICogQ2FsbGVkIG9uIGBkcmFpbmAgZXZlbnRcbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uRHJhaW4gPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMud3JpdGVCdWZmZXIuc3BsaWNlKDAsIHRoaXMucHJldkJ1ZmZlckxlbik7XG5cbiAgLy8gc2V0dGluZyBwcmV2QnVmZmVyTGVuID0gMCBpcyB2ZXJ5IGltcG9ydGFudFxuICAvLyBmb3IgZXhhbXBsZSwgd2hlbiB1cGdyYWRpbmcsIHVwZ3JhZGUgcGFja2V0IGlzIHNlbnQgb3ZlcixcbiAgLy8gYW5kIGEgbm9uemVybyBwcmV2QnVmZmVyTGVuIGNvdWxkIGNhdXNlIHByb2JsZW1zIG9uIGBkcmFpbmBcbiAgdGhpcy5wcmV2QnVmZmVyTGVuID0gMDtcblxuICBpZiAoMCA9PT0gdGhpcy53cml0ZUJ1ZmZlci5sZW5ndGgpIHtcbiAgICB0aGlzLmVtaXQoJ2RyYWluJyk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5mbHVzaCgpO1xuICB9XG59O1xuXG4vKipcbiAqIEZsdXNoIHdyaXRlIGJ1ZmZlcnMuXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5mbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCdjbG9zZWQnICE9PSB0aGlzLnJlYWR5U3RhdGUgJiYgdGhpcy50cmFuc3BvcnQud3JpdGFibGUgJiZcbiAgICAhdGhpcy51cGdyYWRpbmcgJiYgdGhpcy53cml0ZUJ1ZmZlci5sZW5ndGgpIHtcbiAgICBkZWJ1ZygnZmx1c2hpbmcgJWQgcGFja2V0cyBpbiBzb2NrZXQnLCB0aGlzLndyaXRlQnVmZmVyLmxlbmd0aCk7XG4gICAgdGhpcy50cmFuc3BvcnQuc2VuZCh0aGlzLndyaXRlQnVmZmVyKTtcbiAgICAvLyBrZWVwIHRyYWNrIG9mIGN1cnJlbnQgbGVuZ3RoIG9mIHdyaXRlQnVmZmVyXG4gICAgLy8gc3BsaWNlIHdyaXRlQnVmZmVyIGFuZCBjYWxsYmFja0J1ZmZlciBvbiBgZHJhaW5gXG4gICAgdGhpcy5wcmV2QnVmZmVyTGVuID0gdGhpcy53cml0ZUJ1ZmZlci5sZW5ndGg7XG4gICAgdGhpcy5lbWl0KCdmbHVzaCcpO1xuICB9XG59O1xuXG4vKipcbiAqIFNlbmRzIGEgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIGZ1bmN0aW9uLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuXG4gKiBAcmV0dXJuIHtTb2NrZXR9IGZvciBjaGFpbmluZy5cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS53cml0ZSA9XG5Tb2NrZXQucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbiAobXNnLCBvcHRpb25zLCBmbikge1xuICB0aGlzLnNlbmRQYWNrZXQoJ21lc3NhZ2UnLCBtc2csIG9wdGlvbnMsIGZuKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNlbmRzIGEgcGFja2V0LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYWNrZXQgdHlwZS5cbiAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBmdW5jdGlvbi5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNvY2tldC5wcm90b3R5cGUuc2VuZFBhY2tldCA9IGZ1bmN0aW9uICh0eXBlLCBkYXRhLCBvcHRpb25zLCBmbikge1xuICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGRhdGEpIHtcbiAgICBmbiA9IGRhdGE7XG4gICAgZGF0YSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2Ygb3B0aW9ucykge1xuICAgIGZuID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gbnVsbDtcbiAgfVxuXG4gIGlmICgnY2xvc2luZycgPT09IHRoaXMucmVhZHlTdGF0ZSB8fCAnY2xvc2VkJyA9PT0gdGhpcy5yZWFkeVN0YXRlKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIG9wdGlvbnMuY29tcHJlc3MgPSBmYWxzZSAhPT0gb3B0aW9ucy5jb21wcmVzcztcblxuICB2YXIgcGFja2V0ID0ge1xuICAgIHR5cGU6IHR5cGUsXG4gICAgZGF0YTogZGF0YSxcbiAgICBvcHRpb25zOiBvcHRpb25zXG4gIH07XG4gIHRoaXMuZW1pdCgncGFja2V0Q3JlYXRlJywgcGFja2V0KTtcbiAgdGhpcy53cml0ZUJ1ZmZlci5wdXNoKHBhY2tldCk7XG4gIGlmIChmbikgdGhpcy5vbmNlKCdmbHVzaCcsIGZuKTtcbiAgdGhpcy5mbHVzaCgpO1xufTtcblxuLyoqXG4gKiBDbG9zZXMgdGhlIGNvbm5lY3Rpb24uXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCdvcGVuaW5nJyA9PT0gdGhpcy5yZWFkeVN0YXRlIHx8ICdvcGVuJyA9PT0gdGhpcy5yZWFkeVN0YXRlKSB7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gJ2Nsb3NpbmcnO1xuXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgaWYgKHRoaXMud3JpdGVCdWZmZXIubGVuZ3RoKSB7XG4gICAgICB0aGlzLm9uY2UoJ2RyYWluJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy51cGdyYWRpbmcpIHtcbiAgICAgICAgICB3YWl0Rm9yVXBncmFkZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodGhpcy51cGdyYWRpbmcpIHtcbiAgICAgIHdhaXRGb3JVcGdyYWRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2UgKCkge1xuICAgIHNlbGYub25DbG9zZSgnZm9yY2VkIGNsb3NlJyk7XG4gICAgZGVidWcoJ3NvY2tldCBjbG9zaW5nIC0gdGVsbGluZyB0cmFuc3BvcnQgdG8gY2xvc2UnKTtcbiAgICBzZWxmLnRyYW5zcG9ydC5jbG9zZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xlYW51cEFuZENsb3NlICgpIHtcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKCd1cGdyYWRlJywgY2xlYW51cEFuZENsb3NlKTtcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKCd1cGdyYWRlRXJyb3InLCBjbGVhbnVwQW5kQ2xvc2UpO1xuICAgIGNsb3NlKCk7XG4gIH1cblxuICBmdW5jdGlvbiB3YWl0Rm9yVXBncmFkZSAoKSB7XG4gICAgLy8gd2FpdCBmb3IgdXBncmFkZSB0byBmaW5pc2ggc2luY2Ugd2UgY2FuJ3Qgc2VuZCBwYWNrZXRzIHdoaWxlIHBhdXNpbmcgYSB0cmFuc3BvcnRcbiAgICBzZWxmLm9uY2UoJ3VwZ3JhZGUnLCBjbGVhbnVwQW5kQ2xvc2UpO1xuICAgIHNlbGYub25jZSgndXBncmFkZUVycm9yJywgY2xlYW51cEFuZENsb3NlKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBDYWxsZWQgdXBvbiB0cmFuc3BvcnQgZXJyb3JcbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uRXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gIGRlYnVnKCdzb2NrZXQgZXJyb3IgJWonLCBlcnIpO1xuICBTb2NrZXQucHJpb3JXZWJzb2NrZXRTdWNjZXNzID0gZmFsc2U7XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICB0aGlzLm9uQ2xvc2UoJ3RyYW5zcG9ydCBlcnJvcicsIGVycik7XG59O1xuXG4vKipcbiAqIENhbGxlZCB1cG9uIHRyYW5zcG9ydCBjbG9zZS5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5Tb2NrZXQucHJvdG90eXBlLm9uQ2xvc2UgPSBmdW5jdGlvbiAocmVhc29uLCBkZXNjKSB7XG4gIGlmICgnb3BlbmluZycgPT09IHRoaXMucmVhZHlTdGF0ZSB8fCAnb3BlbicgPT09IHRoaXMucmVhZHlTdGF0ZSB8fCAnY2xvc2luZycgPT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgIGRlYnVnKCdzb2NrZXQgY2xvc2Ugd2l0aCByZWFzb246IFwiJXNcIicsIHJlYXNvbik7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgLy8gY2xlYXIgdGltZXJzXG4gICAgY2xlYXJUaW1lb3V0KHRoaXMucGluZ0ludGVydmFsVGltZXIpO1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnBpbmdUaW1lb3V0VGltZXIpO1xuXG4gICAgLy8gc3RvcCBldmVudCBmcm9tIGZpcmluZyBhZ2FpbiBmb3IgdHJhbnNwb3J0XG4gICAgdGhpcy50cmFuc3BvcnQucmVtb3ZlQWxsTGlzdGVuZXJzKCdjbG9zZScpO1xuXG4gICAgLy8gZW5zdXJlIHRyYW5zcG9ydCB3b24ndCBzdGF5IG9wZW5cbiAgICB0aGlzLnRyYW5zcG9ydC5jbG9zZSgpO1xuXG4gICAgLy8gaWdub3JlIGZ1cnRoZXIgdHJhbnNwb3J0IGNvbW11bmljYXRpb25cbiAgICB0aGlzLnRyYW5zcG9ydC5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcblxuICAgIC8vIHNldCByZWFkeSBzdGF0ZVxuICAgIHRoaXMucmVhZHlTdGF0ZSA9ICdjbG9zZWQnO1xuXG4gICAgLy8gY2xlYXIgc2Vzc2lvbiBpZFxuICAgIHRoaXMuaWQgPSBudWxsO1xuXG4gICAgLy8gZW1pdCBjbG9zZSBldmVudFxuICAgIHRoaXMuZW1pdCgnY2xvc2UnLCByZWFzb24sIGRlc2MpO1xuXG4gICAgLy8gY2xlYW4gYnVmZmVycyBhZnRlciwgc28gdXNlcnMgY2FuIHN0aWxsXG4gICAgLy8gZ3JhYiB0aGUgYnVmZmVycyBvbiBgY2xvc2VgIGV2ZW50XG4gICAgc2VsZi53cml0ZUJ1ZmZlciA9IFtdO1xuICAgIHNlbGYucHJldkJ1ZmZlckxlbiA9IDA7XG4gIH1cbn07XG5cbi8qKlxuICogRmlsdGVycyB1cGdyYWRlcywgcmV0dXJuaW5nIG9ubHkgdGhvc2UgbWF0Y2hpbmcgY2xpZW50IHRyYW5zcG9ydHMuXG4gKlxuICogQHBhcmFtIHtBcnJheX0gc2VydmVyIHVwZ3JhZGVzXG4gKiBAYXBpIHByaXZhdGVcbiAqXG4gKi9cblxuU29ja2V0LnByb3RvdHlwZS5maWx0ZXJVcGdyYWRlcyA9IGZ1bmN0aW9uICh1cGdyYWRlcykge1xuICB2YXIgZmlsdGVyZWRVcGdyYWRlcyA9IFtdO1xuICBmb3IgKHZhciBpID0gMCwgaiA9IHVwZ3JhZGVzLmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgIGlmICh+aW5kZXgodGhpcy50cmFuc3BvcnRzLCB1cGdyYWRlc1tpXSkpIGZpbHRlcmVkVXBncmFkZXMucHVzaCh1cGdyYWRlc1tpXSk7XG4gIH1cbiAgcmV0dXJuIGZpbHRlcmVkVXBncmFkZXM7XG59O1xuIiwiXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vc29ja2V0Jyk7XG5cbi8qKlxuICogRXhwb3J0cyBwYXJzZXJcbiAqXG4gKiBAYXBpIHB1YmxpY1xuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMucGFyc2VyID0gcmVxdWlyZSgnZW5naW5lLmlvLXBhcnNlcicpO1xuIiwiLypnbG9iYWwgQmxvYixGaWxlKi9cblxuLyoqXG4gKiBNb2R1bGUgcmVxdWlyZW1lbnRzXG4gKi9cblxudmFyIGlzQXJyYXkgPSByZXF1aXJlKCdpc2FycmF5Jyk7XG52YXIgaXNCdWYgPSByZXF1aXJlKCcuL2lzLWJ1ZmZlcicpO1xudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbnZhciB3aXRoTmF0aXZlQmxvYiA9IHR5cGVvZiBnbG9iYWwuQmxvYiA9PT0gJ2Z1bmN0aW9uJyB8fCB0b1N0cmluZy5jYWxsKGdsb2JhbC5CbG9iKSA9PT0gJ1tvYmplY3QgQmxvYkNvbnN0cnVjdG9yXSc7XG52YXIgd2l0aE5hdGl2ZUZpbGUgPSB0eXBlb2YgZ2xvYmFsLkZpbGUgPT09ICdmdW5jdGlvbicgfHwgdG9TdHJpbmcuY2FsbChnbG9iYWwuRmlsZSkgPT09ICdbb2JqZWN0IEZpbGVDb25zdHJ1Y3Rvcl0nO1xuXG4vKipcbiAqIFJlcGxhY2VzIGV2ZXJ5IEJ1ZmZlciB8IEFycmF5QnVmZmVyIGluIHBhY2tldCB3aXRoIGEgbnVtYmVyZWQgcGxhY2Vob2xkZXIuXG4gKiBBbnl0aGluZyB3aXRoIGJsb2JzIG9yIGZpbGVzIHNob3VsZCBiZSBmZWQgdGhyb3VnaCByZW1vdmVCbG9icyBiZWZvcmUgY29taW5nXG4gKiBoZXJlLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYWNrZXQgLSBzb2NrZXQuaW8gZXZlbnQgcGFja2V0XG4gKiBAcmV0dXJuIHtPYmplY3R9IHdpdGggZGVjb25zdHJ1Y3RlZCBwYWNrZXQgYW5kIGxpc3Qgb2YgYnVmZmVyc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLmRlY29uc3RydWN0UGFja2V0ID0gZnVuY3Rpb24ocGFja2V0KSB7XG4gIHZhciBidWZmZXJzID0gW107XG4gIHZhciBwYWNrZXREYXRhID0gcGFja2V0LmRhdGE7XG4gIHZhciBwYWNrID0gcGFja2V0O1xuICBwYWNrLmRhdGEgPSBfZGVjb25zdHJ1Y3RQYWNrZXQocGFja2V0RGF0YSwgYnVmZmVycyk7XG4gIHBhY2suYXR0YWNobWVudHMgPSBidWZmZXJzLmxlbmd0aDsgLy8gbnVtYmVyIG9mIGJpbmFyeSAnYXR0YWNobWVudHMnXG4gIHJldHVybiB7cGFja2V0OiBwYWNrLCBidWZmZXJzOiBidWZmZXJzfTtcbn07XG5cbmZ1bmN0aW9uIF9kZWNvbnN0cnVjdFBhY2tldChkYXRhLCBidWZmZXJzKSB7XG4gIGlmICghZGF0YSkgcmV0dXJuIGRhdGE7XG5cbiAgaWYgKGlzQnVmKGRhdGEpKSB7XG4gICAgdmFyIHBsYWNlaG9sZGVyID0geyBfcGxhY2Vob2xkZXI6IHRydWUsIG51bTogYnVmZmVycy5sZW5ndGggfTtcbiAgICBidWZmZXJzLnB1c2goZGF0YSk7XG4gICAgcmV0dXJuIHBsYWNlaG9sZGVyO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkoZGF0YSkpIHtcbiAgICB2YXIgbmV3RGF0YSA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBuZXdEYXRhW2ldID0gX2RlY29uc3RydWN0UGFja2V0KGRhdGFbaV0sIGJ1ZmZlcnMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3RGF0YTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiYgIShkYXRhIGluc3RhbmNlb2YgRGF0ZSkpIHtcbiAgICB2YXIgbmV3RGF0YSA9IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7XG4gICAgICBuZXdEYXRhW2tleV0gPSBfZGVjb25zdHJ1Y3RQYWNrZXQoZGF0YVtrZXldLCBidWZmZXJzKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0RhdGE7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogUmVjb25zdHJ1Y3RzIGEgYmluYXJ5IHBhY2tldCBmcm9tIGl0cyBwbGFjZWhvbGRlciBwYWNrZXQgYW5kIGJ1ZmZlcnNcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFja2V0IC0gZXZlbnQgcGFja2V0IHdpdGggcGxhY2Vob2xkZXJzXG4gKiBAcGFyYW0ge0FycmF5fSBidWZmZXJzIC0gYmluYXJ5IGJ1ZmZlcnMgdG8gcHV0IGluIHBsYWNlaG9sZGVyIHBvc2l0aW9uc1xuICogQHJldHVybiB7T2JqZWN0fSByZWNvbnN0cnVjdGVkIHBhY2tldFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLnJlY29uc3RydWN0UGFja2V0ID0gZnVuY3Rpb24ocGFja2V0LCBidWZmZXJzKSB7XG4gIHBhY2tldC5kYXRhID0gX3JlY29uc3RydWN0UGFja2V0KHBhY2tldC5kYXRhLCBidWZmZXJzKTtcbiAgcGFja2V0LmF0dGFjaG1lbnRzID0gdW5kZWZpbmVkOyAvLyBubyBsb25nZXIgdXNlZnVsXG4gIHJldHVybiBwYWNrZXQ7XG59O1xuXG5mdW5jdGlvbiBfcmVjb25zdHJ1Y3RQYWNrZXQoZGF0YSwgYnVmZmVycykge1xuICBpZiAoIWRhdGEpIHJldHVybiBkYXRhO1xuXG4gIGlmIChkYXRhICYmIGRhdGEuX3BsYWNlaG9sZGVyKSB7XG4gICAgcmV0dXJuIGJ1ZmZlcnNbZGF0YS5udW1dOyAvLyBhcHByb3ByaWF0ZSBidWZmZXIgKHNob3VsZCBiZSBuYXR1cmFsIG9yZGVyIGFueXdheSlcbiAgfSBlbHNlIGlmIChpc0FycmF5KGRhdGEpKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkYXRhW2ldID0gX3JlY29uc3RydWN0UGFja2V0KGRhdGFbaV0sIGJ1ZmZlcnMpO1xuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkge1xuICAgICAgZGF0YVtrZXldID0gX3JlY29uc3RydWN0UGFja2V0KGRhdGFba2V5XSwgYnVmZmVycyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogQXN5bmNocm9ub3VzbHkgcmVtb3ZlcyBCbG9icyBvciBGaWxlcyBmcm9tIGRhdGEgdmlhXG4gKiBGaWxlUmVhZGVyJ3MgcmVhZEFzQXJyYXlCdWZmZXIgbWV0aG9kLiBVc2VkIGJlZm9yZSBlbmNvZGluZ1xuICogZGF0YSBhcyBtc2dwYWNrLiBDYWxscyBjYWxsYmFjayB3aXRoIHRoZSBibG9ibGVzcyBkYXRhLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5yZW1vdmVCbG9icyA9IGZ1bmN0aW9uKGRhdGEsIGNhbGxiYWNrKSB7XG4gIGZ1bmN0aW9uIF9yZW1vdmVCbG9icyhvYmosIGN1cktleSwgY29udGFpbmluZ09iamVjdCkge1xuICAgIGlmICghb2JqKSByZXR1cm4gb2JqO1xuXG4gICAgLy8gY29udmVydCBhbnkgYmxvYlxuICAgIGlmICgod2l0aE5hdGl2ZUJsb2IgJiYgb2JqIGluc3RhbmNlb2YgQmxvYikgfHxcbiAgICAgICAgKHdpdGhOYXRpdmVGaWxlICYmIG9iaiBpbnN0YW5jZW9mIEZpbGUpKSB7XG4gICAgICBwZW5kaW5nQmxvYnMrKztcblxuICAgICAgLy8gYXN5bmMgZmlsZXJlYWRlclxuICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbigpIHsgLy8gdGhpcy5yZXN1bHQgPT0gYXJyYXlidWZmZXJcbiAgICAgICAgaWYgKGNvbnRhaW5pbmdPYmplY3QpIHtcbiAgICAgICAgICBjb250YWluaW5nT2JqZWN0W2N1cktleV0gPSB0aGlzLnJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBibG9ibGVzc0RhdGEgPSB0aGlzLnJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIG5vdGhpbmcgcGVuZGluZyBpdHMgY2FsbGJhY2sgdGltZVxuICAgICAgICBpZighIC0tcGVuZGluZ0Jsb2JzKSB7XG4gICAgICAgICAgY2FsbGJhY2soYmxvYmxlc3NEYXRhKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihvYmopOyAvLyBibG9iIC0+IGFycmF5YnVmZmVyXG4gICAgfSBlbHNlIGlmIChpc0FycmF5KG9iaikpIHsgLy8gaGFuZGxlIGFycmF5XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgICBfcmVtb3ZlQmxvYnMob2JqW2ldLCBpLCBvYmopO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgIWlzQnVmKG9iaikpIHsgLy8gYW5kIG9iamVjdFxuICAgICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgICBfcmVtb3ZlQmxvYnMob2JqW2tleV0sIGtleSwgb2JqKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgcGVuZGluZ0Jsb2JzID0gMDtcbiAgdmFyIGJsb2JsZXNzRGF0YSA9IGRhdGE7XG4gIF9yZW1vdmVCbG9icyhibG9ibGVzc0RhdGEpO1xuICBpZiAoIXBlbmRpbmdCbG9icykge1xuICAgIGNhbGxiYWNrKGJsb2JsZXNzRGF0YSk7XG4gIH1cbn07XG4iLCIvKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwO1xudmFyIG0gPSBzICogNjA7XG52YXIgaCA9IG0gKiA2MDtcbnZhciBkID0gaCAqIDI0O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHRocm93cyB7RXJyb3J9IHRocm93IGFuIGVycm9yIGlmIHZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgbnVtYmVyXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc05hTih2YWwpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KHZhbClcbiAgKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG1hdGNoID0gL14oKD86XFxkKyk/XFwuP1xcZCspICoobWlsbGlzZWNvbmRzP3xtc2Vjcz98bXN8c2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx5ZWFycz98eXJzP3x5KT8kL2kuZXhlYyhcbiAgICBzdHJcbiAgKTtcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbiA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICB2YXIgdHlwZSA9IChtYXRjaFsyXSB8fCAnbXMnKS50b0xvd2VyQ2FzZSgpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHk7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xuICBpZiAobXMgPj0gZCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gZCkgKyAnZCc7XG4gIH1cbiAgaWYgKG1zID49IGgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGgpICsgJ2gnO1xuICB9XG4gIGlmIChtcyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJztcbiAgfVxuICBpZiAobXMgPj0gcykge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gcykgKyAncyc7XG4gIH1cbiAgcmV0dXJuIG1zICsgJ21zJztcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpIHx8XG4gICAgcGx1cmFsKG1zLCBoLCAnaG91cicpIHx8XG4gICAgcGx1cmFsKG1zLCBtLCAnbWludXRlJykgfHxcbiAgICBwbHVyYWwobXMsIHMsICdzZWNvbmQnKSB8fFxuICAgIG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBuLCBuYW1lKSB7XG4gIGlmIChtcyA8IG4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKG1zIDwgbiAqIDEuNSkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1zIC8gbikgKyAnICcgKyBuYW1lO1xuICB9XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncyc7XG59XG4iLCJcbi8qKlxuICogVGhpcyBpcyB0aGUgY29tbW9uIGxvZ2ljIGZvciBib3RoIHRoZSBOb2RlLmpzIGFuZCB3ZWIgYnJvd3NlclxuICogaW1wbGVtZW50YXRpb25zIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gY3JlYXRlRGVidWcuZGVidWcgPSBjcmVhdGVEZWJ1Z1snZGVmYXVsdCddID0gY3JlYXRlRGVidWc7XG5leHBvcnRzLmNvZXJjZSA9IGNvZXJjZTtcbmV4cG9ydHMuZGlzYWJsZSA9IGRpc2FibGU7XG5leHBvcnRzLmVuYWJsZSA9IGVuYWJsZTtcbmV4cG9ydHMuZW5hYmxlZCA9IGVuYWJsZWQ7XG5leHBvcnRzLmh1bWFuaXplID0gcmVxdWlyZSgnbXMnKTtcblxuLyoqXG4gKiBBY3RpdmUgYGRlYnVnYCBpbnN0YW5jZXMuXG4gKi9cbmV4cG9ydHMuaW5zdGFuY2VzID0gW107XG5cbi8qKlxuICogVGhlIGN1cnJlbnRseSBhY3RpdmUgZGVidWcgbW9kZSBuYW1lcywgYW5kIG5hbWVzIHRvIHNraXAuXG4gKi9cblxuZXhwb3J0cy5uYW1lcyA9IFtdO1xuZXhwb3J0cy5za2lwcyA9IFtdO1xuXG4vKipcbiAqIE1hcCBvZiBzcGVjaWFsIFwiJW5cIiBoYW5kbGluZyBmdW5jdGlvbnMsIGZvciB0aGUgZGVidWcgXCJmb3JtYXRcIiBhcmd1bWVudC5cbiAqXG4gKiBWYWxpZCBrZXkgbmFtZXMgYXJlIGEgc2luZ2xlLCBsb3dlciBvciB1cHBlci1jYXNlIGxldHRlciwgaS5lLiBcIm5cIiBhbmQgXCJOXCIuXG4gKi9cblxuZXhwb3J0cy5mb3JtYXR0ZXJzID0ge307XG5cbi8qKlxuICogU2VsZWN0IGEgY29sb3IuXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzZWxlY3RDb2xvcihuYW1lc3BhY2UpIHtcbiAgdmFyIGhhc2ggPSAwLCBpO1xuXG4gIGZvciAoaSBpbiBuYW1lc3BhY2UpIHtcbiAgICBoYXNoICA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpICsgbmFtZXNwYWNlLmNoYXJDb2RlQXQoaSk7XG4gICAgaGFzaCB8PSAwOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgfVxuXG4gIHJldHVybiBleHBvcnRzLmNvbG9yc1tNYXRoLmFicyhoYXNoKSAlIGV4cG9ydHMuY29sb3JzLmxlbmd0aF07XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgZGVidWdnZXIgd2l0aCB0aGUgZ2l2ZW4gYG5hbWVzcGFjZWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZURlYnVnKG5hbWVzcGFjZSkge1xuXG4gIHZhciBwcmV2VGltZTtcblxuICBmdW5jdGlvbiBkZWJ1ZygpIHtcbiAgICAvLyBkaXNhYmxlZD9cbiAgICBpZiAoIWRlYnVnLmVuYWJsZWQpIHJldHVybjtcblxuICAgIHZhciBzZWxmID0gZGVidWc7XG5cbiAgICAvLyBzZXQgYGRpZmZgIHRpbWVzdGFtcFxuICAgIHZhciBjdXJyID0gK25ldyBEYXRlKCk7XG4gICAgdmFyIG1zID0gY3VyciAtIChwcmV2VGltZSB8fCBjdXJyKTtcbiAgICBzZWxmLmRpZmYgPSBtcztcbiAgICBzZWxmLnByZXYgPSBwcmV2VGltZTtcbiAgICBzZWxmLmN1cnIgPSBjdXJyO1xuICAgIHByZXZUaW1lID0gY3VycjtcblxuICAgIC8vIHR1cm4gdGhlIGBhcmd1bWVudHNgIGludG8gYSBwcm9wZXIgQXJyYXlcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuXG4gICAgYXJnc1swXSA9IGV4cG9ydHMuY29lcmNlKGFyZ3NbMF0pO1xuXG4gICAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgYXJnc1swXSkge1xuICAgICAgLy8gYW55dGhpbmcgZWxzZSBsZXQncyBpbnNwZWN0IHdpdGggJU9cbiAgICAgIGFyZ3MudW5zaGlmdCgnJU8nKTtcbiAgICB9XG5cbiAgICAvLyBhcHBseSBhbnkgYGZvcm1hdHRlcnNgIHRyYW5zZm9ybWF0aW9uc1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgYXJnc1swXSA9IGFyZ3NbMF0ucmVwbGFjZSgvJShbYS16QS1aJV0pL2csIGZ1bmN0aW9uKG1hdGNoLCBmb3JtYXQpIHtcbiAgICAgIC8vIGlmIHdlIGVuY291bnRlciBhbiBlc2NhcGVkICUgdGhlbiBkb24ndCBpbmNyZWFzZSB0aGUgYXJyYXkgaW5kZXhcbiAgICAgIGlmIChtYXRjaCA9PT0gJyUlJykgcmV0dXJuIG1hdGNoO1xuICAgICAgaW5kZXgrKztcbiAgICAgIHZhciBmb3JtYXR0ZXIgPSBleHBvcnRzLmZvcm1hdHRlcnNbZm9ybWF0XTtcbiAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZm9ybWF0dGVyKSB7XG4gICAgICAgIHZhciB2YWwgPSBhcmdzW2luZGV4XTtcbiAgICAgICAgbWF0Y2ggPSBmb3JtYXR0ZXIuY2FsbChzZWxmLCB2YWwpO1xuXG4gICAgICAgIC8vIG5vdyB3ZSBuZWVkIHRvIHJlbW92ZSBgYXJnc1tpbmRleF1gIHNpbmNlIGl0J3MgaW5saW5lZCBpbiB0aGUgYGZvcm1hdGBcbiAgICAgICAgYXJncy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBpbmRleC0tO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pO1xuXG4gICAgLy8gYXBwbHkgZW52LXNwZWNpZmljIGZvcm1hdHRpbmcgKGNvbG9ycywgZXRjLilcbiAgICBleHBvcnRzLmZvcm1hdEFyZ3MuY2FsbChzZWxmLCBhcmdzKTtcblxuICAgIHZhciBsb2dGbiA9IGRlYnVnLmxvZyB8fCBleHBvcnRzLmxvZyB8fCBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgIGxvZ0ZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICB9XG5cbiAgZGVidWcubmFtZXNwYWNlID0gbmFtZXNwYWNlO1xuICBkZWJ1Zy5lbmFibGVkID0gZXhwb3J0cy5lbmFibGVkKG5hbWVzcGFjZSk7XG4gIGRlYnVnLnVzZUNvbG9ycyA9IGV4cG9ydHMudXNlQ29sb3JzKCk7XG4gIGRlYnVnLmNvbG9yID0gc2VsZWN0Q29sb3IobmFtZXNwYWNlKTtcbiAgZGVidWcuZGVzdHJveSA9IGRlc3Ryb3k7XG5cbiAgLy8gZW52LXNwZWNpZmljIGluaXRpYWxpemF0aW9uIGxvZ2ljIGZvciBkZWJ1ZyBpbnN0YW5jZXNcbiAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBleHBvcnRzLmluaXQpIHtcbiAgICBleHBvcnRzLmluaXQoZGVidWcpO1xuICB9XG5cbiAgZXhwb3J0cy5pbnN0YW5jZXMucHVzaChkZWJ1Zyk7XG5cbiAgcmV0dXJuIGRlYnVnO1xufVxuXG5mdW5jdGlvbiBkZXN0cm95ICgpIHtcbiAgdmFyIGluZGV4ID0gZXhwb3J0cy5pbnN0YW5jZXMuaW5kZXhPZih0aGlzKTtcbiAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgIGV4cG9ydHMuaW5zdGFuY2VzLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogRW5hYmxlcyBhIGRlYnVnIG1vZGUgYnkgbmFtZXNwYWNlcy4gVGhpcyBjYW4gaW5jbHVkZSBtb2Rlc1xuICogc2VwYXJhdGVkIGJ5IGEgY29sb24gYW5kIHdpbGRjYXJkcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICBleHBvcnRzLnNhdmUobmFtZXNwYWNlcyk7XG5cbiAgZXhwb3J0cy5uYW1lcyA9IFtdO1xuICBleHBvcnRzLnNraXBzID0gW107XG5cbiAgdmFyIGk7XG4gIHZhciBzcGxpdCA9ICh0eXBlb2YgbmFtZXNwYWNlcyA9PT0gJ3N0cmluZycgPyBuYW1lc3BhY2VzIDogJycpLnNwbGl0KC9bXFxzLF0rLyk7XG4gIHZhciBsZW4gPSBzcGxpdC5sZW5ndGg7XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKCFzcGxpdFtpXSkgY29udGludWU7IC8vIGlnbm9yZSBlbXB0eSBzdHJpbmdzXG4gICAgbmFtZXNwYWNlcyA9IHNwbGl0W2ldLnJlcGxhY2UoL1xcKi9nLCAnLio/Jyk7XG4gICAgaWYgKG5hbWVzcGFjZXNbMF0gPT09ICctJykge1xuICAgICAgZXhwb3J0cy5za2lwcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcy5zdWJzdHIoMSkgKyAnJCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcyArICckJykpO1xuICAgIH1cbiAgfVxuXG4gIGZvciAoaSA9IDA7IGkgPCBleHBvcnRzLmluc3RhbmNlcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpbnN0YW5jZSA9IGV4cG9ydHMuaW5zdGFuY2VzW2ldO1xuICAgIGluc3RhbmNlLmVuYWJsZWQgPSBleHBvcnRzLmVuYWJsZWQoaW5zdGFuY2UubmFtZXNwYWNlKTtcbiAgfVxufVxuXG4vKipcbiAqIERpc2FibGUgZGVidWcgb3V0cHV0LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgZXhwb3J0cy5lbmFibGUoJycpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gbW9kZSBuYW1lIGlzIGVuYWJsZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlZChuYW1lKSB7XG4gIGlmIChuYW1lW25hbWUubGVuZ3RoIC0gMV0gPT09ICcqJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHZhciBpLCBsZW47XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMuc2tpcHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5za2lwc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMubmFtZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5uYW1lc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIENvZXJjZSBgdmFsYC5cbiAqXG4gKiBAcGFyYW0ge01peGVkfSB2YWxcbiAqIEByZXR1cm4ge01peGVkfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29lcmNlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB2YWwuc3RhY2sgfHwgdmFsLm1lc3NhZ2U7XG4gIHJldHVybiB2YWw7XG59XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIHBhcnNldXJpID0gcmVxdWlyZSgncGFyc2V1cmknKTtcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tldC5pby1jbGllbnQ6dXJsJyk7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB1cmw7XG5cbi8qKlxuICogVVJMIHBhcnNlci5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge09iamVjdH0gQW4gb2JqZWN0IG1lYW50IHRvIG1pbWljIHdpbmRvdy5sb2NhdGlvbi5cbiAqICAgICAgICAgICAgICAgICBEZWZhdWx0cyB0byB3aW5kb3cubG9jYXRpb24uXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHVybCAodXJpLCBsb2MpIHtcbiAgdmFyIG9iaiA9IHVyaTtcblxuICAvLyBkZWZhdWx0IHRvIHdpbmRvdy5sb2NhdGlvblxuICBsb2MgPSBsb2MgfHwgZ2xvYmFsLmxvY2F0aW9uO1xuICBpZiAobnVsbCA9PSB1cmkpIHVyaSA9IGxvYy5wcm90b2NvbCArICcvLycgKyBsb2MuaG9zdDtcblxuICAvLyByZWxhdGl2ZSBwYXRoIHN1cHBvcnRcbiAgaWYgKCdzdHJpbmcnID09PSB0eXBlb2YgdXJpKSB7XG4gICAgaWYgKCcvJyA9PT0gdXJpLmNoYXJBdCgwKSkge1xuICAgICAgaWYgKCcvJyA9PT0gdXJpLmNoYXJBdCgxKSkge1xuICAgICAgICB1cmkgPSBsb2MucHJvdG9jb2wgKyB1cmk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cmkgPSBsb2MuaG9zdCArIHVyaTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIS9eKGh0dHBzP3x3c3M/KTpcXC9cXC8vLnRlc3QodXJpKSkge1xuICAgICAgZGVidWcoJ3Byb3RvY29sLWxlc3MgdXJsICVzJywgdXJpKTtcbiAgICAgIGlmICgndW5kZWZpbmVkJyAhPT0gdHlwZW9mIGxvYykge1xuICAgICAgICB1cmkgPSBsb2MucHJvdG9jb2wgKyAnLy8nICsgdXJpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXJpID0gJ2h0dHBzOi8vJyArIHVyaTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwYXJzZVxuICAgIGRlYnVnKCdwYXJzZSAlcycsIHVyaSk7XG4gICAgb2JqID0gcGFyc2V1cmkodXJpKTtcbiAgfVxuXG4gIC8vIG1ha2Ugc3VyZSB3ZSB0cmVhdCBgbG9jYWxob3N0OjgwYCBhbmQgYGxvY2FsaG9zdGAgZXF1YWxseVxuICBpZiAoIW9iai5wb3J0KSB7XG4gICAgaWYgKC9eKGh0dHB8d3MpJC8udGVzdChvYmoucHJvdG9jb2wpKSB7XG4gICAgICBvYmoucG9ydCA9ICc4MCc7XG4gICAgfSBlbHNlIGlmICgvXihodHRwfHdzKXMkLy50ZXN0KG9iai5wcm90b2NvbCkpIHtcbiAgICAgIG9iai5wb3J0ID0gJzQ0Myc7XG4gICAgfVxuICB9XG5cbiAgb2JqLnBhdGggPSBvYmoucGF0aCB8fCAnLyc7XG5cbiAgdmFyIGlwdjYgPSBvYmouaG9zdC5pbmRleE9mKCc6JykgIT09IC0xO1xuICB2YXIgaG9zdCA9IGlwdjYgPyAnWycgKyBvYmouaG9zdCArICddJyA6IG9iai5ob3N0O1xuXG4gIC8vIGRlZmluZSB1bmlxdWUgaWRcbiAgb2JqLmlkID0gb2JqLnByb3RvY29sICsgJzovLycgKyBob3N0ICsgJzonICsgb2JqLnBvcnQ7XG4gIC8vIGRlZmluZSBocmVmXG4gIG9iai5ocmVmID0gb2JqLnByb3RvY29sICsgJzovLycgKyBob3N0ICsgKGxvYyAmJiBsb2MucG9ydCA9PT0gb2JqLnBvcnQgPyAnJyA6ICgnOicgKyBvYmoucG9ydCkpO1xuXG4gIHJldHVybiBvYmo7XG59XG4iLCJcbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgdXJsID0gcmVxdWlyZSgnLi91cmwnKTtcbnZhciBwYXJzZXIgPSByZXF1aXJlKCdzb2NrZXQuaW8tcGFyc2VyJyk7XG52YXIgTWFuYWdlciA9IHJlcXVpcmUoJy4vbWFuYWdlcicpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2V0LmlvLWNsaWVudCcpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IGxvb2t1cDtcblxuLyoqXG4gKiBNYW5hZ2VycyBjYWNoZS5cbiAqL1xuXG52YXIgY2FjaGUgPSBleHBvcnRzLm1hbmFnZXJzID0ge307XG5cbi8qKlxuICogTG9va3MgdXAgYW4gZXhpc3RpbmcgYE1hbmFnZXJgIGZvciBtdWx0aXBsZXhpbmcuXG4gKiBJZiB0aGUgdXNlciBzdW1tb25zOlxuICpcbiAqICAgYGlvKCdodHRwOi8vbG9jYWxob3N0L2EnKTtgXG4gKiAgIGBpbygnaHR0cDovL2xvY2FsaG9zdC9iJyk7YFxuICpcbiAqIFdlIHJldXNlIHRoZSBleGlzdGluZyBpbnN0YW5jZSBiYXNlZCBvbiBzYW1lIHNjaGVtZS9wb3J0L2hvc3QsXG4gKiBhbmQgd2UgaW5pdGlhbGl6ZSBzb2NrZXRzIGZvciBlYWNoIG5hbWVzcGFjZS5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGxvb2t1cCAodXJpLCBvcHRzKSB7XG4gIGlmICh0eXBlb2YgdXJpID09PSAnb2JqZWN0Jykge1xuICAgIG9wdHMgPSB1cmk7XG4gICAgdXJpID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgb3B0cyA9IG9wdHMgfHwge307XG5cbiAgdmFyIHBhcnNlZCA9IHVybCh1cmkpO1xuICB2YXIgc291cmNlID0gcGFyc2VkLnNvdXJjZTtcbiAgdmFyIGlkID0gcGFyc2VkLmlkO1xuICB2YXIgcGF0aCA9IHBhcnNlZC5wYXRoO1xuICB2YXIgc2FtZU5hbWVzcGFjZSA9IGNhY2hlW2lkXSAmJiBwYXRoIGluIGNhY2hlW2lkXS5uc3BzO1xuICB2YXIgbmV3Q29ubmVjdGlvbiA9IG9wdHMuZm9yY2VOZXcgfHwgb3B0c1snZm9yY2UgbmV3IGNvbm5lY3Rpb24nXSB8fFxuICAgICAgICAgICAgICAgICAgICAgIGZhbHNlID09PSBvcHRzLm11bHRpcGxleCB8fCBzYW1lTmFtZXNwYWNlO1xuXG4gIHZhciBpbztcblxuICBpZiAobmV3Q29ubmVjdGlvbikge1xuICAgIGRlYnVnKCdpZ25vcmluZyBzb2NrZXQgY2FjaGUgZm9yICVzJywgc291cmNlKTtcbiAgICBpbyA9IE1hbmFnZXIoc291cmNlLCBvcHRzKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIWNhY2hlW2lkXSkge1xuICAgICAgZGVidWcoJ25ldyBpbyBpbnN0YW5jZSBmb3IgJXMnLCBzb3VyY2UpO1xuICAgICAgY2FjaGVbaWRdID0gTWFuYWdlcihzb3VyY2UsIG9wdHMpO1xuICAgIH1cbiAgICBpbyA9IGNhY2hlW2lkXTtcbiAgfVxuICBpZiAocGFyc2VkLnF1ZXJ5ICYmICFvcHRzLnF1ZXJ5KSB7XG4gICAgb3B0cy5xdWVyeSA9IHBhcnNlZC5xdWVyeTtcbiAgfVxuICByZXR1cm4gaW8uc29ja2V0KHBhcnNlZC5wYXRoLCBvcHRzKTtcbn1cblxuLyoqXG4gKiBQcm90b2NvbCB2ZXJzaW9uLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cy5wcm90b2NvbCA9IHBhcnNlci5wcm90b2NvbDtcblxuLyoqXG4gKiBgY29ubmVjdGAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVyaVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLmNvbm5lY3QgPSBsb29rdXA7XG5cbi8qKlxuICogRXhwb3NlIGNvbnN0cnVjdG9ycyBmb3Igc3RhbmRhbG9uZSBidWlsZC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmV4cG9ydHMuTWFuYWdlciA9IHJlcXVpcmUoJy4vbWFuYWdlcicpO1xuZXhwb3J0cy5Tb2NrZXQgPSByZXF1aXJlKCcuL3NvY2tldCcpO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBpbyBmcm9tICdzb2NrZXQuaW8tY2xpZW50JztcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdG9jayBleHRlbmRzIENvbXBvbmVudCB7XG5cdHNvY2tldElvID0gaW8oSE9TVF9OQU1FLCB7XG5cdFx0c2VjdXJlOiBOT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nXG5cdH0pO1xuXHRzdGF0ZSA9IHtcblx0fTtcblx0c3R5bGVzID0ge1xuXHR9XG5cblx0Y29uc3RydWN0b3IocHJvcHMpIHtcblx0XHRzdXBlcihwcm9wcyk7XG5cdH1cblxuXHRjb21wb25lbnREaWRNb3VudCgpIHtcblxuXHR9XG5cblxuXG5cdHJlbmRlcigpIHtcblx0XHRyZXR1cm4gYGhlbGxvYFxuXHR9XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2syID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrJyk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2szID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTtcblxudmFyIF9jb2xvcnMgPSByZXF1aXJlKCcuL2NvbG9ycycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgVHlwb2dyYXBoeSA9IGZ1bmN0aW9uIFR5cG9ncmFwaHkoKSB7XG4gICgwLCBfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsIFR5cG9ncmFwaHkpO1xuXG4gIC8vIHRleHQgY29sb3JzXG4gIHRoaXMudGV4dEZ1bGxCbGFjayA9IF9jb2xvcnMuZnVsbEJsYWNrO1xuICB0aGlzLnRleHREYXJrQmxhY2sgPSBfY29sb3JzLmRhcmtCbGFjaztcbiAgdGhpcy50ZXh0TGlnaHRCbGFjayA9IF9jb2xvcnMubGlnaHRCbGFjaztcbiAgdGhpcy50ZXh0TWluQmxhY2sgPSBfY29sb3JzLm1pbkJsYWNrO1xuICB0aGlzLnRleHRGdWxsV2hpdGUgPSBfY29sb3JzLmZ1bGxXaGl0ZTtcbiAgdGhpcy50ZXh0RGFya1doaXRlID0gX2NvbG9ycy5kYXJrV2hpdGU7XG4gIHRoaXMudGV4dExpZ2h0V2hpdGUgPSBfY29sb3JzLmxpZ2h0V2hpdGU7XG5cbiAgLy8gZm9udCB3ZWlnaHRcbiAgdGhpcy5mb250V2VpZ2h0TGlnaHQgPSAzMDA7XG4gIHRoaXMuZm9udFdlaWdodE5vcm1hbCA9IDQwMDtcbiAgdGhpcy5mb250V2VpZ2h0TWVkaXVtID0gNTAwO1xuXG4gIHRoaXMuZm9udFN0eWxlQnV0dG9uRm9udFNpemUgPSAxNDtcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IG5ldyBUeXBvZ3JhcGh5KCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBjb21wb3NlO1xuZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgZnVuY3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICAgIHJldHVybiBhcmc7XG4gICAgfTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gZnVuY3NbMF07XG4gIH1cblxuICByZXR1cm4gZnVuY3MucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhKGIuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpKTtcbiAgICB9O1xuICB9KTtcbn0iLCIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdrZXlzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCkge1xuICAgIHJldHVybiAka2V5cyh0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmtleXM7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2tleXNcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfa2V5cyA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cycpO1xuXG52YXIgX2tleXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfa2V5cyk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHJ0bDtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHJlVHJhbnNsYXRlID0gLygoXnxcXHMpdHJhbnNsYXRlKDNkfFgpP1xcKCkoXFwtP1tcXGRdKykvO1xudmFyIHJlU2tldyA9IC8oKF58XFxzKXNrZXcoeHx5KT9cXCgpXFxzKihcXC0/W1xcZF0rKShkZWd8cmFkfGdyYWQpKCxcXHMqKFxcLT9bXFxkXSspKGRlZ3xyYWR8Z3JhZCkpPy87XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBlbnN1cmVzIHRoYXQgYHN0eWxlYCBzdXBwb3J0cyBib3RoIGx0ciBhbmQgcnRsIGRpcmVjdGlvbnMgYnlcbiAqIGNoZWNraW5nIGBzdHlsZUNvbnN0YW50c2AgaW4gYG11aVRoZW1lYCBhbmQgcmVwbGFjaW5nIGF0dHJpYnV0ZSBrZXlzIGlmXG4gKiBuZWNlc3NhcnkuXG4gKi9cbmZ1bmN0aW9uIHJ0bChtdWlUaGVtZSkge1xuICBpZiAobXVpVGhlbWUuaXNSdGwpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHN0eWxlKSB7XG4gICAgICBpZiAoc3R5bGUuZGlyZWN0aW9uSW52YXJpYW50ID09PSB0cnVlKSB7XG4gICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgIH1cblxuICAgICAgdmFyIGZsaXBwZWRBdHRyaWJ1dGVzID0ge1xuICAgICAgICAvLyBLZXlzIGFuZCB0aGVpciByZXBsYWNlbWVudHMuXG4gICAgICAgIHJpZ2h0OiAnbGVmdCcsXG4gICAgICAgIGxlZnQ6ICdyaWdodCcsXG4gICAgICAgIG1hcmdpblJpZ2h0OiAnbWFyZ2luTGVmdCcsXG4gICAgICAgIG1hcmdpbkxlZnQ6ICdtYXJnaW5SaWdodCcsXG4gICAgICAgIHBhZGRpbmdSaWdodDogJ3BhZGRpbmdMZWZ0JyxcbiAgICAgICAgcGFkZGluZ0xlZnQ6ICdwYWRkaW5nUmlnaHQnLFxuICAgICAgICBib3JkZXJSaWdodDogJ2JvcmRlckxlZnQnLFxuICAgICAgICBib3JkZXJMZWZ0OiAnYm9yZGVyUmlnaHQnXG4gICAgICB9O1xuXG4gICAgICB2YXIgbmV3U3R5bGUgPSB7fTtcblxuICAgICAgKDAsIF9rZXlzMi5kZWZhdWx0KShzdHlsZSkuZm9yRWFjaChmdW5jdGlvbiAoYXR0cmlidXRlKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHN0eWxlW2F0dHJpYnV0ZV07XG4gICAgICAgIHZhciBrZXkgPSBhdHRyaWJ1dGU7XG5cbiAgICAgICAgaWYgKGZsaXBwZWRBdHRyaWJ1dGVzLmhhc093blByb3BlcnR5KGF0dHJpYnV0ZSkpIHtcbiAgICAgICAgICBrZXkgPSBmbGlwcGVkQXR0cmlidXRlc1thdHRyaWJ1dGVdO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoIChhdHRyaWJ1dGUpIHtcbiAgICAgICAgICBjYXNlICdmbG9hdCc6XG4gICAgICAgICAgY2FzZSAndGV4dEFsaWduJzpcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gJ3JpZ2h0Jykge1xuICAgICAgICAgICAgICB2YWx1ZSA9ICdsZWZ0JztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09ICdsZWZ0Jykge1xuICAgICAgICAgICAgICB2YWx1ZSA9ICdyaWdodCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgJ2RpcmVjdGlvbic6XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09ICdsdHInKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gJ3J0bCc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSAncnRsJykge1xuICAgICAgICAgICAgICB2YWx1ZSA9ICdsdHInO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlICd0cmFuc2Zvcm0nOlxuICAgICAgICAgICAgaWYgKCF2YWx1ZSkgYnJlYWs7XG4gICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IHZvaWQgMDtcbiAgICAgICAgICAgIGlmIChtYXRjaGVzID0gdmFsdWUubWF0Y2gocmVUcmFuc2xhdGUpKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShtYXRjaGVzWzBdLCBtYXRjaGVzWzFdICsgLXBhcnNlRmxvYXQobWF0Y2hlc1s0XSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1hdGNoZXMgPSB2YWx1ZS5tYXRjaChyZVNrZXcpKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShtYXRjaGVzWzBdLCBtYXRjaGVzWzFdICsgLXBhcnNlRmxvYXQobWF0Y2hlc1s0XSkgKyBtYXRjaGVzWzVdICsgbWF0Y2hlc1s2XSA/ICcsICcgKyAoLXBhcnNlRmxvYXQobWF0Y2hlc1s3XSkgKyBtYXRjaGVzWzhdKSA6ICcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAndHJhbnNmb3JtT3JpZ2luJzpcbiAgICAgICAgICAgIGlmICghdmFsdWUpIGJyZWFrO1xuICAgICAgICAgICAgaWYgKHZhbHVlLmluZGV4T2YoJ3JpZ2h0JykgPiAtMSkge1xuICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoJ3JpZ2h0JywgJ2xlZnQnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUuaW5kZXhPZignbGVmdCcpID4gLTEpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKCdsZWZ0JywgJ3JpZ2h0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIG5ld1N0eWxlW2tleV0gPSB2YWx1ZTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gbmV3U3R5bGU7XG4gICAgfTtcbiAgfVxufSIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNhbGxPbmNlO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIENBTExFRF9PTkNFID0gJ211aVByZXBhcmVkJztcblxuZnVuY3Rpb24gY2FsbE9uY2UoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChzdHlsZSkge1xuICAgICAgaWYgKHN0eWxlW0NBTExFRF9PTkNFXSkge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKGZhbHNlLCAnTWF0ZXJpYWwtVUk6IFlvdSBjYW5ub3QgY2FsbCBwcmVwYXJlU3R5bGVzKCkgb24gdGhlIHNhbWUgc3R5bGUgb2JqZWN0IG1vcmUgdGhhbiBvbmNlLicpIDogdm9pZCAwO1xuICAgICAgfVxuICAgICAgc3R5bGVbQ0FMTEVEX09OQ0VdID0gdHJ1ZTtcbiAgICAgIHJldHVybiBzdHlsZTtcbiAgICB9O1xuICB9XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdHJhbnNpdGlvbjtcblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJ2Nzcy1pbi1qcy11dGlscy9saWIvaHlwaGVuYXRlUHJvcGVydHknKTtcblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVQcm9wZXJ0eSk7XG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlID0gcmVxdWlyZSgnY3NzLWluLWpzLXV0aWxzL2xpYi9pc1ByZWZpeGVkVmFsdWUnKTtcblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXNQcmVmaXhlZFZhbHVlKTtcblxudmFyIF9jYXBpdGFsaXplU3RyaW5nID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvY2FwaXRhbGl6ZVN0cmluZycpO1xuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2FwaXRhbGl6ZVN0cmluZyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICB0cmFuc2l0aW9uOiB0cnVlLFxuICB0cmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb246IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvbjogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvblByb3BlcnR5OiB0cnVlXG59O1xuXG5cbnZhciBwcmVmaXhNYXBwaW5nID0ge1xuICBXZWJraXQ6ICctd2Via2l0LScsXG4gIE1vejogJy1tb3otJyxcbiAgbXM6ICctbXMtJ1xufTtcblxuZnVuY3Rpb24gcHJlZml4VmFsdWUodmFsdWUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIGlmICgoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgLy8gb25seSBzcGxpdCBtdWx0aSB2YWx1ZXMsIG5vdCBjdWJpYyBiZXppZXJzXG4gIHZhciBtdWx0aXBsZVZhbHVlcyA9IHZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtdWx0aXBsZVZhbHVlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciBzaW5nbGVWYWx1ZSA9IG11bHRpcGxlVmFsdWVzW2ldO1xuICAgIHZhciB2YWx1ZXMgPSBbc2luZ2xlVmFsdWVdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gICAgICB2YXIgZGFzaENhc2VQcm9wZXJ0eSA9ICgwLCBfaHlwaGVuYXRlUHJvcGVydHkyLmRlZmF1bHQpKHByb3BlcnR5KTtcblxuICAgICAgaWYgKHNpbmdsZVZhbHVlLmluZGV4T2YoZGFzaENhc2VQcm9wZXJ0eSkgPiAtMSAmJiBkYXNoQ2FzZVByb3BlcnR5ICE9PSAnb3JkZXInKSB7XG4gICAgICAgIHZhciBwcmVmaXhlcyA9IHByb3BlcnR5UHJlZml4TWFwW3Byb3BlcnR5XTtcbiAgICAgICAgZm9yICh2YXIgaiA9IDAsIHBMZW4gPSBwcmVmaXhlcy5sZW5ndGg7IGogPCBwTGVuOyArK2opIHtcbiAgICAgICAgICAvLyBqb2luIGFsbCBwcmVmaXhlcyBhbmQgY3JlYXRlIGEgbmV3IHZhbHVlXG4gICAgICAgICAgdmFsdWVzLnVuc2hpZnQoc2luZ2xlVmFsdWUucmVwbGFjZShkYXNoQ2FzZVByb3BlcnR5LCBwcmVmaXhNYXBwaW5nW3ByZWZpeGVzW2pdXSArIGRhc2hDYXNlUHJvcGVydHkpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIG11bHRpcGxlVmFsdWVzW2ldID0gdmFsdWVzLmpvaW4oJywnKTtcbiAgfVxuXG4gIHJldHVybiBtdWx0aXBsZVZhbHVlcy5qb2luKCcsJyk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zaXRpb24ocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJvcGVydHlQcmVmaXhNYXApIHtcbiAgLy8gYWxzbyBjaGVjayBmb3IgYWxyZWFkeSBwcmVmaXhlZCB0cmFuc2l0aW9uc1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiBwcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBvdXRwdXRWYWx1ZSA9IHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCk7XG4gICAgLy8gaWYgdGhlIHByb3BlcnR5IGlzIGFscmVhZHkgcHJlZml4ZWRcbiAgICB2YXIgd2Via2l0T3V0cHV0ID0gb3V0cHV0VmFsdWUuc3BsaXQoLywoPyFbXigpXSooPzpcXChbXigpXSpcXCkpP1xcKSkvZykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiAhLy1tb3otfC1tcy0vLnRlc3QodmFsKTtcbiAgICB9KS5qb2luKCcsJyk7XG5cbiAgICBpZiAocHJvcGVydHkuaW5kZXhPZignV2Via2l0JykgPiAtMSkge1xuICAgICAgcmV0dXJuIHdlYmtpdE91dHB1dDtcbiAgICB9XG5cbiAgICB2YXIgbW96T3V0cHV0ID0gb3V0cHV0VmFsdWUuc3BsaXQoLywoPyFbXigpXSooPzpcXChbXigpXSpcXCkpP1xcKSkvZykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiAhLy13ZWJraXQtfC1tcy0vLnRlc3QodmFsKTtcbiAgICB9KS5qb2luKCcsJyk7XG5cbiAgICBpZiAocHJvcGVydHkuaW5kZXhPZignTW96JykgPiAtMSkge1xuICAgICAgcmV0dXJuIG1vek91dHB1dDtcbiAgICB9XG5cbiAgICBzdHlsZVsnV2Via2l0JyArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IHdlYmtpdE91dHB1dDtcbiAgICBzdHlsZVsnTW96JyArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IG1vek91dHB1dDtcbiAgICByZXR1cm4gb3V0cHV0VmFsdWU7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JhZGllbnQ7XG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlID0gcmVxdWlyZSgnY3NzLWluLWpzLXV0aWxzL2xpYi9pc1ByZWZpeGVkVmFsdWUnKTtcblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXNQcmVmaXhlZFZhbHVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IC9saW5lYXItZ3JhZGllbnR8cmFkaWFsLWdyYWRpZW50fHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnR8cmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudC87XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleGJveE9sZDtcbnZhciBhbHRlcm5hdGl2ZVZhbHVlcyA9IHtcbiAgJ3NwYWNlLWFyb3VuZCc6ICdqdXN0aWZ5JyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ2ZsZXgtZW5kJzogJ2VuZCcsXG4gICd3cmFwLXJldmVyc2UnOiAnbXVsdGlwbGUnLFxuICB3cmFwOiAnbXVsdGlwbGUnXG59O1xuXG52YXIgYWx0ZXJuYXRpdmVQcm9wcyA9IHtcbiAgYWxpZ25JdGVtczogJ1dlYmtpdEJveEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdXZWJraXRCb3hQYWNrJyxcbiAgZmxleFdyYXA6ICdXZWJraXRCb3hMaW5lcydcbn07XG5cbmZ1bmN0aW9uIGZsZXhib3hPbGQocHJvcGVydHksIHZhbHVlLCBzdHlsZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdmbGV4RGlyZWN0aW9uJyAmJiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKHZhbHVlLmluZGV4T2YoJ2NvbHVtbicpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveE9yaWVudCA9ICd2ZXJ0aWNhbCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveE9yaWVudCA9ICdob3Jpem9udGFsJztcbiAgICB9XG4gICAgaWYgKHZhbHVlLmluZGV4T2YoJ3JldmVyc2UnKSA+IC0xKSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hEaXJlY3Rpb24gPSAncmV2ZXJzZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdub3JtYWwnO1xuICAgIH1cbiAgfVxuICBpZiAoYWx0ZXJuYXRpdmVQcm9wcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXhib3hJRTtcbnZhciBhbHRlcm5hdGl2ZVZhbHVlcyA9IHtcbiAgJ3NwYWNlLWFyb3VuZCc6ICdkaXN0cmlidXRlJyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ2ZsZXgtZW5kJzogJ2VuZCdcbn07XG52YXIgYWx0ZXJuYXRpdmVQcm9wcyA9IHtcbiAgYWxpZ25Db250ZW50OiAnbXNGbGV4TGluZVBhY2snLFxuICBhbGlnblNlbGY6ICdtc0ZsZXhJdGVtQWxpZ24nLFxuICBhbGlnbkl0ZW1zOiAnbXNGbGV4QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ21zRmxleFBhY2snLFxuICBvcmRlcjogJ21zRmxleE9yZGVyJyxcbiAgZmxleEdyb3c6ICdtc0ZsZXhQb3NpdGl2ZScsXG4gIGZsZXhTaHJpbms6ICdtc0ZsZXhOZWdhdGl2ZScsXG4gIGZsZXhCYXNpczogJ21zRmxleFByZWZlcnJlZFNpemUnXG59O1xuXG5mdW5jdGlvbiBmbGV4Ym94SUUocHJvcGVydHksIHZhbHVlLCBzdHlsZSkge1xuICBpZiAoYWx0ZXJuYXRpdmVQcm9wcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXg7XG52YXIgdmFsdWVzID0ge1xuICBmbGV4OiBbJy13ZWJraXQtYm94JywgJy1tb3otYm94JywgJy1tcy1mbGV4Ym94JywgJy13ZWJraXQtZmxleCcsICdmbGV4J10sXG4gICdpbmxpbmUtZmxleCc6IFsnLXdlYmtpdC1pbmxpbmUtYm94JywgJy1tb3otaW5saW5lLWJveCcsICctbXMtaW5saW5lLWZsZXhib3gnLCAnLXdlYmtpdC1pbmxpbmUtZmxleCcsICdpbmxpbmUtZmxleCddXG59O1xuXG5mdW5jdGlvbiBmbGV4KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdkaXNwbGF5JyAmJiB2YWx1ZXMuaGFzT3duUHJvcGVydHkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlc1t2YWx1ZV07XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNhbGM7XG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlID0gcmVxdWlyZSgnY3NzLWluLWpzLXV0aWxzL2xpYi9pc1ByZWZpeGVkVmFsdWUnKTtcblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXNQcmVmaXhlZFZhbHVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcbmZ1bmN0aW9uIGNhbGMocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICEoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpICYmIHZhbHVlLmluZGV4T2YoJ2NhbGMoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2NhbGNcXCgvZywgcHJlZml4ICsgJ2NhbGMoJyk7XG4gICAgfSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jYWxjID0gcmVxdWlyZSgnaW5saW5lLXN0eWxlLXByZWZpeGVyL3N0YXRpYy9wbHVnaW5zL2NhbGMnKTtcblxudmFyIF9jYWxjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NhbGMpO1xuXG52YXIgX2ZsZXggPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvZmxleCcpO1xuXG52YXIgX2ZsZXgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmxleCk7XG5cbnZhciBfZmxleGJveElFID0gcmVxdWlyZSgnaW5saW5lLXN0eWxlLXByZWZpeGVyL3N0YXRpYy9wbHVnaW5zL2ZsZXhib3hJRScpO1xuXG52YXIgX2ZsZXhib3hJRTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9mbGV4Ym94SUUpO1xuXG52YXIgX2ZsZXhib3hPbGQgPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvZmxleGJveE9sZCcpO1xuXG52YXIgX2ZsZXhib3hPbGQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmxleGJveE9sZCk7XG5cbnZhciBfZ3JhZGllbnQgPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvZ3JhZGllbnQnKTtcblxudmFyIF9ncmFkaWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncmFkaWVudCk7XG5cbnZhciBfc2l6aW5nID0gcmVxdWlyZSgnaW5saW5lLXN0eWxlLXByZWZpeGVyL3N0YXRpYy9wbHVnaW5zL3NpemluZycpO1xuXG52YXIgX3NpemluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zaXppbmcpO1xuXG52YXIgX3RyYW5zaXRpb24gPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvc3RhdGljL3BsdWdpbnMvdHJhbnNpdGlvbicpO1xuXG52YXIgX3RyYW5zaXRpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHJhbnNpdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgcGx1Z2luczogW19jYWxjMi5kZWZhdWx0LCBfZmxleDIuZGVmYXVsdCwgX2ZsZXhib3hJRTIuZGVmYXVsdCwgX2ZsZXhib3hPbGQyLmRlZmF1bHQsIF9ncmFkaWVudDIuZGVmYXVsdCwgX3NpemluZzIuZGVmYXVsdCwgX3RyYW5zaXRpb24yLmRlZmF1bHRdLFxuICBwcmVmaXhNYXA6IHsgXCJ0cmFuc2Zvcm1cIjogW1wiV2Via2l0XCIsIFwibXNcIl0sIFwidHJhbnNmb3JtT3JpZ2luXCI6IFtcIldlYmtpdFwiLCBcIm1zXCJdLCBcInRyYW5zZm9ybU9yaWdpblhcIjogW1wiV2Via2l0XCIsIFwibXNcIl0sIFwidHJhbnNmb3JtT3JpZ2luWVwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJiYWNrZmFjZVZpc2liaWxpdHlcIjogW1wiV2Via2l0XCJdLCBcInBlcnNwZWN0aXZlXCI6IFtcIldlYmtpdFwiXSwgXCJwZXJzcGVjdGl2ZU9yaWdpblwiOiBbXCJXZWJraXRcIl0sIFwidHJhbnNmb3JtU3R5bGVcIjogW1wiV2Via2l0XCJdLCBcInRyYW5zZm9ybU9yaWdpblpcIjogW1wiV2Via2l0XCJdLCBcImFuaW1hdGlvblwiOiBbXCJXZWJraXRcIl0sIFwiYW5pbWF0aW9uRGVsYXlcIjogW1wiV2Via2l0XCJdLCBcImFuaW1hdGlvbkRpcmVjdGlvblwiOiBbXCJXZWJraXRcIl0sIFwiYW5pbWF0aW9uRmlsbE1vZGVcIjogW1wiV2Via2l0XCJdLCBcImFuaW1hdGlvbkR1cmF0aW9uXCI6IFtcIldlYmtpdFwiXSwgXCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiBbXCJXZWJraXRcIl0sIFwiYW5pbWF0aW9uTmFtZVwiOiBbXCJXZWJraXRcIl0sIFwiYW5pbWF0aW9uUGxheVN0YXRlXCI6IFtcIldlYmtpdFwiXSwgXCJhbmltYXRpb25UaW1pbmdGdW5jdGlvblwiOiBbXCJXZWJraXRcIl0sIFwiYXBwZWFyYW5jZVwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwidXNlclNlbGVjdFwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXSwgXCJmb250S2VybmluZ1wiOiBbXCJXZWJraXRcIl0sIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogW1wiV2Via2l0XCJdLCBcInRleHRFbXBoYXNpc1wiOiBbXCJXZWJraXRcIl0sIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogW1wiV2Via2l0XCJdLCBcInRleHRFbXBoYXNpc0NvbG9yXCI6IFtcIldlYmtpdFwiXSwgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogW1wiV2Via2l0XCJdLCBcImNsaXBQYXRoXCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrSW1hZ2VcIjogW1wiV2Via2l0XCJdLCBcIm1hc2tNb2RlXCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrUmVwZWF0XCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrUG9zaXRpb25cIjogW1wiV2Via2l0XCJdLCBcIm1hc2tDbGlwXCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrT3JpZ2luXCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrU2l6ZVwiOiBbXCJXZWJraXRcIl0sIFwibWFza0NvbXBvc2l0ZVwiOiBbXCJXZWJraXRcIl0sIFwibWFza1wiOiBbXCJXZWJraXRcIl0sIFwibWFza0JvcmRlclNvdXJjZVwiOiBbXCJXZWJraXRcIl0sIFwibWFza0JvcmRlck1vZGVcIjogW1wiV2Via2l0XCJdLCBcIm1hc2tCb3JkZXJTbGljZVwiOiBbXCJXZWJraXRcIl0sIFwibWFza0JvcmRlcldpZHRoXCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrQm9yZGVyXCI6IFtcIldlYmtpdFwiXSwgXCJtYXNrVHlwZVwiOiBbXCJXZWJraXRcIl0sIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwidGV4dERlY29yYXRpb25Ta2lwXCI6IFtcIldlYmtpdFwiLCBcIk1velwiXSwgXCJ0ZXh0RGVjb3JhdGlvbkxpbmVcIjogW1wiV2Via2l0XCIsIFwiTW96XCJdLCBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogW1wiV2Via2l0XCIsIFwiTW96XCJdLCBcImZpbHRlclwiOiBbXCJXZWJraXRcIl0sIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwiYnJlYWtBZnRlclwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXSwgXCJicmVha0JlZm9yZVwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXSwgXCJicmVha0luc2lkZVwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXSwgXCJjb2x1bW5Db3VudFwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwiY29sdW1uRmlsbFwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwiY29sdW1uR2FwXCI6IFtcIldlYmtpdFwiLCBcIk1velwiXSwgXCJjb2x1bW5SdWxlXCI6IFtcIldlYmtpdFwiLCBcIk1velwiXSwgXCJjb2x1bW5SdWxlQ29sb3JcIjogW1wiV2Via2l0XCIsIFwiTW96XCJdLCBcImNvbHVtblJ1bGVTdHlsZVwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwiY29sdW1uUnVsZVdpZHRoXCI6IFtcIldlYmtpdFwiLCBcIk1velwiXSwgXCJjb2x1bW5zXCI6IFtcIldlYmtpdFwiLCBcIk1velwiXSwgXCJjb2x1bW5TcGFuXCI6IFtcIldlYmtpdFwiLCBcIk1velwiXSwgXCJjb2x1bW5XaWR0aFwiOiBbXCJXZWJraXRcIiwgXCJNb3pcIl0sIFwiZmxleFwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJmbGV4QmFzaXNcIjogW1wiV2Via2l0XCJdLCBcImZsZXhEaXJlY3Rpb25cIjogW1wiV2Via2l0XCIsIFwibXNcIl0sIFwiZmxleEdyb3dcIjogW1wiV2Via2l0XCJdLCBcImZsZXhGbG93XCI6IFtcIldlYmtpdFwiLCBcIm1zXCJdLCBcImZsZXhTaHJpbmtcIjogW1wiV2Via2l0XCJdLCBcImZsZXhXcmFwXCI6IFtcIldlYmtpdFwiLCBcIm1zXCJdLCBcImFsaWduQ29udGVudFwiOiBbXCJXZWJraXRcIl0sIFwiYWxpZ25JdGVtc1wiOiBbXCJXZWJraXRcIl0sIFwiYWxpZ25TZWxmXCI6IFtcIldlYmtpdFwiXSwgXCJqdXN0aWZ5Q29udGVudFwiOiBbXCJXZWJraXRcIl0sIFwib3JkZXJcIjogW1wiV2Via2l0XCJdLCBcInRyYW5zaXRpb25EZWxheVwiOiBbXCJXZWJraXRcIl0sIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IFtcIldlYmtpdFwiXSwgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogW1wiV2Via2l0XCJdLCBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiBbXCJXZWJraXRcIl0sIFwiYmFja2Ryb3BGaWx0ZXJcIjogW1wiV2Via2l0XCJdLCBcInNjcm9sbFNuYXBUeXBlXCI6IFtcIldlYmtpdFwiLCBcIm1zXCJdLCBcInNjcm9sbFNuYXBQb2ludHNYXCI6IFtcIldlYmtpdFwiLCBcIm1zXCJdLCBcInNjcm9sbFNuYXBQb2ludHNZXCI6IFtcIldlYmtpdFwiLCBcIm1zXCJdLCBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IFtcIldlYmtpdFwiXSwgXCJzaGFwZUltYWdlTWFyZ2luXCI6IFtcIldlYmtpdFwiXSwgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiBbXCJXZWJraXRcIl0sIFwiaHlwaGVuc1wiOiBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXSwgXCJmbG93SW50b1wiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJmbG93RnJvbVwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJyZWdpb25GcmFnbWVudFwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJib3hTaXppbmdcIjogW1wiTW96XCJdLCBcInRleHRBbGlnbkxhc3RcIjogW1wiTW96XCJdLCBcInRhYlNpemVcIjogW1wiTW96XCJdLCBcIndyYXBGbG93XCI6IFtcIm1zXCJdLCBcIndyYXBUaHJvdWdoXCI6IFtcIm1zXCJdLCBcIndyYXBNYXJnaW5cIjogW1wibXNcIl0sIFwidG91Y2hBY3Rpb25cIjogW1wibXNcIl0sIFwiZ3JpZFRlbXBsYXRlQ29sdW1uc1wiOiBbXCJtc1wiXSwgXCJncmlkVGVtcGxhdGVSb3dzXCI6IFtcIm1zXCJdLCBcImdyaWRUZW1wbGF0ZUFyZWFzXCI6IFtcIm1zXCJdLCBcImdyaWRUZW1wbGF0ZVwiOiBbXCJtc1wiXSwgXCJncmlkQXV0b0NvbHVtbnNcIjogW1wibXNcIl0sIFwiZ3JpZEF1dG9Sb3dzXCI6IFtcIm1zXCJdLCBcImdyaWRBdXRvRmxvd1wiOiBbXCJtc1wiXSwgXCJncmlkXCI6IFtcIm1zXCJdLCBcImdyaWRSb3dTdGFydFwiOiBbXCJtc1wiXSwgXCJncmlkQ29sdW1uU3RhcnRcIjogW1wibXNcIl0sIFwiZ3JpZFJvd0VuZFwiOiBbXCJtc1wiXSwgXCJncmlkUm93XCI6IFtcIm1zXCJdLCBcImdyaWRDb2x1bW5cIjogW1wibXNcIl0sIFwiZ3JpZENvbHVtbkVuZFwiOiBbXCJtc1wiXSwgXCJncmlkQ29sdW1uR2FwXCI6IFtcIm1zXCJdLCBcImdyaWRSb3dHYXBcIjogW1wibXNcIl0sIFwiZ3JpZEFyZWFcIjogW1wibXNcIl0sIFwiZ3JpZEdhcFwiOiBbXCJtc1wiXSwgXCJ0ZXh0U2l6ZUFkanVzdFwiOiBbXCJXZWJraXRcIiwgXCJtc1wiXSwgXCJib3JkZXJJbWFnZVwiOiBbXCJXZWJraXRcIl0sIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogW1wiV2Via2l0XCJdLCBcImJvcmRlckltYWdlUmVwZWF0XCI6IFtcIldlYmtpdFwiXSwgXCJib3JkZXJJbWFnZVNsaWNlXCI6IFtcIldlYmtpdFwiXSwgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiBbXCJXZWJraXRcIl0sIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiBbXCJXZWJraXRcIl0gfVxufTsgLyogZXNsaW50LWRpc2FibGUgKi8iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIGh5cGhlbmF0ZVN0eWxlTmFtZShzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyaW5nIGluIGNhY2hlXG4gICAgPyBjYWNoZVtzdHJpbmddXG4gICAgOiBjYWNoZVtzdHJpbmddID0gc3RyaW5nXG4gICAgICAucmVwbGFjZSh1cHBlcmNhc2VQYXR0ZXJuLCAnLSQmJylcbiAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAucmVwbGFjZShtc1BhdHRlcm4sICctbXMtJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaHlwaGVuYXRlU3R5bGVOYW1lO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdHJhbnNpdGlvbjtcblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJ2Nzcy1pbi1qcy11dGlscy9saWIvaHlwaGVuYXRlUHJvcGVydHknKTtcblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVQcm9wZXJ0eSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICB0cmFuc2l0aW9uOiB0cnVlLFxuICB0cmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb246IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvbjogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvblByb3BlcnR5OiB0cnVlXG59O1xuXG5cbnZhciByZXF1aXJlc1ByZWZpeERhc2hDYXNlZCA9IHZvaWQgMDtcblxuZnVuY3Rpb24gdHJhbnNpdGlvbihwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBfcmVmKSB7XG4gIHZhciBjc3NQcmVmaXggPSBfcmVmLmNzc1ByZWZpeCxcbiAgICAgIGtlZXBVbnByZWZpeGVkID0gX3JlZi5rZWVwVW5wcmVmaXhlZCxcbiAgICAgIHJlcXVpcmVzUHJlZml4ID0gX3JlZi5yZXF1aXJlc1ByZWZpeDtcblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiBwcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIC8vIG1lbW9pemUgdGhlIHByZWZpeCBhcnJheSBmb3IgbGF0ZXIgdXNlXG4gICAgaWYgKCFyZXF1aXJlc1ByZWZpeERhc2hDYXNlZCkge1xuICAgICAgcmVxdWlyZXNQcmVmaXhEYXNoQ2FzZWQgPSBPYmplY3Qua2V5cyhyZXF1aXJlc1ByZWZpeCkubWFwKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgIHJldHVybiAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICAgIHZhciBtdWx0aXBsZVZhbHVlcyA9IHZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpO1xuXG4gICAgcmVxdWlyZXNQcmVmaXhEYXNoQ2FzZWQuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgICAgbXVsdGlwbGVWYWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsLCBpbmRleCkge1xuICAgICAgICBpZiAodmFsLmluZGV4T2YocHJvcCkgPiAtMSAmJiBwcm9wICE9PSAnb3JkZXInKSB7XG4gICAgICAgICAgbXVsdGlwbGVWYWx1ZXNbaW5kZXhdID0gdmFsLnJlcGxhY2UocHJvcCwgY3NzUHJlZml4ICsgcHJvcCkgKyAoa2VlcFVucHJlZml4ZWQgPyAnLCcgKyB2YWwgOiAnJyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG11bHRpcGxlVmFsdWVzLmpvaW4oJywnKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2l6aW5nO1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUgPSByZXF1aXJlKCcuLi8uLi91dGlscy9nZXRQcmVmaXhlZFZhbHVlJyk7XG5cbnZhciBfZ2V0UHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRQcmVmaXhlZFZhbHVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByb3BlcnRpZXMgPSB7XG4gIG1heEhlaWdodDogdHJ1ZSxcbiAgbWF4V2lkdGg6IHRydWUsXG4gIHdpZHRoOiB0cnVlLFxuICBoZWlnaHQ6IHRydWUsXG4gIGNvbHVtbldpZHRoOiB0cnVlLFxuICBtaW5XaWR0aDogdHJ1ZSxcbiAgbWluSGVpZ2h0OiB0cnVlXG59O1xuXG52YXIgdmFsdWVzID0ge1xuICAnbWluLWNvbnRlbnQnOiB0cnVlLFxuICAnbWF4LWNvbnRlbnQnOiB0cnVlLFxuICAnZmlsbC1hdmFpbGFibGUnOiB0cnVlLFxuICAnZml0LWNvbnRlbnQnOiB0cnVlLFxuICAnY29udGFpbi1mbG9hdHMnOiB0cnVlXG5cbiAgLy8gVE9ETzogY2hyb21lICYgb3BlcmEgc3VwcG9ydCBpdFxufTtmdW5jdGlvbiBzaXppbmcocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgX3JlZikge1xuICB2YXIgY3NzUHJlZml4ID0gX3JlZi5jc3NQcmVmaXgsXG4gICAgICBrZWVwVW5wcmVmaXhlZCA9IF9yZWYua2VlcFVucHJlZml4ZWQ7XG5cbiAgLy8gVGhpcyBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZVxuICAvLyBLZWVwIGFuIGV5ZSBvbiBpdFxuICBpZiAocHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiAoMCwgX2dldFByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKGNzc1ByZWZpeCArIHZhbHVlLCB2YWx1ZSwga2VlcFVucHJlZml4ZWQpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncmFkaWVudDtcblxudmFyIF9nZXRQcmVmaXhlZFZhbHVlID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZ2V0UHJlZml4ZWRWYWx1ZScpO1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJlZml4ZWRWYWx1ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvO1xuZnVuY3Rpb24gZ3JhZGllbnQocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgX3JlZikge1xuICB2YXIgYnJvd3Nlck5hbWUgPSBfcmVmLmJyb3dzZXJOYW1lLFxuICAgICAgYnJvd3NlclZlcnNpb24gPSBfcmVmLmJyb3dzZXJWZXJzaW9uLFxuICAgICAgY3NzUHJlZml4ID0gX3JlZi5jc3NQcmVmaXgsXG4gICAgICBrZWVwVW5wcmVmaXhlZCA9IF9yZWYua2VlcFVucHJlZml4ZWQ7XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWVzLnRlc3QodmFsdWUpICYmIChicm93c2VyTmFtZSA9PT0gJ2ZpcmVmb3gnICYmIGJyb3dzZXJWZXJzaW9uIDwgMTYgfHwgYnJvd3Nlck5hbWUgPT09ICdjaHJvbWUnICYmIGJyb3dzZXJWZXJzaW9uIDwgMjYgfHwgKGJyb3dzZXJOYW1lID09PSAnc2FmYXJpJyB8fCBicm93c2VyTmFtZSA9PT0gJ2lvc19zYWYnKSAmJiBicm93c2VyVmVyc2lvbiA8IDcgfHwgKGJyb3dzZXJOYW1lID09PSAnb3BlcmEnIHx8IGJyb3dzZXJOYW1lID09PSAnb3BfbWluaScpICYmIGJyb3dzZXJWZXJzaW9uIDwgMTIuMSB8fCBicm93c2VyTmFtZSA9PT0gJ2FuZHJvaWQnICYmIGJyb3dzZXJWZXJzaW9uIDwgNC40IHx8IGJyb3dzZXJOYW1lID09PSAnYW5kX3VjJykpIHtcbiAgICByZXR1cm4gKDAsIF9nZXRQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KShjc3NQcmVmaXggKyB2YWx1ZSwgdmFsdWUsIGtlZXBVbnByZWZpeGVkKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleGJveE9sZDtcblxudmFyIF9nZXRQcmVmaXhlZFZhbHVlID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZ2V0UHJlZml4ZWRWYWx1ZScpO1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJlZml4ZWRWYWx1ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBhbHRlcm5hdGl2ZVZhbHVlcyA9IHtcbiAgJ3NwYWNlLWFyb3VuZCc6ICdqdXN0aWZ5JyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ2ZsZXgtZW5kJzogJ2VuZCcsXG4gICd3cmFwLXJldmVyc2UnOiAnbXVsdGlwbGUnLFxuICB3cmFwOiAnbXVsdGlwbGUnLFxuICBmbGV4OiAnYm94JyxcbiAgJ2lubGluZS1mbGV4JzogJ2lubGluZS1ib3gnXG59O1xuXG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJ1xufTtcblxudmFyIG90aGVyUHJvcHMgPSBbJ2FsaWduQ29udGVudCcsICdhbGlnblNlbGYnLCAnb3JkZXInLCAnZmxleEdyb3cnLCAnZmxleFNocmluaycsICdmbGV4QmFzaXMnLCAnZmxleERpcmVjdGlvbiddO1xudmFyIHByb3BlcnRpZXMgPSBPYmplY3Qua2V5cyhhbHRlcm5hdGl2ZVByb3BzKS5jb25jYXQob3RoZXJQcm9wcyk7XG5cbmZ1bmN0aW9uIGZsZXhib3hPbGQocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgX3JlZikge1xuICB2YXIgYnJvd3Nlck5hbWUgPSBfcmVmLmJyb3dzZXJOYW1lLFxuICAgICAgYnJvd3NlclZlcnNpb24gPSBfcmVmLmJyb3dzZXJWZXJzaW9uLFxuICAgICAgY3NzUHJlZml4ID0gX3JlZi5jc3NQcmVmaXgsXG4gICAgICBrZWVwVW5wcmVmaXhlZCA9IF9yZWYua2VlcFVucHJlZml4ZWQsXG4gICAgICByZXF1aXJlc1ByZWZpeCA9IF9yZWYucmVxdWlyZXNQcmVmaXg7XG5cbiAgaWYgKChwcm9wZXJ0aWVzLmluZGV4T2YocHJvcGVydHkpID4gLTEgfHwgcHJvcGVydHkgPT09ICdkaXNwbGF5JyAmJiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLmluZGV4T2YoJ2ZsZXgnKSA+IC0xKSAmJiAoYnJvd3Nlck5hbWUgPT09ICdmaXJlZm94JyAmJiBicm93c2VyVmVyc2lvbiA8IDIyIHx8IGJyb3dzZXJOYW1lID09PSAnY2hyb21lJyAmJiBicm93c2VyVmVyc2lvbiA8IDIxIHx8IChicm93c2VyTmFtZSA9PT0gJ3NhZmFyaScgfHwgYnJvd3Nlck5hbWUgPT09ICdpb3Nfc2FmJykgJiYgYnJvd3NlclZlcnNpb24gPD0gNi4xIHx8IGJyb3dzZXJOYW1lID09PSAnYW5kcm9pZCcgJiYgYnJvd3NlclZlcnNpb24gPCA0LjQgfHwgYnJvd3Nlck5hbWUgPT09ICdhbmRfdWMnKSkge1xuICAgIGRlbGV0ZSByZXF1aXJlc1ByZWZpeFtwcm9wZXJ0eV07XG5cbiAgICBpZiAoIWtlZXBVbnByZWZpeGVkICYmICFBcnJheS5pc0FycmF5KHN0eWxlW3Byb3BlcnR5XSkpIHtcbiAgICAgIGRlbGV0ZSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgfVxuICAgIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmICh2YWx1ZS5pbmRleE9mKCdjb2x1bW4nKSA+IC0xKSB7XG4gICAgICAgIHN0eWxlLldlYmtpdEJveE9yaWVudCA9ICd2ZXJ0aWNhbCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZS5XZWJraXRCb3hPcmllbnQgPSAnaG9yaXpvbnRhbCc7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ3JldmVyc2UnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIGFsdGVybmF0aXZlVmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgICAgcmV0dXJuICgwLCBfZ2V0UHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkoY3NzUHJlZml4ICsgYWx0ZXJuYXRpdmVWYWx1ZXNbdmFsdWVdLCB2YWx1ZSwga2VlcFVucHJlZml4ZWQpO1xuICAgIH1cbiAgICBpZiAoYWx0ZXJuYXRpdmVQcm9wcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXhib3hJRTtcblxudmFyIF9nZXRQcmVmaXhlZFZhbHVlID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZ2V0UHJlZml4ZWRWYWx1ZScpO1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJlZml4ZWRWYWx1ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBhbHRlcm5hdGl2ZVZhbHVlcyA9IHtcbiAgJ3NwYWNlLWFyb3VuZCc6ICdkaXN0cmlidXRlJyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ2ZsZXgtZW5kJzogJ2VuZCcsXG4gIGZsZXg6ICdmbGV4Ym94JyxcbiAgJ2lubGluZS1mbGV4JzogJ2lubGluZS1mbGV4Ym94J1xufTtcblxudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xufTtcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIF9yZWYpIHtcbiAgdmFyIGJyb3dzZXJOYW1lID0gX3JlZi5icm93c2VyTmFtZSxcbiAgICAgIGJyb3dzZXJWZXJzaW9uID0gX3JlZi5icm93c2VyVmVyc2lvbixcbiAgICAgIGNzc1ByZWZpeCA9IF9yZWYuY3NzUHJlZml4LFxuICAgICAga2VlcFVucHJlZml4ZWQgPSBfcmVmLmtlZXBVbnByZWZpeGVkLFxuICAgICAgcmVxdWlyZXNQcmVmaXggPSBfcmVmLnJlcXVpcmVzUHJlZml4O1xuXG4gIGlmICgoYWx0ZXJuYXRpdmVQcm9wcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkgfHwgcHJvcGVydHkgPT09ICdkaXNwbGF5JyAmJiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLmluZGV4T2YoJ2ZsZXgnKSA+IC0xKSAmJiAoYnJvd3Nlck5hbWUgPT09ICdpZV9tb2InIHx8IGJyb3dzZXJOYW1lID09PSAnaWUnKSAmJiBicm93c2VyVmVyc2lvbiA9PT0gMTApIHtcbiAgICBkZWxldGUgcmVxdWlyZXNQcmVmaXhbcHJvcGVydHldO1xuXG4gICAgaWYgKCFrZWVwVW5wcmVmaXhlZCAmJiAhQXJyYXkuaXNBcnJheShzdHlsZVtwcm9wZXJ0eV0pKSB7XG4gICAgICBkZWxldGUgc3R5bGVbcHJvcGVydHldO1xuICAgIH1cbiAgICBpZiAocHJvcGVydHkgPT09ICdkaXNwbGF5JyAmJiBhbHRlcm5hdGl2ZVZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiAoMCwgX2dldFByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKGNzc1ByZWZpeCArIGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSwgdmFsdWUsIGtlZXBVbnByZWZpeGVkKTtcbiAgICB9XG4gICAgaWYgKGFsdGVybmF0aXZlUHJvcHMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gICAgfVxuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4O1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUgPSByZXF1aXJlKCcuLi8uLi91dGlscy9nZXRQcmVmaXhlZFZhbHVlJyk7XG5cbnZhciBfZ2V0UHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRQcmVmaXhlZFZhbHVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHZhbHVlcyA9IHtcbiAgZmxleDogdHJ1ZSxcbiAgJ2lubGluZS1mbGV4JzogdHJ1ZVxufTtcbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgX3JlZikge1xuICB2YXIgYnJvd3Nlck5hbWUgPSBfcmVmLmJyb3dzZXJOYW1lLFxuICAgICAgYnJvd3NlclZlcnNpb24gPSBfcmVmLmJyb3dzZXJWZXJzaW9uLFxuICAgICAgY3NzUHJlZml4ID0gX3JlZi5jc3NQcmVmaXgsXG4gICAgICBrZWVwVW5wcmVmaXhlZCA9IF9yZWYua2VlcFVucHJlZml4ZWQ7XG5cbiAgaWYgKHByb3BlcnR5ID09PSAnZGlzcGxheScgJiYgdmFsdWVzW3ZhbHVlXSAmJiAoYnJvd3Nlck5hbWUgPT09ICdjaHJvbWUnICYmIGJyb3dzZXJWZXJzaW9uIDwgMjkgJiYgYnJvd3NlclZlcnNpb24gPiAyMCB8fCAoYnJvd3Nlck5hbWUgPT09ICdzYWZhcmknIHx8IGJyb3dzZXJOYW1lID09PSAnaW9zX3NhZicpICYmIGJyb3dzZXJWZXJzaW9uIDwgOSAmJiBicm93c2VyVmVyc2lvbiA+IDYgfHwgYnJvd3Nlck5hbWUgPT09ICdvcGVyYScgJiYgKGJyb3dzZXJWZXJzaW9uID09PSAxNSB8fCBicm93c2VyVmVyc2lvbiA9PT0gMTYpKSkge1xuICAgIHJldHVybiAoMCwgX2dldFByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKGNzc1ByZWZpeCArIHZhbHVlLCB2YWx1ZSwga2VlcFVucHJlZml4ZWQpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjYWxjO1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUgPSByZXF1aXJlKCcuLi8uLi91dGlscy9nZXRQcmVmaXhlZFZhbHVlJyk7XG5cbnZhciBfZ2V0UHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRQcmVmaXhlZFZhbHVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBfcmVmKSB7XG4gIHZhciBicm93c2VyTmFtZSA9IF9yZWYuYnJvd3Nlck5hbWUsXG4gICAgICBicm93c2VyVmVyc2lvbiA9IF9yZWYuYnJvd3NlclZlcnNpb24sXG4gICAgICBjc3NQcmVmaXggPSBfcmVmLmNzc1ByZWZpeCxcbiAgICAgIGtlZXBVbnByZWZpeGVkID0gX3JlZi5rZWVwVW5wcmVmaXhlZDtcblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5pbmRleE9mKCdjYWxjKCcpID4gLTEgJiYgKGJyb3dzZXJOYW1lID09PSAnZmlyZWZveCcgJiYgYnJvd3NlclZlcnNpb24gPCAxNSB8fCBicm93c2VyTmFtZSA9PT0gJ2Nocm9tZScgJiYgYnJvd3NlclZlcnNpb24gPCAyNSB8fCBicm93c2VyTmFtZSA9PT0gJ3NhZmFyaScgJiYgYnJvd3NlclZlcnNpb24gPCA2LjEgfHwgYnJvd3Nlck5hbWUgPT09ICdpb3Nfc2FmJyAmJiBicm93c2VyVmVyc2lvbiA8IDcpKSB7XG4gICAgcmV0dXJuICgwLCBfZ2V0UHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBjc3NQcmVmaXggKyAnY2FsYygnKSwgdmFsdWUsIGtlZXBVbnByZWZpeGVkKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NhbGMgPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvZHluYW1pYy9wbHVnaW5zL2NhbGMnKTtcblxudmFyIF9jYWxjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NhbGMpO1xuXG52YXIgX2ZsZXggPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvZHluYW1pYy9wbHVnaW5zL2ZsZXgnKTtcblxudmFyIF9mbGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ZsZXgpO1xuXG52YXIgX2ZsZXhib3hJRSA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvZmxleGJveElFJyk7XG5cbnZhciBfZmxleGJveElFMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ZsZXhib3hJRSk7XG5cbnZhciBfZmxleGJveE9sZCA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvZmxleGJveE9sZCcpO1xuXG52YXIgX2ZsZXhib3hPbGQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmxleGJveE9sZCk7XG5cbnZhciBfZ3JhZGllbnQgPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcHJlZml4ZXIvZHluYW1pYy9wbHVnaW5zL2dyYWRpZW50Jyk7XG5cbnZhciBfZ3JhZGllbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JhZGllbnQpO1xuXG52YXIgX3NpemluZyA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvc2l6aW5nJyk7XG5cbnZhciBfc2l6aW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NpemluZyk7XG5cbnZhciBfdHJhbnNpdGlvbiA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wcmVmaXhlci9keW5hbWljL3BsdWdpbnMvdHJhbnNpdGlvbicpO1xuXG52YXIgX3RyYW5zaXRpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHJhbnNpdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgcGx1Z2luczogW19jYWxjMi5kZWZhdWx0LCBfZmxleDIuZGVmYXVsdCwgX2ZsZXhib3hJRTIuZGVmYXVsdCwgX2ZsZXhib3hPbGQyLmRlZmF1bHQsIF9ncmFkaWVudDIuZGVmYXVsdCwgX3NpemluZzIuZGVmYXVsdCwgX3RyYW5zaXRpb24yLmRlZmF1bHRdLFxuICBwcmVmaXhNYXA6IHsgXCJjaHJvbWVcIjogeyBcInRyYW5zZm9ybVwiOiAzNSwgXCJ0cmFuc2Zvcm1PcmlnaW5cIjogMzUsIFwidHJhbnNmb3JtT3JpZ2luWFwiOiAzNSwgXCJ0cmFuc2Zvcm1PcmlnaW5ZXCI6IDM1LCBcImJhY2tmYWNlVmlzaWJpbGl0eVwiOiAzNSwgXCJwZXJzcGVjdGl2ZVwiOiAzNSwgXCJwZXJzcGVjdGl2ZU9yaWdpblwiOiAzNSwgXCJ0cmFuc2Zvcm1TdHlsZVwiOiAzNSwgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IDM1LCBcImFuaW1hdGlvblwiOiA0MiwgXCJhbmltYXRpb25EZWxheVwiOiA0MiwgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogNDIsIFwiYW5pbWF0aW9uRmlsbE1vZGVcIjogNDIsIFwiYW5pbWF0aW9uRHVyYXRpb25cIjogNDIsIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogNDIsIFwiYW5pbWF0aW9uTmFtZVwiOiA0MiwgXCJhbmltYXRpb25QbGF5U3RhdGVcIjogNDIsIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogNDIsIFwiYXBwZWFyYW5jZVwiOiA2MCwgXCJ1c2VyU2VsZWN0XCI6IDUzLCBcImZvbnRLZXJuaW5nXCI6IDMyLCBcInRleHRFbXBoYXNpc1Bvc2l0aW9uXCI6IDYwLCBcInRleHRFbXBoYXNpc1wiOiA2MCwgXCJ0ZXh0RW1waGFzaXNTdHlsZVwiOiA2MCwgXCJ0ZXh0RW1waGFzaXNDb2xvclwiOiA2MCwgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogNjAsIFwiY2xpcFBhdGhcIjogNTQsIFwibWFza0ltYWdlXCI6IDYwLCBcIm1hc2tNb2RlXCI6IDYwLCBcIm1hc2tSZXBlYXRcIjogNjAsIFwibWFza1Bvc2l0aW9uXCI6IDYwLCBcIm1hc2tDbGlwXCI6IDYwLCBcIm1hc2tPcmlnaW5cIjogNjAsIFwibWFza1NpemVcIjogNjAsIFwibWFza0NvbXBvc2l0ZVwiOiA2MCwgXCJtYXNrXCI6IDYwLCBcIm1hc2tCb3JkZXJTb3VyY2VcIjogNjAsIFwibWFza0JvcmRlck1vZGVcIjogNjAsIFwibWFza0JvcmRlclNsaWNlXCI6IDYwLCBcIm1hc2tCb3JkZXJXaWR0aFwiOiA2MCwgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IDYwLCBcIm1hc2tCb3JkZXJSZXBlYXRcIjogNjAsIFwibWFza0JvcmRlclwiOiA2MCwgXCJtYXNrVHlwZVwiOiA2MCwgXCJ0ZXh0RGVjb3JhdGlvblN0eWxlXCI6IDU2LCBcInRleHREZWNvcmF0aW9uU2tpcFwiOiA1NiwgXCJ0ZXh0RGVjb3JhdGlvbkxpbmVcIjogNTYsIFwidGV4dERlY29yYXRpb25Db2xvclwiOiA1NiwgXCJmaWx0ZXJcIjogNTIsIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiA0NywgXCJicmVha0FmdGVyXCI6IDQ5LCBcImJyZWFrQmVmb3JlXCI6IDQ5LCBcImJyZWFrSW5zaWRlXCI6IDQ5LCBcImNvbHVtbkNvdW50XCI6IDQ5LCBcImNvbHVtbkZpbGxcIjogNDksIFwiY29sdW1uR2FwXCI6IDQ5LCBcImNvbHVtblJ1bGVcIjogNDksIFwiY29sdW1uUnVsZUNvbG9yXCI6IDQ5LCBcImNvbHVtblJ1bGVTdHlsZVwiOiA0OSwgXCJjb2x1bW5SdWxlV2lkdGhcIjogNDksIFwiY29sdW1uc1wiOiA0OSwgXCJjb2x1bW5TcGFuXCI6IDQ5LCBcImNvbHVtbldpZHRoXCI6IDQ5IH0sIFwic2FmYXJpXCI6IHsgXCJmbGV4XCI6IDgsIFwiZmxleEJhc2lzXCI6IDgsIFwiZmxleERpcmVjdGlvblwiOiA4LCBcImZsZXhHcm93XCI6IDgsIFwiZmxleEZsb3dcIjogOCwgXCJmbGV4U2hyaW5rXCI6IDgsIFwiZmxleFdyYXBcIjogOCwgXCJhbGlnbkNvbnRlbnRcIjogOCwgXCJhbGlnbkl0ZW1zXCI6IDgsIFwiYWxpZ25TZWxmXCI6IDgsIFwianVzdGlmeUNvbnRlbnRcIjogOCwgXCJvcmRlclwiOiA4LCBcInRyYW5zaXRpb25cIjogNiwgXCJ0cmFuc2l0aW9uRGVsYXlcIjogNiwgXCJ0cmFuc2l0aW9uRHVyYXRpb25cIjogNiwgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogNiwgXCJ0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb25cIjogNiwgXCJ0cmFuc2Zvcm1cIjogOCwgXCJ0cmFuc2Zvcm1PcmlnaW5cIjogOCwgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IDgsIFwidHJhbnNmb3JtT3JpZ2luWVwiOiA4LCBcImJhY2tmYWNlVmlzaWJpbGl0eVwiOiA4LCBcInBlcnNwZWN0aXZlXCI6IDgsIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogOCwgXCJ0cmFuc2Zvcm1TdHlsZVwiOiA4LCBcInRyYW5zZm9ybU9yaWdpblpcIjogOCwgXCJhbmltYXRpb25cIjogOCwgXCJhbmltYXRpb25EZWxheVwiOiA4LCBcImFuaW1hdGlvbkRpcmVjdGlvblwiOiA4LCBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IDgsIFwiYW5pbWF0aW9uRHVyYXRpb25cIjogOCwgXCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiA4LCBcImFuaW1hdGlvbk5hbWVcIjogOCwgXCJhbmltYXRpb25QbGF5U3RhdGVcIjogOCwgXCJhbmltYXRpb25UaW1pbmdGdW5jdGlvblwiOiA4LCBcImFwcGVhcmFuY2VcIjogMTAuMSwgXCJ1c2VyU2VsZWN0XCI6IDEwLjEsIFwiYmFja2Ryb3BGaWx0ZXJcIjogMTAuMSwgXCJmb250S2VybmluZ1wiOiA5LCBcInNjcm9sbFNuYXBUeXBlXCI6IDEwLCBcInNjcm9sbFNuYXBQb2ludHNYXCI6IDEwLCBcInNjcm9sbFNuYXBQb2ludHNZXCI6IDEwLCBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiAxMCwgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiAxMCwgXCJ0ZXh0RW1waGFzaXNQb3NpdGlvblwiOiA3LCBcInRleHRFbXBoYXNpc1wiOiA3LCBcInRleHRFbXBoYXNpc1N0eWxlXCI6IDcsIFwidGV4dEVtcGhhc2lzQ29sb3JcIjogNywgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogMTAuMSwgXCJjbGlwUGF0aFwiOiAxMC4xLCBcIm1hc2tJbWFnZVwiOiAxMC4xLCBcIm1hc2tNb2RlXCI6IDEwLjEsIFwibWFza1JlcGVhdFwiOiAxMC4xLCBcIm1hc2tQb3NpdGlvblwiOiAxMC4xLCBcIm1hc2tDbGlwXCI6IDEwLjEsIFwibWFza09yaWdpblwiOiAxMC4xLCBcIm1hc2tTaXplXCI6IDEwLjEsIFwibWFza0NvbXBvc2l0ZVwiOiAxMC4xLCBcIm1hc2tcIjogMTAuMSwgXCJtYXNrQm9yZGVyU291cmNlXCI6IDEwLjEsIFwibWFza0JvcmRlck1vZGVcIjogMTAuMSwgXCJtYXNrQm9yZGVyU2xpY2VcIjogMTAuMSwgXCJtYXNrQm9yZGVyV2lkdGhcIjogMTAuMSwgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IDEwLjEsIFwibWFza0JvcmRlclJlcGVhdFwiOiAxMC4xLCBcIm1hc2tCb3JkZXJcIjogMTAuMSwgXCJtYXNrVHlwZVwiOiAxMC4xLCBcInRleHREZWNvcmF0aW9uU3R5bGVcIjogMTAuMSwgXCJ0ZXh0RGVjb3JhdGlvblNraXBcIjogMTAuMSwgXCJ0ZXh0RGVjb3JhdGlvbkxpbmVcIjogMTAuMSwgXCJ0ZXh0RGVjb3JhdGlvbkNvbG9yXCI6IDEwLjEsIFwic2hhcGVJbWFnZVRocmVzaG9sZFwiOiAxMCwgXCJzaGFwZUltYWdlTWFyZ2luXCI6IDEwLCBcInNoYXBlSW1hZ2VPdXRzaWRlXCI6IDEwLCBcImZpbHRlclwiOiA5LCBcImh5cGhlbnNcIjogMTAuMSwgXCJmbG93SW50b1wiOiAxMC4xLCBcImZsb3dGcm9tXCI6IDEwLjEsIFwiYnJlYWtCZWZvcmVcIjogOCwgXCJicmVha0FmdGVyXCI6IDgsIFwiYnJlYWtJbnNpZGVcIjogOCwgXCJyZWdpb25GcmFnbWVudFwiOiAxMC4xLCBcImNvbHVtbkNvdW50XCI6IDgsIFwiY29sdW1uRmlsbFwiOiA4LCBcImNvbHVtbkdhcFwiOiA4LCBcImNvbHVtblJ1bGVcIjogOCwgXCJjb2x1bW5SdWxlQ29sb3JcIjogOCwgXCJjb2x1bW5SdWxlU3R5bGVcIjogOCwgXCJjb2x1bW5SdWxlV2lkdGhcIjogOCwgXCJjb2x1bW5zXCI6IDgsIFwiY29sdW1uU3BhblwiOiA4LCBcImNvbHVtbldpZHRoXCI6IDggfSwgXCJmaXJlZm94XCI6IHsgXCJhcHBlYXJhbmNlXCI6IDU1LCBcInVzZXJTZWxlY3RcIjogNTUsIFwiYm94U2l6aW5nXCI6IDI4LCBcInRleHRBbGlnbkxhc3RcIjogNDgsIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiAzNSwgXCJ0ZXh0RGVjb3JhdGlvblNraXBcIjogMzUsIFwidGV4dERlY29yYXRpb25MaW5lXCI6IDM1LCBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogMzUsIFwidGFiU2l6ZVwiOiA1NSwgXCJoeXBoZW5zXCI6IDQyLCBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogMzMsIFwiYnJlYWtBZnRlclwiOiA1MSwgXCJicmVha0JlZm9yZVwiOiA1MSwgXCJicmVha0luc2lkZVwiOiA1MSwgXCJjb2x1bW5Db3VudFwiOiA1MSwgXCJjb2x1bW5GaWxsXCI6IDUxLCBcImNvbHVtbkdhcFwiOiA1MSwgXCJjb2x1bW5SdWxlXCI6IDUxLCBcImNvbHVtblJ1bGVDb2xvclwiOiA1MSwgXCJjb2x1bW5SdWxlU3R5bGVcIjogNTEsIFwiY29sdW1uUnVsZVdpZHRoXCI6IDUxLCBcImNvbHVtbnNcIjogNTEsIFwiY29sdW1uU3BhblwiOiA1MSwgXCJjb2x1bW5XaWR0aFwiOiA1MSB9LCBcIm9wZXJhXCI6IHsgXCJmbGV4XCI6IDE2LCBcImZsZXhCYXNpc1wiOiAxNiwgXCJmbGV4RGlyZWN0aW9uXCI6IDE2LCBcImZsZXhHcm93XCI6IDE2LCBcImZsZXhGbG93XCI6IDE2LCBcImZsZXhTaHJpbmtcIjogMTYsIFwiZmxleFdyYXBcIjogMTYsIFwiYWxpZ25Db250ZW50XCI6IDE2LCBcImFsaWduSXRlbXNcIjogMTYsIFwiYWxpZ25TZWxmXCI6IDE2LCBcImp1c3RpZnlDb250ZW50XCI6IDE2LCBcIm9yZGVyXCI6IDE2LCBcInRyYW5zZm9ybVwiOiAyMiwgXCJ0cmFuc2Zvcm1PcmlnaW5cIjogMjIsIFwidHJhbnNmb3JtT3JpZ2luWFwiOiAyMiwgXCJ0cmFuc2Zvcm1PcmlnaW5ZXCI6IDIyLCBcImJhY2tmYWNlVmlzaWJpbGl0eVwiOiAyMiwgXCJwZXJzcGVjdGl2ZVwiOiAyMiwgXCJwZXJzcGVjdGl2ZU9yaWdpblwiOiAyMiwgXCJ0cmFuc2Zvcm1TdHlsZVwiOiAyMiwgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IDIyLCBcImFuaW1hdGlvblwiOiAyOSwgXCJhbmltYXRpb25EZWxheVwiOiAyOSwgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogMjksIFwiYW5pbWF0aW9uRmlsbE1vZGVcIjogMjksIFwiYW5pbWF0aW9uRHVyYXRpb25cIjogMjksIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogMjksIFwiYW5pbWF0aW9uTmFtZVwiOiAyOSwgXCJhbmltYXRpb25QbGF5U3RhdGVcIjogMjksIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogMjksIFwiYXBwZWFyYW5jZVwiOiA0NSwgXCJ1c2VyU2VsZWN0XCI6IDQwLCBcImZvbnRLZXJuaW5nXCI6IDE5LCBcInRleHRFbXBoYXNpc1Bvc2l0aW9uXCI6IDQ1LCBcInRleHRFbXBoYXNpc1wiOiA0NSwgXCJ0ZXh0RW1waGFzaXNTdHlsZVwiOiA0NSwgXCJ0ZXh0RW1waGFzaXNDb2xvclwiOiA0NSwgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogNDUsIFwiY2xpcFBhdGhcIjogNDEsIFwibWFza0ltYWdlXCI6IDQ1LCBcIm1hc2tNb2RlXCI6IDQ1LCBcIm1hc2tSZXBlYXRcIjogNDUsIFwibWFza1Bvc2l0aW9uXCI6IDQ1LCBcIm1hc2tDbGlwXCI6IDQ1LCBcIm1hc2tPcmlnaW5cIjogNDUsIFwibWFza1NpemVcIjogNDUsIFwibWFza0NvbXBvc2l0ZVwiOiA0NSwgXCJtYXNrXCI6IDQ1LCBcIm1hc2tCb3JkZXJTb3VyY2VcIjogNDUsIFwibWFza0JvcmRlck1vZGVcIjogNDUsIFwibWFza0JvcmRlclNsaWNlXCI6IDQ1LCBcIm1hc2tCb3JkZXJXaWR0aFwiOiA0NSwgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IDQ1LCBcIm1hc2tCb3JkZXJSZXBlYXRcIjogNDUsIFwibWFza0JvcmRlclwiOiA0NSwgXCJtYXNrVHlwZVwiOiA0NSwgXCJ0ZXh0RGVjb3JhdGlvblN0eWxlXCI6IDQzLCBcInRleHREZWNvcmF0aW9uU2tpcFwiOiA0MywgXCJ0ZXh0RGVjb3JhdGlvbkxpbmVcIjogNDMsIFwidGV4dERlY29yYXRpb25Db2xvclwiOiA0MywgXCJmaWx0ZXJcIjogMzksIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiAzNCwgXCJicmVha0FmdGVyXCI6IDM2LCBcImJyZWFrQmVmb3JlXCI6IDM2LCBcImJyZWFrSW5zaWRlXCI6IDM2LCBcImNvbHVtbkNvdW50XCI6IDM2LCBcImNvbHVtbkZpbGxcIjogMzYsIFwiY29sdW1uR2FwXCI6IDM2LCBcImNvbHVtblJ1bGVcIjogMzYsIFwiY29sdW1uUnVsZUNvbG9yXCI6IDM2LCBcImNvbHVtblJ1bGVTdHlsZVwiOiAzNiwgXCJjb2x1bW5SdWxlV2lkdGhcIjogMzYsIFwiY29sdW1uc1wiOiAzNiwgXCJjb2x1bW5TcGFuXCI6IDM2LCBcImNvbHVtbldpZHRoXCI6IDM2IH0sIFwiaWVcIjogeyBcImZsZXhcIjogMTAsIFwiZmxleERpcmVjdGlvblwiOiAxMCwgXCJmbGV4Rmxvd1wiOiAxMCwgXCJmbGV4V3JhcFwiOiAxMCwgXCJ0cmFuc2Zvcm1cIjogOSwgXCJ0cmFuc2Zvcm1PcmlnaW5cIjogOSwgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IDksIFwidHJhbnNmb3JtT3JpZ2luWVwiOiA5LCBcInVzZXJTZWxlY3RcIjogMTEsIFwid3JhcEZsb3dcIjogMTEsIFwid3JhcFRocm91Z2hcIjogMTEsIFwid3JhcE1hcmdpblwiOiAxMSwgXCJzY3JvbGxTbmFwVHlwZVwiOiAxMSwgXCJzY3JvbGxTbmFwUG9pbnRzWFwiOiAxMSwgXCJzY3JvbGxTbmFwUG9pbnRzWVwiOiAxMSwgXCJzY3JvbGxTbmFwRGVzdGluYXRpb25cIjogMTEsIFwic2Nyb2xsU25hcENvb3JkaW5hdGVcIjogMTEsIFwidG91Y2hBY3Rpb25cIjogMTAsIFwiaHlwaGVuc1wiOiAxMSwgXCJmbG93SW50b1wiOiAxMSwgXCJmbG93RnJvbVwiOiAxMSwgXCJicmVha0JlZm9yZVwiOiAxMSwgXCJicmVha0FmdGVyXCI6IDExLCBcImJyZWFrSW5zaWRlXCI6IDExLCBcInJlZ2lvbkZyYWdtZW50XCI6IDExLCBcImdyaWRUZW1wbGF0ZUNvbHVtbnNcIjogMTEsIFwiZ3JpZFRlbXBsYXRlUm93c1wiOiAxMSwgXCJncmlkVGVtcGxhdGVBcmVhc1wiOiAxMSwgXCJncmlkVGVtcGxhdGVcIjogMTEsIFwiZ3JpZEF1dG9Db2x1bW5zXCI6IDExLCBcImdyaWRBdXRvUm93c1wiOiAxMSwgXCJncmlkQXV0b0Zsb3dcIjogMTEsIFwiZ3JpZFwiOiAxMSwgXCJncmlkUm93U3RhcnRcIjogMTEsIFwiZ3JpZENvbHVtblN0YXJ0XCI6IDExLCBcImdyaWRSb3dFbmRcIjogMTEsIFwiZ3JpZFJvd1wiOiAxMSwgXCJncmlkQ29sdW1uXCI6IDExLCBcImdyaWRDb2x1bW5FbmRcIjogMTEsIFwiZ3JpZENvbHVtbkdhcFwiOiAxMSwgXCJncmlkUm93R2FwXCI6IDExLCBcImdyaWRBcmVhXCI6IDExLCBcImdyaWRHYXBcIjogMTEsIFwidGV4dFNpemVBZGp1c3RcIjogMTEgfSwgXCJlZGdlXCI6IHsgXCJ1c2VyU2VsZWN0XCI6IDE1LCBcIndyYXBGbG93XCI6IDE1LCBcIndyYXBUaHJvdWdoXCI6IDE1LCBcIndyYXBNYXJnaW5cIjogMTUsIFwic2Nyb2xsU25hcFR5cGVcIjogMTUsIFwic2Nyb2xsU25hcFBvaW50c1hcIjogMTUsIFwic2Nyb2xsU25hcFBvaW50c1lcIjogMTUsIFwic2Nyb2xsU25hcERlc3RpbmF0aW9uXCI6IDE1LCBcInNjcm9sbFNuYXBDb29yZGluYXRlXCI6IDE1LCBcImh5cGhlbnNcIjogMTUsIFwiZmxvd0ludG9cIjogMTUsIFwiZmxvd0Zyb21cIjogMTUsIFwiYnJlYWtCZWZvcmVcIjogMTUsIFwiYnJlYWtBZnRlclwiOiAxNSwgXCJicmVha0luc2lkZVwiOiAxNSwgXCJyZWdpb25GcmFnbWVudFwiOiAxNSwgXCJncmlkVGVtcGxhdGVDb2x1bW5zXCI6IDE1LCBcImdyaWRUZW1wbGF0ZVJvd3NcIjogMTUsIFwiZ3JpZFRlbXBsYXRlQXJlYXNcIjogMTUsIFwiZ3JpZFRlbXBsYXRlXCI6IDE1LCBcImdyaWRBdXRvQ29sdW1uc1wiOiAxNSwgXCJncmlkQXV0b1Jvd3NcIjogMTUsIFwiZ3JpZEF1dG9GbG93XCI6IDE1LCBcImdyaWRcIjogMTUsIFwiZ3JpZFJvd1N0YXJ0XCI6IDE1LCBcImdyaWRDb2x1bW5TdGFydFwiOiAxNSwgXCJncmlkUm93RW5kXCI6IDE1LCBcImdyaWRSb3dcIjogMTUsIFwiZ3JpZENvbHVtblwiOiAxNSwgXCJncmlkQ29sdW1uRW5kXCI6IDE1LCBcImdyaWRDb2x1bW5HYXBcIjogMTUsIFwiZ3JpZFJvd0dhcFwiOiAxNSwgXCJncmlkQXJlYVwiOiAxNSwgXCJncmlkR2FwXCI6IDE1IH0sIFwiaW9zX3NhZlwiOiB7IFwiZmxleFwiOiA4LjEsIFwiZmxleEJhc2lzXCI6IDguMSwgXCJmbGV4RGlyZWN0aW9uXCI6IDguMSwgXCJmbGV4R3Jvd1wiOiA4LjEsIFwiZmxleEZsb3dcIjogOC4xLCBcImZsZXhTaHJpbmtcIjogOC4xLCBcImZsZXhXcmFwXCI6IDguMSwgXCJhbGlnbkNvbnRlbnRcIjogOC4xLCBcImFsaWduSXRlbXNcIjogOC4xLCBcImFsaWduU2VsZlwiOiA4LjEsIFwianVzdGlmeUNvbnRlbnRcIjogOC4xLCBcIm9yZGVyXCI6IDguMSwgXCJ0cmFuc2l0aW9uXCI6IDYsIFwidHJhbnNpdGlvbkRlbGF5XCI6IDYsIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IDYsIFwidHJhbnNpdGlvblByb3BlcnR5XCI6IDYsIFwidHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXCI6IDYsIFwidHJhbnNmb3JtXCI6IDguMSwgXCJ0cmFuc2Zvcm1PcmlnaW5cIjogOC4xLCBcInRyYW5zZm9ybU9yaWdpblhcIjogOC4xLCBcInRyYW5zZm9ybU9yaWdpbllcIjogOC4xLCBcImJhY2tmYWNlVmlzaWJpbGl0eVwiOiA4LjEsIFwicGVyc3BlY3RpdmVcIjogOC4xLCBcInBlcnNwZWN0aXZlT3JpZ2luXCI6IDguMSwgXCJ0cmFuc2Zvcm1TdHlsZVwiOiA4LjEsIFwidHJhbnNmb3JtT3JpZ2luWlwiOiA4LjEsIFwiYW5pbWF0aW9uXCI6IDguMSwgXCJhbmltYXRpb25EZWxheVwiOiA4LjEsIFwiYW5pbWF0aW9uRGlyZWN0aW9uXCI6IDguMSwgXCJhbmltYXRpb25GaWxsTW9kZVwiOiA4LjEsIFwiYW5pbWF0aW9uRHVyYXRpb25cIjogOC4xLCBcImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50XCI6IDguMSwgXCJhbmltYXRpb25OYW1lXCI6IDguMSwgXCJhbmltYXRpb25QbGF5U3RhdGVcIjogOC4xLCBcImFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uXCI6IDguMSwgXCJhcHBlYXJhbmNlXCI6IDEwLCBcInVzZXJTZWxlY3RcIjogMTAsIFwiYmFja2Ryb3BGaWx0ZXJcIjogMTAsIFwiZm9udEtlcm5pbmdcIjogMTAsIFwic2Nyb2xsU25hcFR5cGVcIjogMTAsIFwic2Nyb2xsU25hcFBvaW50c1hcIjogMTAsIFwic2Nyb2xsU25hcFBvaW50c1lcIjogMTAsIFwic2Nyb2xsU25hcERlc3RpbmF0aW9uXCI6IDEwLCBcInNjcm9sbFNuYXBDb29yZGluYXRlXCI6IDEwLCBcImJveERlY29yYXRpb25CcmVha1wiOiAxMCwgXCJjbGlwUGF0aFwiOiAxMCwgXCJtYXNrSW1hZ2VcIjogMTAsIFwibWFza01vZGVcIjogMTAsIFwibWFza1JlcGVhdFwiOiAxMCwgXCJtYXNrUG9zaXRpb25cIjogMTAsIFwibWFza0NsaXBcIjogMTAsIFwibWFza09yaWdpblwiOiAxMCwgXCJtYXNrU2l6ZVwiOiAxMCwgXCJtYXNrQ29tcG9zaXRlXCI6IDEwLCBcIm1hc2tcIjogMTAsIFwibWFza0JvcmRlclNvdXJjZVwiOiAxMCwgXCJtYXNrQm9yZGVyTW9kZVwiOiAxMCwgXCJtYXNrQm9yZGVyU2xpY2VcIjogMTAsIFwibWFza0JvcmRlcldpZHRoXCI6IDEwLCBcIm1hc2tCb3JkZXJPdXRzZXRcIjogMTAsIFwibWFza0JvcmRlclJlcGVhdFwiOiAxMCwgXCJtYXNrQm9yZGVyXCI6IDEwLCBcIm1hc2tUeXBlXCI6IDEwLCBcInRleHRTaXplQWRqdXN0XCI6IDEwLCBcInRleHREZWNvcmF0aW9uU3R5bGVcIjogMTAsIFwidGV4dERlY29yYXRpb25Ta2lwXCI6IDEwLCBcInRleHREZWNvcmF0aW9uTGluZVwiOiAxMCwgXCJ0ZXh0RGVjb3JhdGlvbkNvbG9yXCI6IDEwLCBcInNoYXBlSW1hZ2VUaHJlc2hvbGRcIjogMTAsIFwic2hhcGVJbWFnZU1hcmdpblwiOiAxMCwgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiAxMCwgXCJmaWx0ZXJcIjogOSwgXCJoeXBoZW5zXCI6IDEwLCBcImZsb3dJbnRvXCI6IDEwLCBcImZsb3dGcm9tXCI6IDEwLCBcImJyZWFrQmVmb3JlXCI6IDguMSwgXCJicmVha0FmdGVyXCI6IDguMSwgXCJicmVha0luc2lkZVwiOiA4LjEsIFwicmVnaW9uRnJhZ21lbnRcIjogMTAsIFwiY29sdW1uQ291bnRcIjogOC4xLCBcImNvbHVtbkZpbGxcIjogOC4xLCBcImNvbHVtbkdhcFwiOiA4LjEsIFwiY29sdW1uUnVsZVwiOiA4LjEsIFwiY29sdW1uUnVsZUNvbG9yXCI6IDguMSwgXCJjb2x1bW5SdWxlU3R5bGVcIjogOC4xLCBcImNvbHVtblJ1bGVXaWR0aFwiOiA4LjEsIFwiY29sdW1uc1wiOiA4LjEsIFwiY29sdW1uU3BhblwiOiA4LjEsIFwiY29sdW1uV2lkdGhcIjogOC4xIH0sIFwiYW5kcm9pZFwiOiB7IFwiYm9yZGVySW1hZ2VcIjogNC4yLCBcImJvcmRlckltYWdlT3V0c2V0XCI6IDQuMiwgXCJib3JkZXJJbWFnZVJlcGVhdFwiOiA0LjIsIFwiYm9yZGVySW1hZ2VTbGljZVwiOiA0LjIsIFwiYm9yZGVySW1hZ2VTb3VyY2VcIjogNC4yLCBcImJvcmRlckltYWdlV2lkdGhcIjogNC4yLCBcImZsZXhcIjogNC4yLCBcImZsZXhCYXNpc1wiOiA0LjIsIFwiZmxleERpcmVjdGlvblwiOiA0LjIsIFwiZmxleEdyb3dcIjogNC4yLCBcImZsZXhGbG93XCI6IDQuMiwgXCJmbGV4U2hyaW5rXCI6IDQuMiwgXCJmbGV4V3JhcFwiOiA0LjIsIFwiYWxpZ25Db250ZW50XCI6IDQuMiwgXCJhbGlnbkl0ZW1zXCI6IDQuMiwgXCJhbGlnblNlbGZcIjogNC4yLCBcImp1c3RpZnlDb250ZW50XCI6IDQuMiwgXCJvcmRlclwiOiA0LjIsIFwidHJhbnNpdGlvblwiOiA0LjIsIFwidHJhbnNpdGlvbkRlbGF5XCI6IDQuMiwgXCJ0cmFuc2l0aW9uRHVyYXRpb25cIjogNC4yLCBcInRyYW5zaXRpb25Qcm9wZXJ0eVwiOiA0LjIsIFwidHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXCI6IDQuMiwgXCJ0cmFuc2Zvcm1cIjogNC40LCBcInRyYW5zZm9ybU9yaWdpblwiOiA0LjQsIFwidHJhbnNmb3JtT3JpZ2luWFwiOiA0LjQsIFwidHJhbnNmb3JtT3JpZ2luWVwiOiA0LjQsIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IDQuNCwgXCJwZXJzcGVjdGl2ZVwiOiA0LjQsIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogNC40LCBcInRyYW5zZm9ybVN0eWxlXCI6IDQuNCwgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IDQuNCwgXCJhbmltYXRpb25cIjogNC40LCBcImFuaW1hdGlvbkRlbGF5XCI6IDQuNCwgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogNC40LCBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IDQuNCwgXCJhbmltYXRpb25EdXJhdGlvblwiOiA0LjQsIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogNC40LCBcImFuaW1hdGlvbk5hbWVcIjogNC40LCBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiA0LjQsIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogNC40LCBcImFwcGVhcmFuY2VcIjogNTMsIFwidXNlclNlbGVjdFwiOiA1MywgXCJmb250S2VybmluZ1wiOiA0LjQsIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogNTMsIFwidGV4dEVtcGhhc2lzXCI6IDUzLCBcInRleHRFbXBoYXNpc1N0eWxlXCI6IDUzLCBcInRleHRFbXBoYXNpc0NvbG9yXCI6IDUzLCBcImJveERlY29yYXRpb25CcmVha1wiOiA1MywgXCJjbGlwUGF0aFwiOiA1MywgXCJtYXNrSW1hZ2VcIjogNTMsIFwibWFza01vZGVcIjogNTMsIFwibWFza1JlcGVhdFwiOiA1MywgXCJtYXNrUG9zaXRpb25cIjogNTMsIFwibWFza0NsaXBcIjogNTMsIFwibWFza09yaWdpblwiOiA1MywgXCJtYXNrU2l6ZVwiOiA1MywgXCJtYXNrQ29tcG9zaXRlXCI6IDUzLCBcIm1hc2tcIjogNTMsIFwibWFza0JvcmRlclNvdXJjZVwiOiA1MywgXCJtYXNrQm9yZGVyTW9kZVwiOiA1MywgXCJtYXNrQm9yZGVyU2xpY2VcIjogNTMsIFwibWFza0JvcmRlcldpZHRoXCI6IDUzLCBcIm1hc2tCb3JkZXJPdXRzZXRcIjogNTMsIFwibWFza0JvcmRlclJlcGVhdFwiOiA1MywgXCJtYXNrQm9yZGVyXCI6IDUzLCBcIm1hc2tUeXBlXCI6IDUzLCBcImZpbHRlclwiOiA0LjQsIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiA0LjQsIFwiYnJlYWtBZnRlclwiOiA1MywgXCJicmVha0JlZm9yZVwiOiA1MywgXCJicmVha0luc2lkZVwiOiA1MywgXCJjb2x1bW5Db3VudFwiOiA1MywgXCJjb2x1bW5GaWxsXCI6IDUzLCBcImNvbHVtbkdhcFwiOiA1MywgXCJjb2x1bW5SdWxlXCI6IDUzLCBcImNvbHVtblJ1bGVDb2xvclwiOiA1MywgXCJjb2x1bW5SdWxlU3R5bGVcIjogNTMsIFwiY29sdW1uUnVsZVdpZHRoXCI6IDUzLCBcImNvbHVtbnNcIjogNTMsIFwiY29sdW1uU3BhblwiOiA1MywgXCJjb2x1bW5XaWR0aFwiOiA1MyB9LCBcImFuZF9jaHJcIjogeyBcImFwcGVhcmFuY2VcIjogNTYsIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogNTYsIFwidGV4dEVtcGhhc2lzXCI6IDU2LCBcInRleHRFbXBoYXNpc1N0eWxlXCI6IDU2LCBcInRleHRFbXBoYXNpc0NvbG9yXCI6IDU2LCBcImJveERlY29yYXRpb25CcmVha1wiOiA1NiwgXCJtYXNrSW1hZ2VcIjogNTYsIFwibWFza01vZGVcIjogNTYsIFwibWFza1JlcGVhdFwiOiA1NiwgXCJtYXNrUG9zaXRpb25cIjogNTYsIFwibWFza0NsaXBcIjogNTYsIFwibWFza09yaWdpblwiOiA1NiwgXCJtYXNrU2l6ZVwiOiA1NiwgXCJtYXNrQ29tcG9zaXRlXCI6IDU2LCBcIm1hc2tcIjogNTYsIFwibWFza0JvcmRlclNvdXJjZVwiOiA1NiwgXCJtYXNrQm9yZGVyTW9kZVwiOiA1NiwgXCJtYXNrQm9yZGVyU2xpY2VcIjogNTYsIFwibWFza0JvcmRlcldpZHRoXCI6IDU2LCBcIm1hc2tCb3JkZXJPdXRzZXRcIjogNTYsIFwibWFza0JvcmRlclJlcGVhdFwiOiA1NiwgXCJtYXNrQm9yZGVyXCI6IDU2LCBcIm1hc2tUeXBlXCI6IDU2LCBcInRleHREZWNvcmF0aW9uU3R5bGVcIjogNTYsIFwidGV4dERlY29yYXRpb25Ta2lwXCI6IDU2LCBcInRleHREZWNvcmF0aW9uTGluZVwiOiA1NiwgXCJ0ZXh0RGVjb3JhdGlvbkNvbG9yXCI6IDU2IH0sIFwiYW5kX3VjXCI6IHsgXCJmbGV4XCI6IDExLCBcImZsZXhCYXNpc1wiOiAxMSwgXCJmbGV4RGlyZWN0aW9uXCI6IDExLCBcImZsZXhHcm93XCI6IDExLCBcImZsZXhGbG93XCI6IDExLCBcImZsZXhTaHJpbmtcIjogMTEsIFwiZmxleFdyYXBcIjogMTEsIFwiYWxpZ25Db250ZW50XCI6IDExLCBcImFsaWduSXRlbXNcIjogMTEsIFwiYWxpZ25TZWxmXCI6IDExLCBcImp1c3RpZnlDb250ZW50XCI6IDExLCBcIm9yZGVyXCI6IDExLCBcInRyYW5zaXRpb25cIjogMTEsIFwidHJhbnNpdGlvbkRlbGF5XCI6IDExLCBcInRyYW5zaXRpb25EdXJhdGlvblwiOiAxMSwgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogMTEsIFwidHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXCI6IDExLCBcInRyYW5zZm9ybVwiOiAxMSwgXCJ0cmFuc2Zvcm1PcmlnaW5cIjogMTEsIFwidHJhbnNmb3JtT3JpZ2luWFwiOiAxMSwgXCJ0cmFuc2Zvcm1PcmlnaW5ZXCI6IDExLCBcImJhY2tmYWNlVmlzaWJpbGl0eVwiOiAxMSwgXCJwZXJzcGVjdGl2ZVwiOiAxMSwgXCJwZXJzcGVjdGl2ZU9yaWdpblwiOiAxMSwgXCJ0cmFuc2Zvcm1TdHlsZVwiOiAxMSwgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IDExLCBcImFuaW1hdGlvblwiOiAxMSwgXCJhbmltYXRpb25EZWxheVwiOiAxMSwgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogMTEsIFwiYW5pbWF0aW9uRmlsbE1vZGVcIjogMTEsIFwiYW5pbWF0aW9uRHVyYXRpb25cIjogMTEsIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogMTEsIFwiYW5pbWF0aW9uTmFtZVwiOiAxMSwgXCJhbmltYXRpb25QbGF5U3RhdGVcIjogMTEsIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogMTEsIFwiYXBwZWFyYW5jZVwiOiAxMSwgXCJ1c2VyU2VsZWN0XCI6IDExLCBcImZvbnRLZXJuaW5nXCI6IDExLCBcInRleHRFbXBoYXNpc1Bvc2l0aW9uXCI6IDExLCBcInRleHRFbXBoYXNpc1wiOiAxMSwgXCJ0ZXh0RW1waGFzaXNTdHlsZVwiOiAxMSwgXCJ0ZXh0RW1waGFzaXNDb2xvclwiOiAxMSwgXCJtYXNrSW1hZ2VcIjogMTEsIFwibWFza01vZGVcIjogMTEsIFwibWFza1JlcGVhdFwiOiAxMSwgXCJtYXNrUG9zaXRpb25cIjogMTEsIFwibWFza0NsaXBcIjogMTEsIFwibWFza09yaWdpblwiOiAxMSwgXCJtYXNrU2l6ZVwiOiAxMSwgXCJtYXNrQ29tcG9zaXRlXCI6IDExLCBcIm1hc2tcIjogMTEsIFwibWFza0JvcmRlclNvdXJjZVwiOiAxMSwgXCJtYXNrQm9yZGVyTW9kZVwiOiAxMSwgXCJtYXNrQm9yZGVyU2xpY2VcIjogMTEsIFwibWFza0JvcmRlcldpZHRoXCI6IDExLCBcIm1hc2tCb3JkZXJPdXRzZXRcIjogMTEsIFwibWFza0JvcmRlclJlcGVhdFwiOiAxMSwgXCJtYXNrQm9yZGVyXCI6IDExLCBcIm1hc2tUeXBlXCI6IDExLCBcInRleHRTaXplQWRqdXN0XCI6IDExLCBcImZpbHRlclwiOiAxMSwgXCJoeXBoZW5zXCI6IDExLCBcImZsb3dJbnRvXCI6IDExLCBcImZsb3dGcm9tXCI6IDExLCBcImJyZWFrQmVmb3JlXCI6IDExLCBcImJyZWFrQWZ0ZXJcIjogMTEsIFwiYnJlYWtJbnNpZGVcIjogMTEsIFwicmVnaW9uRnJhZ21lbnRcIjogMTEsIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiAxMSwgXCJjb2x1bW5Db3VudFwiOiAxMSwgXCJjb2x1bW5GaWxsXCI6IDExLCBcImNvbHVtbkdhcFwiOiAxMSwgXCJjb2x1bW5SdWxlXCI6IDExLCBcImNvbHVtblJ1bGVDb2xvclwiOiAxMSwgXCJjb2x1bW5SdWxlU3R5bGVcIjogMTEsIFwiY29sdW1uUnVsZVdpZHRoXCI6IDExLCBcImNvbHVtbnNcIjogMTEsIFwiY29sdW1uU3BhblwiOiAxMSwgXCJjb2x1bW5XaWR0aFwiOiAxMSB9LCBcIm9wX21pbmlcIjoge30gfVxufTsgLyogZXNsaW50LWRpc2FibGUgKi8iLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRQcmVmaXhlZEtleWZyYW1lcztcbmZ1bmN0aW9uIGdldFByZWZpeGVkS2V5ZnJhbWVzKGJyb3dzZXJOYW1lLCBicm93c2VyVmVyc2lvbiwgY3NzUHJlZml4KSB7XG4gIHZhciBwcmVmaXhlZEtleWZyYW1lcyA9ICdrZXlmcmFtZXMnO1xuXG4gIGlmIChicm93c2VyTmFtZSA9PT0gJ2Nocm9tZScgJiYgYnJvd3NlclZlcnNpb24gPCA0MyB8fCAoYnJvd3Nlck5hbWUgPT09ICdzYWZhcmknIHx8IGJyb3dzZXJOYW1lID09PSAnaW9zX3NhZicpICYmIGJyb3dzZXJWZXJzaW9uIDwgOSB8fCBicm93c2VyTmFtZSA9PT0gJ29wZXJhJyAmJiBicm93c2VyVmVyc2lvbiA8IDMwIHx8IGJyb3dzZXJOYW1lID09PSAnYW5kcm9pZCcgJiYgYnJvd3NlclZlcnNpb24gPD0gNC40IHx8IGJyb3dzZXJOYW1lID09PSAnYW5kX3VjJykge1xuICAgIHJldHVybiBjc3NQcmVmaXggKyBwcmVmaXhlZEtleWZyYW1lcztcbiAgfVxuICByZXR1cm4gcHJlZml4ZWRLZXlmcmFtZXM7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xyXG5cdHRocm93IG5ldyBFcnJvcihcImRlZmluZSBjYW5ub3QgYmUgdXNlZCBpbmRpcmVjdFwiKTtcclxufTtcclxuIiwiLyohXG4gKiBCb3dzZXIgLSBhIGJyb3dzZXIgZGV0ZWN0b3JcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9kZWQvYm93c2VyXG4gKiBNSVQgTGljZW5zZSB8IChjKSBEdXN0aW4gRGlheiAyMDE1XG4gKi9cblxuIWZ1bmN0aW9uIChyb290LCBuYW1lLCBkZWZpbml0aW9uKSB7XG4gIGlmICh0eXBlb2YgbW9kdWxlICE9ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSBtb2R1bGUuZXhwb3J0cyA9IGRlZmluaXRpb24oKVxuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgZGVmaW5lKG5hbWUsIGRlZmluaXRpb24pXG4gIGVsc2Ugcm9vdFtuYW1lXSA9IGRlZmluaXRpb24oKVxufSh0aGlzLCAnYm93c2VyJywgZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICAqIFNlZSB1c2VyYWdlbnRzLmpzIGZvciBleGFtcGxlcyBvZiBuYXZpZ2F0b3IudXNlckFnZW50XG4gICAgKi9cblxuICB2YXIgdCA9IHRydWVcblxuICBmdW5jdGlvbiBkZXRlY3QodWEpIHtcblxuICAgIGZ1bmN0aW9uIGdldEZpcnN0TWF0Y2gocmVnZXgpIHtcbiAgICAgIHZhciBtYXRjaCA9IHVhLm1hdGNoKHJlZ2V4KTtcbiAgICAgIHJldHVybiAobWF0Y2ggJiYgbWF0Y2gubGVuZ3RoID4gMSAmJiBtYXRjaFsxXSkgfHwgJyc7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0U2Vjb25kTWF0Y2gocmVnZXgpIHtcbiAgICAgIHZhciBtYXRjaCA9IHVhLm1hdGNoKHJlZ2V4KTtcbiAgICAgIHJldHVybiAobWF0Y2ggJiYgbWF0Y2gubGVuZ3RoID4gMSAmJiBtYXRjaFsyXSkgfHwgJyc7XG4gICAgfVxuXG4gICAgdmFyIGlvc2RldmljZSA9IGdldEZpcnN0TWF0Y2goLyhpcG9kfGlwaG9uZXxpcGFkKS9pKS50b0xvd2VyQ2FzZSgpXG4gICAgICAsIGxpa2VBbmRyb2lkID0gL2xpa2UgYW5kcm9pZC9pLnRlc3QodWEpXG4gICAgICAsIGFuZHJvaWQgPSAhbGlrZUFuZHJvaWQgJiYgL2FuZHJvaWQvaS50ZXN0KHVhKVxuICAgICAgLCBuZXh1c01vYmlsZSA9IC9uZXh1c1xccypbMC02XVxccyovaS50ZXN0KHVhKVxuICAgICAgLCBuZXh1c1RhYmxldCA9ICFuZXh1c01vYmlsZSAmJiAvbmV4dXNcXHMqWzAtOV0rL2kudGVzdCh1YSlcbiAgICAgICwgY2hyb21lb3MgPSAvQ3JPUy8udGVzdCh1YSlcbiAgICAgICwgc2lsayA9IC9zaWxrL2kudGVzdCh1YSlcbiAgICAgICwgc2FpbGZpc2ggPSAvc2FpbGZpc2gvaS50ZXN0KHVhKVxuICAgICAgLCB0aXplbiA9IC90aXplbi9pLnRlc3QodWEpXG4gICAgICAsIHdlYm9zID0gLyh3ZWJ8aHB3KW9zL2kudGVzdCh1YSlcbiAgICAgICwgd2luZG93c3Bob25lID0gL3dpbmRvd3MgcGhvbmUvaS50ZXN0KHVhKVxuICAgICAgLCBzYW1zdW5nQnJvd3NlciA9IC9TYW1zdW5nQnJvd3Nlci9pLnRlc3QodWEpXG4gICAgICAsIHdpbmRvd3MgPSAhd2luZG93c3Bob25lICYmIC93aW5kb3dzL2kudGVzdCh1YSlcbiAgICAgICwgbWFjID0gIWlvc2RldmljZSAmJiAhc2lsayAmJiAvbWFjaW50b3NoL2kudGVzdCh1YSlcbiAgICAgICwgbGludXggPSAhYW5kcm9pZCAmJiAhc2FpbGZpc2ggJiYgIXRpemVuICYmICF3ZWJvcyAmJiAvbGludXgvaS50ZXN0KHVhKVxuICAgICAgLCBlZGdlVmVyc2lvbiA9IGdldFNlY29uZE1hdGNoKC9lZGcoW2VhXXxpb3MpXFwvKFxcZCsoXFwuXFxkKyk/KS9pKVxuICAgICAgLCB2ZXJzaW9uSWRlbnRpZmllciA9IGdldEZpcnN0TWF0Y2goL3ZlcnNpb25cXC8oXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICAsIHRhYmxldCA9IC90YWJsZXQvaS50ZXN0KHVhKSAmJiAhL3RhYmxldCBwYy9pLnRlc3QodWEpXG4gICAgICAsIG1vYmlsZSA9ICF0YWJsZXQgJiYgL1teLV1tb2JpL2kudGVzdCh1YSlcbiAgICAgICwgeGJveCA9IC94Ym94L2kudGVzdCh1YSlcbiAgICAgICwgcmVzdWx0XG5cbiAgICBpZiAoL29wZXJhL2kudGVzdCh1YSkpIHtcbiAgICAgIC8vICBhbiBvbGQgT3BlcmFcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ09wZXJhJ1xuICAgICAgLCBvcGVyYTogdFxuICAgICAgLCB2ZXJzaW9uOiB2ZXJzaW9uSWRlbnRpZmllciB8fCBnZXRGaXJzdE1hdGNoKC8oPzpvcGVyYXxvcHJ8b3Bpb3MpW1xcc1xcL10oXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmICgvb3ByXFwvfG9waW9zL2kudGVzdCh1YSkpIHtcbiAgICAgIC8vIGEgbmV3IE9wZXJhXG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIG5hbWU6ICdPcGVyYSdcbiAgICAgICAgLCBvcGVyYTogdFxuICAgICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/Om9wcnxvcGlvcylbXFxzXFwvXShcXGQrKFxcLlxcZCspPykvaSkgfHwgdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL1NhbXN1bmdCcm93c2VyL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ1NhbXN1bmcgSW50ZXJuZXQgZm9yIEFuZHJvaWQnXG4gICAgICAgICwgc2Ftc3VuZ0Jyb3dzZXI6IHRcbiAgICAgICAgLCB2ZXJzaW9uOiB2ZXJzaW9uSWRlbnRpZmllciB8fCBnZXRGaXJzdE1hdGNoKC8oPzpTYW1zdW5nQnJvd3NlcilbXFxzXFwvXShcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL2NvYXN0L2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ09wZXJhIENvYXN0J1xuICAgICAgICAsIGNvYXN0OiB0XG4gICAgICAgICwgdmVyc2lvbjogdmVyc2lvbklkZW50aWZpZXIgfHwgZ2V0Rmlyc3RNYXRjaCgvKD86Y29hc3QpW1xcc1xcL10oXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKC95YWJyb3dzZXIvaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnWWFuZGV4IEJyb3dzZXInXG4gICAgICAsIHlhbmRleGJyb3dzZXI6IHRcbiAgICAgICwgdmVyc2lvbjogdmVyc2lvbklkZW50aWZpZXIgfHwgZ2V0Rmlyc3RNYXRjaCgvKD86eWFicm93c2VyKVtcXHNcXC9dKFxcZCsoXFwuXFxkKyk/KS9pKVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICgvdWNicm93c2VyL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICBuYW1lOiAnVUMgQnJvd3NlcidcbiAgICAgICAgLCB1Y2Jyb3dzZXI6IHRcbiAgICAgICAgLCB2ZXJzaW9uOiBnZXRGaXJzdE1hdGNoKC8oPzp1Y2Jyb3dzZXIpW1xcc1xcL10oXFxkKyg/OlxcLlxcZCspKykvaSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL214aW9zL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ01heHRob24nXG4gICAgICAgICwgbWF4dGhvbjogdFxuICAgICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/Om14aW9zKVtcXHNcXC9dKFxcZCsoPzpcXC5cXGQrKSspL2kpXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKC9lcGlwaGFueS9pLnRlc3QodWEpKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIG5hbWU6ICdFcGlwaGFueSdcbiAgICAgICAgLCBlcGlwaGFueTogdFxuICAgICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/OmVwaXBoYW55KVtcXHNcXC9dKFxcZCsoPzpcXC5cXGQrKSspL2kpXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKC9wdWZmaW4vaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnUHVmZmluJ1xuICAgICAgICAsIHB1ZmZpbjogdFxuICAgICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/OnB1ZmZpbilbXFxzXFwvXShcXGQrKD86XFwuXFxkKyk/KS9pKVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICgvc2xlaXBuaXIvaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnU2xlaXBuaXInXG4gICAgICAgICwgc2xlaXBuaXI6IHRcbiAgICAgICAgLCB2ZXJzaW9uOiBnZXRGaXJzdE1hdGNoKC8oPzpzbGVpcG5pcilbXFxzXFwvXShcXGQrKD86XFwuXFxkKykrKS9pKVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICgvay1tZWxlb24vaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnSy1NZWxlb24nXG4gICAgICAgICwga01lbGVvbjogdFxuICAgICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/OmstbWVsZW9uKVtcXHNcXC9dKFxcZCsoPzpcXC5cXGQrKSspL2kpXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHdpbmRvd3NwaG9uZSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnV2luZG93cyBQaG9uZSdcbiAgICAgICwgb3NuYW1lOiAnV2luZG93cyBQaG9uZSdcbiAgICAgICwgd2luZG93c3Bob25lOiB0XG4gICAgICB9XG4gICAgICBpZiAoZWRnZVZlcnNpb24pIHtcbiAgICAgICAgcmVzdWx0Lm1zZWRnZSA9IHRcbiAgICAgICAgcmVzdWx0LnZlcnNpb24gPSBlZGdlVmVyc2lvblxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJlc3VsdC5tc2llID0gdFxuICAgICAgICByZXN1bHQudmVyc2lvbiA9IGdldEZpcnN0TWF0Y2goL2llbW9iaWxlXFwvKFxcZCsoXFwuXFxkKyk/KS9pKVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICgvbXNpZXx0cmlkZW50L2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ0ludGVybmV0IEV4cGxvcmVyJ1xuICAgICAgLCBtc2llOiB0XG4gICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/Om1zaWUgfHJ2OikoXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjaHJvbWVvcykge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnQ2hyb21lJ1xuICAgICAgLCBvc25hbWU6ICdDaHJvbWUgT1MnXG4gICAgICAsIGNocm9tZW9zOiB0XG4gICAgICAsIGNocm9tZUJvb2s6IHRcbiAgICAgICwgY2hyb21lOiB0XG4gICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/OmNocm9tZXxjcmlvc3xjcm1vKVxcLyhcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKC9lZGcoW2VhXXxpb3MpL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ01pY3Jvc29mdCBFZGdlJ1xuICAgICAgLCBtc2VkZ2U6IHRcbiAgICAgICwgdmVyc2lvbjogZWRnZVZlcnNpb25cbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL3ZpdmFsZGkvaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnVml2YWxkaSdcbiAgICAgICAgLCB2aXZhbGRpOiB0XG4gICAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvdml2YWxkaVxcLyhcXGQrKFxcLlxcZCspPykvaSkgfHwgdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoc2FpbGZpc2gpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ1NhaWxmaXNoJ1xuICAgICAgLCBvc25hbWU6ICdTYWlsZmlzaCBPUydcbiAgICAgICwgc2FpbGZpc2g6IHRcbiAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvc2FpbGZpc2hcXHM/YnJvd3NlclxcLyhcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL3NlYW1vbmtleVxcLy9pLnRlc3QodWEpKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIG5hbWU6ICdTZWFNb25rZXknXG4gICAgICAsIHNlYW1vbmtleTogdFxuICAgICAgLCB2ZXJzaW9uOiBnZXRGaXJzdE1hdGNoKC9zZWFtb25rZXlcXC8oXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKC9maXJlZm94fGljZXdlYXNlbHxmeGlvcy9pLnRlc3QodWEpKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIG5hbWU6ICdGaXJlZm94J1xuICAgICAgLCBmaXJlZm94OiB0XG4gICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goLyg/OmZpcmVmb3h8aWNld2Vhc2VsfGZ4aW9zKVsgXFwvXShcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICAgIGlmICgvXFwoKG1vYmlsZXx0YWJsZXQpO1teXFwpXSpydjpbXFxkXFwuXStcXCkvaS50ZXN0KHVhKSkge1xuICAgICAgICByZXN1bHQuZmlyZWZveG9zID0gdFxuICAgICAgICByZXN1bHQub3NuYW1lID0gJ0ZpcmVmb3ggT1MnXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpbGspIHtcbiAgICAgIHJlc3VsdCA9ICB7XG4gICAgICAgIG5hbWU6ICdBbWF6b24gU2lsaydcbiAgICAgICwgc2lsazogdFxuICAgICAgLCB2ZXJzaW9uIDogZ2V0Rmlyc3RNYXRjaCgvc2lsa1xcLyhcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL3BoYW50b20vaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnUGhhbnRvbUpTJ1xuICAgICAgLCBwaGFudG9tOiB0XG4gICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goL3BoYW50b21qc1xcLyhcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL3NsaW1lcmpzL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ1NsaW1lckpTJ1xuICAgICAgICAsIHNsaW1lcjogdFxuICAgICAgICAsIHZlcnNpb246IGdldEZpcnN0TWF0Y2goL3NsaW1lcmpzXFwvKFxcZCsoXFwuXFxkKyk/KS9pKVxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICgvYmxhY2tiZXJyeXxcXGJiYlxcZCsvaS50ZXN0KHVhKSB8fCAvcmltXFxzdGFibGV0L2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ0JsYWNrQmVycnknXG4gICAgICAsIG9zbmFtZTogJ0JsYWNrQmVycnkgT1MnXG4gICAgICAsIGJsYWNrYmVycnk6IHRcbiAgICAgICwgdmVyc2lvbjogdmVyc2lvbklkZW50aWZpZXIgfHwgZ2V0Rmlyc3RNYXRjaCgvYmxhY2tiZXJyeVtcXGRdK1xcLyhcXGQrKFxcLlxcZCspPykvaSlcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAod2Vib3MpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ1dlYk9TJ1xuICAgICAgLCBvc25hbWU6ICdXZWJPUydcbiAgICAgICwgd2Vib3M6IHRcbiAgICAgICwgdmVyc2lvbjogdmVyc2lvbklkZW50aWZpZXIgfHwgZ2V0Rmlyc3RNYXRjaCgvdyg/OmViKT9vc2Jyb3dzZXJcXC8oXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICB9O1xuICAgICAgL3RvdWNocGFkXFwvL2kudGVzdCh1YSkgJiYgKHJlc3VsdC50b3VjaHBhZCA9IHQpXG4gICAgfVxuICAgIGVsc2UgaWYgKC9iYWRhL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ0JhZGEnXG4gICAgICAsIG9zbmFtZTogJ0JhZGEnXG4gICAgICAsIGJhZGE6IHRcbiAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvZG9sZmluXFwvKFxcZCsoXFwuXFxkKyk/KS9pKVxuICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGl6ZW4pIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ1RpemVuJ1xuICAgICAgLCBvc25hbWU6ICdUaXplbidcbiAgICAgICwgdGl6ZW46IHRcbiAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvKD86dGl6ZW5cXHM/KT9icm93c2VyXFwvKFxcZCsoXFwuXFxkKyk/KS9pKSB8fCB2ZXJzaW9uSWRlbnRpZmllclxuICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoL3F1cHppbGxhL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ1F1cFppbGxhJ1xuICAgICAgICAsIHF1cHppbGxhOiB0XG4gICAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvKD86cXVwemlsbGEpW1xcc1xcL10oXFxkKyg/OlxcLlxcZCspKykvaSkgfHwgdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL2Nocm9taXVtL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ0Nocm9taXVtJ1xuICAgICAgICAsIGNocm9taXVtOiB0XG4gICAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvKD86Y2hyb21pdW0pW1xcc1xcL10oXFxkKyg/OlxcLlxcZCspPykvaSkgfHwgdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL2Nocm9tZXxjcmlvc3xjcm1vL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ0Nocm9tZSdcbiAgICAgICAgLCBjaHJvbWU6IHRcbiAgICAgICAgLCB2ZXJzaW9uOiBnZXRGaXJzdE1hdGNoKC8oPzpjaHJvbWV8Y3Jpb3N8Y3JtbylcXC8oXFxkKyhcXC5cXGQrKT8pL2kpXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGFuZHJvaWQpIHtcbiAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgbmFtZTogJ0FuZHJvaWQnXG4gICAgICAgICwgdmVyc2lvbjogdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoL3NhZmFyaXxhcHBsZXdlYmtpdC9pLnRlc3QodWEpKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIG5hbWU6ICdTYWZhcmknXG4gICAgICAsIHNhZmFyaTogdFxuICAgICAgfVxuICAgICAgaWYgKHZlcnNpb25JZGVudGlmaWVyKSB7XG4gICAgICAgIHJlc3VsdC52ZXJzaW9uID0gdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaW9zZGV2aWNlKSB7XG4gICAgICByZXN1bHQgPSB7XG4gICAgICAgIG5hbWUgOiBpb3NkZXZpY2UgPT0gJ2lwaG9uZScgPyAnaVBob25lJyA6IGlvc2RldmljZSA9PSAnaXBhZCcgPyAnaVBhZCcgOiAnaVBvZCdcbiAgICAgIH1cbiAgICAgIC8vIFdURjogdmVyc2lvbiBpcyBub3QgcGFydCBvZiB1c2VyIGFnZW50IGluIHdlYiBhcHBzXG4gICAgICBpZiAodmVyc2lvbklkZW50aWZpZXIpIHtcbiAgICAgICAgcmVzdWx0LnZlcnNpb24gPSB2ZXJzaW9uSWRlbnRpZmllclxuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmKC9nb29nbGVib3QvaS50ZXN0KHVhKSkge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiAnR29vZ2xlYm90J1xuICAgICAgLCBnb29nbGVib3Q6IHRcbiAgICAgICwgdmVyc2lvbjogZ2V0Rmlyc3RNYXRjaCgvZ29vZ2xlYm90XFwvKFxcZCsoXFwuXFxkKykpL2kpIHx8IHZlcnNpb25JZGVudGlmaWVyXG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgcmVzdWx0ID0ge1xuICAgICAgICBuYW1lOiBnZXRGaXJzdE1hdGNoKC9eKC4qKVxcLyguKikgLyksXG4gICAgICAgIHZlcnNpb246IGdldFNlY29uZE1hdGNoKC9eKC4qKVxcLyguKikgLylcbiAgICAgfTtcbiAgIH1cblxuICAgIC8vIHNldCB3ZWJraXQgb3IgZ2Vja28gZmxhZyBmb3IgYnJvd3NlcnMgYmFzZWQgb24gdGhlc2UgZW5naW5lc1xuICAgIGlmICghcmVzdWx0Lm1zZWRnZSAmJiAvKGFwcGxlKT93ZWJraXQvaS50ZXN0KHVhKSkge1xuICAgICAgaWYgKC8oYXBwbGUpP3dlYmtpdFxcLzUzN1xcLjM2L2kudGVzdCh1YSkpIHtcbiAgICAgICAgcmVzdWx0Lm5hbWUgPSByZXN1bHQubmFtZSB8fCBcIkJsaW5rXCJcbiAgICAgICAgcmVzdWx0LmJsaW5rID0gdFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0Lm5hbWUgPSByZXN1bHQubmFtZSB8fCBcIldlYmtpdFwiXG4gICAgICAgIHJlc3VsdC53ZWJraXQgPSB0XG4gICAgICB9XG4gICAgICBpZiAoIXJlc3VsdC52ZXJzaW9uICYmIHZlcnNpb25JZGVudGlmaWVyKSB7XG4gICAgICAgIHJlc3VsdC52ZXJzaW9uID0gdmVyc2lvbklkZW50aWZpZXJcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFyZXN1bHQub3BlcmEgJiYgL2dlY2tvXFwvL2kudGVzdCh1YSkpIHtcbiAgICAgIHJlc3VsdC5uYW1lID0gcmVzdWx0Lm5hbWUgfHwgXCJHZWNrb1wiXG4gICAgICByZXN1bHQuZ2Vja28gPSB0XG4gICAgICByZXN1bHQudmVyc2lvbiA9IHJlc3VsdC52ZXJzaW9uIHx8IGdldEZpcnN0TWF0Y2goL2dlY2tvXFwvKFxcZCsoXFwuXFxkKyk/KS9pKVxuICAgIH1cblxuICAgIC8vIHNldCBPUyBmbGFncyBmb3IgcGxhdGZvcm1zIHRoYXQgaGF2ZSBtdWx0aXBsZSBicm93c2Vyc1xuICAgIGlmICghcmVzdWx0LndpbmRvd3NwaG9uZSAmJiAoYW5kcm9pZCB8fCByZXN1bHQuc2lsaykpIHtcbiAgICAgIHJlc3VsdC5hbmRyb2lkID0gdFxuICAgICAgcmVzdWx0Lm9zbmFtZSA9ICdBbmRyb2lkJ1xuICAgIH0gZWxzZSBpZiAoIXJlc3VsdC53aW5kb3dzcGhvbmUgJiYgaW9zZGV2aWNlKSB7XG4gICAgICByZXN1bHRbaW9zZGV2aWNlXSA9IHRcbiAgICAgIHJlc3VsdC5pb3MgPSB0XG4gICAgICByZXN1bHQub3NuYW1lID0gJ2lPUydcbiAgICB9IGVsc2UgaWYgKG1hYykge1xuICAgICAgcmVzdWx0Lm1hYyA9IHRcbiAgICAgIHJlc3VsdC5vc25hbWUgPSAnbWFjT1MnXG4gICAgfSBlbHNlIGlmICh4Ym94KSB7XG4gICAgICByZXN1bHQueGJveCA9IHRcbiAgICAgIHJlc3VsdC5vc25hbWUgPSAnWGJveCdcbiAgICB9IGVsc2UgaWYgKHdpbmRvd3MpIHtcbiAgICAgIHJlc3VsdC53aW5kb3dzID0gdFxuICAgICAgcmVzdWx0Lm9zbmFtZSA9ICdXaW5kb3dzJ1xuICAgIH0gZWxzZSBpZiAobGludXgpIHtcbiAgICAgIHJlc3VsdC5saW51eCA9IHRcbiAgICAgIHJlc3VsdC5vc25hbWUgPSAnTGludXgnXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0V2luZG93c1ZlcnNpb24gKHMpIHtcbiAgICAgIHN3aXRjaCAocykge1xuICAgICAgICBjYXNlICdOVCc6IHJldHVybiAnTlQnXG4gICAgICAgIGNhc2UgJ1hQJzogcmV0dXJuICdYUCdcbiAgICAgICAgY2FzZSAnTlQgNS4wJzogcmV0dXJuICcyMDAwJ1xuICAgICAgICBjYXNlICdOVCA1LjEnOiByZXR1cm4gJ1hQJ1xuICAgICAgICBjYXNlICdOVCA1LjInOiByZXR1cm4gJzIwMDMnXG4gICAgICAgIGNhc2UgJ05UIDYuMCc6IHJldHVybiAnVmlzdGEnXG4gICAgICAgIGNhc2UgJ05UIDYuMSc6IHJldHVybiAnNydcbiAgICAgICAgY2FzZSAnTlQgNi4yJzogcmV0dXJuICc4J1xuICAgICAgICBjYXNlICdOVCA2LjMnOiByZXR1cm4gJzguMSdcbiAgICAgICAgY2FzZSAnTlQgMTAuMCc6IHJldHVybiAnMTAnXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiB1bmRlZmluZWRcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPUyB2ZXJzaW9uIGV4dHJhY3Rpb25cbiAgICB2YXIgb3NWZXJzaW9uID0gJyc7XG4gICAgaWYgKHJlc3VsdC53aW5kb3dzKSB7XG4gICAgICBvc1ZlcnNpb24gPSBnZXRXaW5kb3dzVmVyc2lvbihnZXRGaXJzdE1hdGNoKC9XaW5kb3dzICgoTlR8WFApKCBcXGRcXGQ/LlxcZCk/KS9pKSlcbiAgICB9IGVsc2UgaWYgKHJlc3VsdC53aW5kb3dzcGhvbmUpIHtcbiAgICAgIG9zVmVyc2lvbiA9IGdldEZpcnN0TWF0Y2goL3dpbmRvd3MgcGhvbmUgKD86b3MpP1xccz8oXFxkKyhcXC5cXGQrKSopL2kpO1xuICAgIH0gZWxzZSBpZiAocmVzdWx0Lm1hYykge1xuICAgICAgb3NWZXJzaW9uID0gZ2V0Rmlyc3RNYXRjaCgvTWFjIE9TIFggKFxcZCsoW19cXC5cXHNdXFxkKykqKS9pKTtcbiAgICAgIG9zVmVyc2lvbiA9IG9zVmVyc2lvbi5yZXBsYWNlKC9bX1xcc10vZywgJy4nKTtcbiAgICB9IGVsc2UgaWYgKGlvc2RldmljZSkge1xuICAgICAgb3NWZXJzaW9uID0gZ2V0Rmlyc3RNYXRjaCgvb3MgKFxcZCsoW19cXHNdXFxkKykqKSBsaWtlIG1hYyBvcyB4L2kpO1xuICAgICAgb3NWZXJzaW9uID0gb3NWZXJzaW9uLnJlcGxhY2UoL1tfXFxzXS9nLCAnLicpO1xuICAgIH0gZWxzZSBpZiAoYW5kcm9pZCkge1xuICAgICAgb3NWZXJzaW9uID0gZ2V0Rmlyc3RNYXRjaCgvYW5kcm9pZFsgXFwvLV0oXFxkKyhcXC5cXGQrKSopL2kpO1xuICAgIH0gZWxzZSBpZiAocmVzdWx0LndlYm9zKSB7XG4gICAgICBvc1ZlcnNpb24gPSBnZXRGaXJzdE1hdGNoKC8oPzp3ZWJ8aHB3KW9zXFwvKFxcZCsoXFwuXFxkKykqKS9pKTtcbiAgICB9IGVsc2UgaWYgKHJlc3VsdC5ibGFja2JlcnJ5KSB7XG4gICAgICBvc1ZlcnNpb24gPSBnZXRGaXJzdE1hdGNoKC9yaW1cXHN0YWJsZXRcXHNvc1xccyhcXGQrKFxcLlxcZCspKikvaSk7XG4gICAgfSBlbHNlIGlmIChyZXN1bHQuYmFkYSkge1xuICAgICAgb3NWZXJzaW9uID0gZ2V0Rmlyc3RNYXRjaCgvYmFkYVxcLyhcXGQrKFxcLlxcZCspKikvaSk7XG4gICAgfSBlbHNlIGlmIChyZXN1bHQudGl6ZW4pIHtcbiAgICAgIG9zVmVyc2lvbiA9IGdldEZpcnN0TWF0Y2goL3RpemVuW1xcL1xcc10oXFxkKyhcXC5cXGQrKSopL2kpO1xuICAgIH1cbiAgICBpZiAob3NWZXJzaW9uKSB7XG4gICAgICByZXN1bHQub3N2ZXJzaW9uID0gb3NWZXJzaW9uO1xuICAgIH1cblxuICAgIC8vIGRldmljZSB0eXBlIGV4dHJhY3Rpb25cbiAgICB2YXIgb3NNYWpvclZlcnNpb24gPSAhcmVzdWx0LndpbmRvd3MgJiYgb3NWZXJzaW9uLnNwbGl0KCcuJylbMF07XG4gICAgaWYgKFxuICAgICAgICAgdGFibGV0XG4gICAgICB8fCBuZXh1c1RhYmxldFxuICAgICAgfHwgaW9zZGV2aWNlID09ICdpcGFkJ1xuICAgICAgfHwgKGFuZHJvaWQgJiYgKG9zTWFqb3JWZXJzaW9uID09IDMgfHwgKG9zTWFqb3JWZXJzaW9uID49IDQgJiYgIW1vYmlsZSkpKVxuICAgICAgfHwgcmVzdWx0LnNpbGtcbiAgICApIHtcbiAgICAgIHJlc3VsdC50YWJsZXQgPSB0XG4gICAgfSBlbHNlIGlmIChcbiAgICAgICAgIG1vYmlsZVxuICAgICAgfHwgaW9zZGV2aWNlID09ICdpcGhvbmUnXG4gICAgICB8fCBpb3NkZXZpY2UgPT0gJ2lwb2QnXG4gICAgICB8fCBhbmRyb2lkXG4gICAgICB8fCBuZXh1c01vYmlsZVxuICAgICAgfHwgcmVzdWx0LmJsYWNrYmVycnlcbiAgICAgIHx8IHJlc3VsdC53ZWJvc1xuICAgICAgfHwgcmVzdWx0LmJhZGFcbiAgICApIHtcbiAgICAgIHJlc3VsdC5tb2JpbGUgPSB0XG4gICAgfVxuXG4gICAgLy8gR3JhZGVkIEJyb3dzZXIgU3VwcG9ydFxuICAgIC8vIGh0dHA6Ly9kZXZlbG9wZXIueWFob28uY29tL3l1aS9hcnRpY2xlcy9nYnNcbiAgICBpZiAocmVzdWx0Lm1zZWRnZSB8fFxuICAgICAgICAocmVzdWx0Lm1zaWUgJiYgcmVzdWx0LnZlcnNpb24gPj0gMTApIHx8XG4gICAgICAgIChyZXN1bHQueWFuZGV4YnJvd3NlciAmJiByZXN1bHQudmVyc2lvbiA+PSAxNSkgfHxcblx0XHQgICAgKHJlc3VsdC52aXZhbGRpICYmIHJlc3VsdC52ZXJzaW9uID49IDEuMCkgfHxcbiAgICAgICAgKHJlc3VsdC5jaHJvbWUgJiYgcmVzdWx0LnZlcnNpb24gPj0gMjApIHx8XG4gICAgICAgIChyZXN1bHQuc2Ftc3VuZ0Jyb3dzZXIgJiYgcmVzdWx0LnZlcnNpb24gPj0gNCkgfHxcbiAgICAgICAgKHJlc3VsdC5maXJlZm94ICYmIHJlc3VsdC52ZXJzaW9uID49IDIwLjApIHx8XG4gICAgICAgIChyZXN1bHQuc2FmYXJpICYmIHJlc3VsdC52ZXJzaW9uID49IDYpIHx8XG4gICAgICAgIChyZXN1bHQub3BlcmEgJiYgcmVzdWx0LnZlcnNpb24gPj0gMTAuMCkgfHxcbiAgICAgICAgKHJlc3VsdC5pb3MgJiYgcmVzdWx0Lm9zdmVyc2lvbiAmJiByZXN1bHQub3N2ZXJzaW9uLnNwbGl0KFwiLlwiKVswXSA+PSA2KSB8fFxuICAgICAgICAocmVzdWx0LmJsYWNrYmVycnkgJiYgcmVzdWx0LnZlcnNpb24gPj0gMTAuMSlcbiAgICAgICAgfHwgKHJlc3VsdC5jaHJvbWl1bSAmJiByZXN1bHQudmVyc2lvbiA+PSAyMClcbiAgICAgICAgKSB7XG4gICAgICByZXN1bHQuYSA9IHQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKChyZXN1bHQubXNpZSAmJiByZXN1bHQudmVyc2lvbiA8IDEwKSB8fFxuICAgICAgICAocmVzdWx0LmNocm9tZSAmJiByZXN1bHQudmVyc2lvbiA8IDIwKSB8fFxuICAgICAgICAocmVzdWx0LmZpcmVmb3ggJiYgcmVzdWx0LnZlcnNpb24gPCAyMC4wKSB8fFxuICAgICAgICAocmVzdWx0LnNhZmFyaSAmJiByZXN1bHQudmVyc2lvbiA8IDYpIHx8XG4gICAgICAgIChyZXN1bHQub3BlcmEgJiYgcmVzdWx0LnZlcnNpb24gPCAxMC4wKSB8fFxuICAgICAgICAocmVzdWx0LmlvcyAmJiByZXN1bHQub3N2ZXJzaW9uICYmIHJlc3VsdC5vc3ZlcnNpb24uc3BsaXQoXCIuXCIpWzBdIDwgNilcbiAgICAgICAgfHwgKHJlc3VsdC5jaHJvbWl1bSAmJiByZXN1bHQudmVyc2lvbiA8IDIwKVxuICAgICAgICApIHtcbiAgICAgIHJlc3VsdC5jID0gdFxuICAgIH0gZWxzZSByZXN1bHQueCA9IHRcblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIHZhciBib3dzZXIgPSBkZXRlY3QodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgPyBuYXZpZ2F0b3IudXNlckFnZW50IHx8ICcnIDogJycpXG5cbiAgYm93c2VyLnRlc3QgPSBmdW5jdGlvbiAoYnJvd3Nlckxpc3QpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJyb3dzZXJMaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIgYnJvd3Nlckl0ZW0gPSBicm93c2VyTGlzdFtpXTtcbiAgICAgIGlmICh0eXBlb2YgYnJvd3Nlckl0ZW09PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKGJyb3dzZXJJdGVtIGluIGJvd3Nlcikge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdmVyc2lvbiBwcmVjaXNpb25zIGNvdW50XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqICAgZ2V0VmVyc2lvblByZWNpc2lvbihcIjEuMTAuM1wiKSAvLyAzXG4gICAqXG4gICAqIEBwYXJhbSAge3N0cmluZ30gdmVyc2lvblxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBmdW5jdGlvbiBnZXRWZXJzaW9uUHJlY2lzaW9uKHZlcnNpb24pIHtcbiAgICByZXR1cm4gdmVyc2lvbi5zcGxpdChcIi5cIikubGVuZ3RoO1xuICB9XG5cbiAgLyoqXG4gICAqIEFycmF5OjptYXAgcG9seWZpbGxcbiAgICpcbiAgICogQHBhcmFtICB7QXJyYXl9IGFyclxuICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gaXRlcmF0b3JcbiAgICogQHJldHVybiB7QXJyYXl9XG4gICAqL1xuICBmdW5jdGlvbiBtYXAoYXJyLCBpdGVyYXRvcikge1xuICAgIHZhciByZXN1bHQgPSBbXSwgaTtcbiAgICBpZiAoQXJyYXkucHJvdG90eXBlLm1hcCkge1xuICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChhcnIsIGl0ZXJhdG9yKTtcbiAgICB9XG4gICAgZm9yIChpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0LnB1c2goaXRlcmF0b3IoYXJyW2ldKSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogQ2FsY3VsYXRlIGJyb3dzZXIgdmVyc2lvbiB3ZWlnaHRcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogICBjb21wYXJlVmVyc2lvbnMoWycxLjEwLjIuMScsICAnMS44LjIuMS45MCddKSAgICAvLyAxXG4gICAqICAgY29tcGFyZVZlcnNpb25zKFsnMS4wMTAuMi4xJywgJzEuMDkuMi4xLjkwJ10pOyAgLy8gMVxuICAgKiAgIGNvbXBhcmVWZXJzaW9ucyhbJzEuMTAuMi4xJywgICcxLjEwLjIuMSddKTsgICAgIC8vIDBcbiAgICogICBjb21wYXJlVmVyc2lvbnMoWycxLjEwLjIuMScsICAnMS4wODAwLjInXSk7ICAgICAvLyAtMVxuICAgKlxuICAgKiBAcGFyYW0gIHtBcnJheTxTdHJpbmc+fSB2ZXJzaW9ucyB2ZXJzaW9ucyB0byBjb21wYXJlXG4gICAqIEByZXR1cm4ge051bWJlcn0gY29tcGFyaXNvbiByZXN1bHRcbiAgICovXG4gIGZ1bmN0aW9uIGNvbXBhcmVWZXJzaW9ucyh2ZXJzaW9ucykge1xuICAgIC8vIDEpIGdldCBjb21tb24gcHJlY2lzaW9uIGZvciBib3RoIHZlcnNpb25zLCBmb3IgZXhhbXBsZSBmb3IgXCIxMC4wXCIgYW5kIFwiOVwiIGl0IHNob3VsZCBiZSAyXG4gICAgdmFyIHByZWNpc2lvbiA9IE1hdGgubWF4KGdldFZlcnNpb25QcmVjaXNpb24odmVyc2lvbnNbMF0pLCBnZXRWZXJzaW9uUHJlY2lzaW9uKHZlcnNpb25zWzFdKSk7XG4gICAgdmFyIGNodW5rcyA9IG1hcCh2ZXJzaW9ucywgZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgIHZhciBkZWx0YSA9IHByZWNpc2lvbiAtIGdldFZlcnNpb25QcmVjaXNpb24odmVyc2lvbik7XG5cbiAgICAgIC8vIDIpIFwiOVwiIC0+IFwiOS4wXCIgKGZvciBwcmVjaXNpb24gPSAyKVxuICAgICAgdmVyc2lvbiA9IHZlcnNpb24gKyBuZXcgQXJyYXkoZGVsdGEgKyAxKS5qb2luKFwiLjBcIik7XG5cbiAgICAgIC8vIDMpIFwiOS4wXCIgLT4gW1wiMDAwMDAwMDAwXCJcIiwgXCIwMDAwMDAwMDlcIl1cbiAgICAgIHJldHVybiBtYXAodmVyc2lvbi5zcGxpdChcIi5cIiksIGZ1bmN0aW9uIChjaHVuaykge1xuICAgICAgICByZXR1cm4gbmV3IEFycmF5KDIwIC0gY2h1bmsubGVuZ3RoKS5qb2luKFwiMFwiKSArIGNodW5rO1xuICAgICAgfSkucmV2ZXJzZSgpO1xuICAgIH0pO1xuXG4gICAgLy8gaXRlcmF0ZSBpbiByZXZlcnNlIG9yZGVyIGJ5IHJldmVyc2VkIGNodW5rcyBhcnJheVxuICAgIHdoaWxlICgtLXByZWNpc2lvbiA+PSAwKSB7XG4gICAgICAvLyA0KSBjb21wYXJlOiBcIjAwMDAwMDAwOVwiID4gXCIwMDAwMDAwMTBcIiA9IGZhbHNlIChidXQgXCI5XCIgPiBcIjEwXCIgPSB0cnVlKVxuICAgICAgaWYgKGNodW5rc1swXVtwcmVjaXNpb25dID4gY2h1bmtzWzFdW3ByZWNpc2lvbl0pIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChjaHVua3NbMF1bcHJlY2lzaW9uXSA9PT0gY2h1bmtzWzFdW3ByZWNpc2lvbl0pIHtcbiAgICAgICAgaWYgKHByZWNpc2lvbiA9PT0gMCkge1xuICAgICAgICAgIC8vIGFsbCB2ZXJzaW9uIGNodW5rcyBhcmUgc2FtZVxuICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBicm93c2VyIGlzIHVuc3VwcG9ydGVkXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqICAgYm93c2VyLmlzVW5zdXBwb3J0ZWRCcm93c2VyKHtcbiAgICogICAgIG1zaWU6IFwiMTBcIixcbiAgICogICAgIGZpcmVmb3g6IFwiMjNcIixcbiAgICogICAgIGNocm9tZTogXCIyOVwiLFxuICAgKiAgICAgc2FmYXJpOiBcIjUuMVwiLFxuICAgKiAgICAgb3BlcmE6IFwiMTZcIixcbiAgICogICAgIHBoYW50b206IFwiNTM0XCJcbiAgICogICB9KTtcbiAgICpcbiAgICogQHBhcmFtICB7T2JqZWN0fSAgbWluVmVyc2lvbnMgbWFwIG9mIG1pbmltYWwgdmVyc2lvbiB0byBicm93c2VyXG4gICAqIEBwYXJhbSAge0Jvb2xlYW59IFtzdHJpY3RNb2RlID0gZmFsc2VdIGZsYWcgdG8gcmV0dXJuIGZhbHNlIGlmIGJyb3dzZXIgd2Fzbid0IGZvdW5kIGluIG1hcFxuICAgKiBAcGFyYW0gIHtTdHJpbmd9ICBbdWFdIHVzZXIgYWdlbnQgc3RyaW5nXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBmdW5jdGlvbiBpc1Vuc3VwcG9ydGVkQnJvd3NlcihtaW5WZXJzaW9ucywgc3RyaWN0TW9kZSwgdWEpIHtcbiAgICB2YXIgX2Jvd3NlciA9IGJvd3NlcjtcblxuICAgIC8vIG1ha2Ugc3RyaWN0TW9kZSBwYXJhbSBvcHRpb25hbCB3aXRoIHVhIHBhcmFtIHVzYWdlXG4gICAgaWYgKHR5cGVvZiBzdHJpY3RNb2RlID09PSAnc3RyaW5nJykge1xuICAgICAgdWEgPSBzdHJpY3RNb2RlO1xuICAgICAgc3RyaWN0TW9kZSA9IHZvaWQoMCk7XG4gICAgfVxuXG4gICAgaWYgKHN0cmljdE1vZGUgPT09IHZvaWQoMCkpIHtcbiAgICAgIHN0cmljdE1vZGUgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHVhKSB7XG4gICAgICBfYm93c2VyID0gZGV0ZWN0KHVhKTtcbiAgICB9XG5cbiAgICB2YXIgdmVyc2lvbiA9IFwiXCIgKyBfYm93c2VyLnZlcnNpb247XG4gICAgZm9yICh2YXIgYnJvd3NlciBpbiBtaW5WZXJzaW9ucykge1xuICAgICAgaWYgKG1pblZlcnNpb25zLmhhc093blByb3BlcnR5KGJyb3dzZXIpKSB7XG4gICAgICAgIGlmIChfYm93c2VyW2Jyb3dzZXJdKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBtaW5WZXJzaW9uc1ticm93c2VyXSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQnJvd3NlciB2ZXJzaW9uIGluIHRoZSBtaW5WZXJzaW9uIG1hcCBzaG91bGQgYmUgYSBzdHJpbmc6ICcgKyBicm93c2VyICsgJzogJyArIFN0cmluZyhtaW5WZXJzaW9ucykpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGJyb3dzZXIgdmVyc2lvbiBhbmQgbWluIHN1cHBvcnRlZCB2ZXJzaW9uLlxuICAgICAgICAgIHJldHVybiBjb21wYXJlVmVyc2lvbnMoW3ZlcnNpb24sIG1pblZlcnNpb25zW2Jyb3dzZXJdXSkgPCAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cmljdE1vZGU7IC8vIG5vdCBmb3VuZFxuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGJyb3dzZXIgaXMgc3VwcG9ydGVkXG4gICAqXG4gICAqIEBwYXJhbSAge09iamVjdH0gbWluVmVyc2lvbnMgbWFwIG9mIG1pbmltYWwgdmVyc2lvbiB0byBicm93c2VyXG4gICAqIEBwYXJhbSAge0Jvb2xlYW59IFtzdHJpY3RNb2RlID0gZmFsc2VdIGZsYWcgdG8gcmV0dXJuIGZhbHNlIGlmIGJyb3dzZXIgd2Fzbid0IGZvdW5kIGluIG1hcFxuICAgKiBAcGFyYW0gIHtTdHJpbmd9ICBbdWFdIHVzZXIgYWdlbnQgc3RyaW5nXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBmdW5jdGlvbiBjaGVjayhtaW5WZXJzaW9ucywgc3RyaWN0TW9kZSwgdWEpIHtcbiAgICByZXR1cm4gIWlzVW5zdXBwb3J0ZWRCcm93c2VyKG1pblZlcnNpb25zLCBzdHJpY3RNb2RlLCB1YSk7XG4gIH1cblxuICBib3dzZXIuaXNVbnN1cHBvcnRlZEJyb3dzZXIgPSBpc1Vuc3VwcG9ydGVkQnJvd3NlcjtcbiAgYm93c2VyLmNvbXBhcmVWZXJzaW9ucyA9IGNvbXBhcmVWZXJzaW9ucztcbiAgYm93c2VyLmNoZWNrID0gY2hlY2s7XG5cbiAgLypcbiAgICogU2V0IG91ciBkZXRlY3QgbWV0aG9kIHRvIHRoZSBtYWluIGJvd3NlciBvYmplY3Qgc28gd2UgY2FuXG4gICAqIHJldXNlIGl0IHRvIHRlc3Qgb3RoZXIgdXNlciBhZ2VudHMuXG4gICAqIFRoaXMgaXMgbmVlZGVkIHRvIGltcGxlbWVudCBmdXR1cmUgdGVzdHMuXG4gICAqL1xuICBib3dzZXIuX2RldGVjdCA9IGRldGVjdDtcblxuICAvKlxuICAgKiBTZXQgb3VyIGRldGVjdCBwdWJsaWMgbWV0aG9kIHRvIHRoZSBtYWluIGJvd3NlciBvYmplY3RcbiAgICogVGhpcyBpcyBuZWVkZWQgdG8gaW1wbGVtZW50IGJvd3NlciBpbiBzZXJ2ZXIgc2lkZVxuICAgKi9cbiAgYm93c2VyLmRldGVjdCA9IGRldGVjdDtcbiAgcmV0dXJuIGJvd3NlclxufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRCcm93c2VySW5mb3JtYXRpb247XG5cbnZhciBfYm93c2VyID0gcmVxdWlyZSgnYm93c2VyJyk7XG5cbnZhciBfYm93c2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Jvd3Nlcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhCeUJyb3dzZXIgPSB7XG4gIGNocm9tZTogJ1dlYmtpdCcsXG4gIHNhZmFyaTogJ1dlYmtpdCcsXG4gIGlvczogJ1dlYmtpdCcsXG4gIGFuZHJvaWQ6ICdXZWJraXQnLFxuICBwaGFudG9tOiAnV2Via2l0JyxcbiAgb3BlcmE6ICdXZWJraXQnLFxuICB3ZWJvczogJ1dlYmtpdCcsXG4gIGJsYWNrYmVycnk6ICdXZWJraXQnLFxuICBiYWRhOiAnV2Via2l0JyxcbiAgdGl6ZW46ICdXZWJraXQnLFxuICBjaHJvbWl1bTogJ1dlYmtpdCcsXG4gIHZpdmFsZGk6ICdXZWJraXQnLFxuICBmaXJlZm94OiAnTW96JyxcbiAgc2VhbW9uZXk6ICdNb3onLFxuICBzYWlsZmlzaDogJ01veicsXG4gIG1zaWU6ICdtcycsXG4gIG1zZWRnZTogJ21zJ1xufTtcblxuXG52YXIgYnJvd3NlckJ5Q2FuSXVzZUFsaWFzID0ge1xuICBjaHJvbWU6ICdjaHJvbWUnLFxuICBjaHJvbWl1bTogJ2Nocm9tZScsXG4gIHNhZmFyaTogJ3NhZmFyaScsXG4gIGZpcmZveDogJ2ZpcmVmb3gnLFxuICBtc2VkZ2U6ICdlZGdlJyxcbiAgb3BlcmE6ICdvcGVyYScsXG4gIHZpdmFsZGk6ICdvcGVyYScsXG4gIG1zaWU6ICdpZSdcbn07XG5cbmZ1bmN0aW9uIGdldEJyb3dzZXJOYW1lKGJyb3dzZXJJbmZvKSB7XG4gIGlmIChicm93c2VySW5mby5maXJlZm94KSB7XG4gICAgcmV0dXJuICdmaXJlZm94JztcbiAgfVxuXG4gIGlmIChicm93c2VySW5mby5tb2JpbGUgfHwgYnJvd3NlckluZm8udGFibGV0KSB7XG4gICAgaWYgKGJyb3dzZXJJbmZvLmlvcykge1xuICAgICAgcmV0dXJuICdpb3Nfc2FmJztcbiAgICB9IGVsc2UgaWYgKGJyb3dzZXJJbmZvLmFuZHJvaWQpIHtcbiAgICAgIHJldHVybiAnYW5kcm9pZCc7XG4gICAgfSBlbHNlIGlmIChicm93c2VySW5mby5vcGVyYSkge1xuICAgICAgcmV0dXJuICdvcF9taW5pJztcbiAgICB9XG4gIH1cblxuICBmb3IgKHZhciBicm93c2VyIGluIGJyb3dzZXJCeUNhbkl1c2VBbGlhcykge1xuICAgIGlmIChicm93c2VySW5mby5oYXNPd25Qcm9wZXJ0eShicm93c2VyKSkge1xuICAgICAgcmV0dXJuIGJyb3dzZXJCeUNhbkl1c2VBbGlhc1ticm93c2VyXTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBVc2VzIGJvd3NlciB0byBnZXQgZGVmYXVsdCBicm93c2VyIGJyb3dzZXJJbmZvcm1hdGlvbiBzdWNoIGFzIHZlcnNpb24gYW5kIG5hbWVcbiAqIEV2YWx1YXRlcyBib3dzZXIgYnJvd3NlckluZm8gYW5kIGFkZHMgdmVuZG9yUHJlZml4IGJyb3dzZXJJbmZvcm1hdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IHVzZXJBZ2VudCAtIHVzZXJBZ2VudCB0aGF0IGdldHMgZXZhbHVhdGVkXG4gKi9cbmZ1bmN0aW9uIGdldEJyb3dzZXJJbmZvcm1hdGlvbih1c2VyQWdlbnQpIHtcbiAgdmFyIGJyb3dzZXJJbmZvID0gX2Jvd3NlcjIuZGVmYXVsdC5fZGV0ZWN0KHVzZXJBZ2VudCk7XG5cbiAgaWYgKGJyb3dzZXJJbmZvLnlhbmRleGJyb3dzZXIpIHtcbiAgICBicm93c2VySW5mbyA9IF9ib3dzZXIyLmRlZmF1bHQuX2RldGVjdCh1c2VyQWdlbnQucmVwbGFjZSgvWWFCcm93c2VyXFwvWzAtOS5dKi8sICcnKSk7XG4gIH1cblxuICBmb3IgKHZhciBicm93c2VyIGluIHByZWZpeEJ5QnJvd3Nlcikge1xuICAgIGlmIChicm93c2VySW5mby5oYXNPd25Qcm9wZXJ0eShicm93c2VyKSkge1xuICAgICAgdmFyIHByZWZpeCA9IHByZWZpeEJ5QnJvd3Nlclticm93c2VyXTtcblxuICAgICAgYnJvd3NlckluZm8uanNQcmVmaXggPSBwcmVmaXg7XG4gICAgICBicm93c2VySW5mby5jc3NQcmVmaXggPSAnLScgKyBwcmVmaXgudG9Mb3dlckNhc2UoKSArICctJztcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGJyb3dzZXJJbmZvLmJyb3dzZXJOYW1lID0gZ2V0QnJvd3Nlck5hbWUoYnJvd3NlckluZm8pO1xuXG4gIC8vIEZvciBjb3Jkb3ZhIElPUyA4IHRoZSB2ZXJzaW9uIGlzIG1pc3NpbmcsIHNldCB0cnVuY2F0ZWQgb3N2ZXJzaW9uIHRvIHByZXZlbnQgTmFOXG4gIGlmIChicm93c2VySW5mby52ZXJzaW9uKSB7XG4gICAgYnJvd3NlckluZm8uYnJvd3NlclZlcnNpb24gPSBwYXJzZUZsb2F0KGJyb3dzZXJJbmZvLnZlcnNpb24pO1xuICB9IGVsc2Uge1xuICAgIGJyb3dzZXJJbmZvLmJyb3dzZXJWZXJzaW9uID0gcGFyc2VJbnQocGFyc2VGbG9hdChicm93c2VySW5mby5vc3ZlcnNpb24pLCAxMCk7XG4gIH1cblxuICBicm93c2VySW5mby5vc1ZlcnNpb24gPSBwYXJzZUZsb2F0KGJyb3dzZXJJbmZvLm9zdmVyc2lvbik7XG5cbiAgLy8gaU9TIGZvcmNlcyBhbGwgYnJvd3NlcnMgdG8gdXNlIFNhZmFyaSB1bmRlciB0aGUgaG9vZFxuICAvLyBhcyB0aGUgU2FmYXJpIHZlcnNpb24gc2VlbXMgdG8gbWF0Y2ggdGhlIGlPUyB2ZXJzaW9uXG4gIC8vIHdlIGp1c3QgZXhwbGljaXRlbHkgdXNlIHRoZSBvc3ZlcnNpb24gaW5zdGVhZFxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vcm9mcmlzY2htYW5uL2lubGluZS1zdHlsZS1wcmVmaXhlci9pc3N1ZXMvNzJcbiAgaWYgKGJyb3dzZXJJbmZvLmJyb3dzZXJOYW1lID09PSAnaW9zX3NhZicgJiYgYnJvd3NlckluZm8uYnJvd3NlclZlcnNpb24gPiBicm93c2VySW5mby5vc1ZlcnNpb24pIHtcbiAgICBicm93c2VySW5mby5icm93c2VyVmVyc2lvbiA9IGJyb3dzZXJJbmZvLm9zVmVyc2lvbjtcbiAgfVxuXG4gIC8vIHNlcGVyYXRlIG5hdGl2ZSBhbmRyb2lkIGNocm9tZVxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vcm9mcmlzY2htYW5uL2lubGluZS1zdHlsZS1wcmVmaXhlci9pc3N1ZXMvNDVcbiAgaWYgKGJyb3dzZXJJbmZvLmJyb3dzZXJOYW1lID09PSAnYW5kcm9pZCcgJiYgYnJvd3NlckluZm8uY2hyb21lICYmIGJyb3dzZXJJbmZvLmJyb3dzZXJWZXJzaW9uID4gMzcpIHtcbiAgICBicm93c2VySW5mby5icm93c2VyTmFtZSA9ICdhbmRfY2hyJztcbiAgfVxuXG4gIC8vIEZvciBhbmRyb2lkIDwgNC40IHdlIHdhbnQgdG8gY2hlY2sgdGhlIG9zdmVyc2lvblxuICAvLyBub3QgdGhlIGNocm9tZSB2ZXJzaW9uLCBzZWUgaXNzdWUgIzI2XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9yb2ZyaXNjaG1hbm4vaW5saW5lLXN0eWxlLXByZWZpeGVyL2lzc3Vlcy8yNlxuICBpZiAoYnJvd3NlckluZm8uYnJvd3Nlck5hbWUgPT09ICdhbmRyb2lkJyAmJiBicm93c2VySW5mby5vc1ZlcnNpb24gPCA1KSB7XG4gICAgYnJvd3NlckluZm8uYnJvd3NlclZlcnNpb24gPSBicm93c2VySW5mby5vc1ZlcnNpb247XG4gIH1cblxuICAvLyBTYW1zdW5nIGJyb3dzZXIgYXJlIGJhc2ljYWxseSBidWlsZCBvbiBDaHJvbWUgPiA0NFxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vcm9mcmlzY2htYW5uL2lubGluZS1zdHlsZS1wcmVmaXhlci9pc3N1ZXMvMTAyXG4gIGlmIChicm93c2VySW5mby5icm93c2VyTmFtZSA9PT0gJ2FuZHJvaWQnICYmIGJyb3dzZXJJbmZvLnNhbXN1bmdCcm93c2VyKSB7XG4gICAgYnJvd3NlckluZm8uYnJvd3Nlck5hbWUgPSAnYW5kX2Nocic7XG4gICAgYnJvd3NlckluZm8uYnJvd3NlclZlcnNpb24gPSA0NDtcbiAgfVxuXG4gIHJldHVybiBicm93c2VySW5mbztcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cbnZhciBfZ2V0QnJvd3NlckluZm9ybWF0aW9uID0gcmVxdWlyZSgnLi4vdXRpbHMvZ2V0QnJvd3NlckluZm9ybWF0aW9uJyk7XG5cbnZhciBfZ2V0QnJvd3NlckluZm9ybWF0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldEJyb3dzZXJJbmZvcm1hdGlvbik7XG5cbnZhciBfZ2V0UHJlZml4ZWRLZXlmcmFtZXMgPSByZXF1aXJlKCcuLi91dGlscy9nZXRQcmVmaXhlZEtleWZyYW1lcycpO1xuXG52YXIgX2dldFByZWZpeGVkS2V5ZnJhbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByZWZpeGVkS2V5ZnJhbWVzKTtcblxudmFyIF9jYXBpdGFsaXplU3RyaW5nID0gcmVxdWlyZSgnLi4vdXRpbHMvY2FwaXRhbGl6ZVN0cmluZycpO1xuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2FwaXRhbGl6ZVN0cmluZyk7XG5cbnZhciBfYWRkTmV3VmFsdWVzT25seSA9IHJlcXVpcmUoJy4uL3V0aWxzL2FkZE5ld1ZhbHVlc09ubHknKTtcblxudmFyIF9hZGROZXdWYWx1ZXNPbmx5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2FkZE5ld1ZhbHVlc09ubHkpO1xuXG52YXIgX2lzT2JqZWN0ID0gcmVxdWlyZSgnLi4vdXRpbHMvaXNPYmplY3QnKTtcblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pc09iamVjdCk7XG5cbnZhciBfcHJlZml4VmFsdWUgPSByZXF1aXJlKCcuLi91dGlscy9wcmVmaXhWYWx1ZScpO1xuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ByZWZpeFZhbHVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gY3JlYXRlUHJlZml4ZXIoX3JlZikge1xuICB2YXIgcHJlZml4TWFwID0gX3JlZi5wcmVmaXhNYXAsXG4gICAgICBwbHVnaW5zID0gX3JlZi5wbHVnaW5zO1xuICB2YXIgZmFsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZ1bmN0aW9uIChzdHlsZSkge1xuICAgIHJldHVybiBzdHlsZTtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICogSW5zdGFudGlhbnRlIGEgbmV3IHByZWZpeGVyXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlckFnZW50IC0gdXNlckFnZW50IHRvIGdhdGhlciBwcmVmaXggaW5mb3JtYXRpb24gYWNjb3JkaW5nIHRvIGNhbml1c2UuY29tXG4gICAgKiBAcGFyYW0ge3N0cmluZ30ga2VlcFVucHJlZml4ZWQgLSBrZWVwcyB1bnByZWZpeGVkIHByb3BlcnRpZXMgYW5kIHZhbHVlc1xuICAgICovXG4gICAgZnVuY3Rpb24gUHJlZml4ZXIoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcmVmaXhlcik7XG5cbiAgICAgIHZhciBkZWZhdWx0VXNlckFnZW50ID0gdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgPyBuYXZpZ2F0b3IudXNlckFnZW50IDogdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLl91c2VyQWdlbnQgPSBvcHRpb25zLnVzZXJBZ2VudCB8fCBkZWZhdWx0VXNlckFnZW50O1xuICAgICAgdGhpcy5fa2VlcFVucHJlZml4ZWQgPSBvcHRpb25zLmtlZXBVbnByZWZpeGVkIHx8IGZhbHNlO1xuXG4gICAgICBpZiAodGhpcy5fdXNlckFnZW50KSB7XG4gICAgICAgIHRoaXMuX2Jyb3dzZXJJbmZvID0gKDAsIF9nZXRCcm93c2VySW5mb3JtYXRpb24yLmRlZmF1bHQpKHRoaXMuX3VzZXJBZ2VudCk7XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrcyBpZiB0aGUgdXNlckFnZW50IHdhcyByZXNvbHZlZCBjb3JyZWN0bHlcbiAgICAgIGlmICh0aGlzLl9icm93c2VySW5mbyAmJiB0aGlzLl9icm93c2VySW5mby5jc3NQcmVmaXgpIHtcbiAgICAgICAgdGhpcy5wcmVmaXhlZEtleWZyYW1lcyA9ICgwLCBfZ2V0UHJlZml4ZWRLZXlmcmFtZXMyLmRlZmF1bHQpKHRoaXMuX2Jyb3dzZXJJbmZvLmJyb3dzZXJOYW1lLCB0aGlzLl9icm93c2VySW5mby5icm93c2VyVmVyc2lvbiwgdGhpcy5fYnJvd3NlckluZm8uY3NzUHJlZml4KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3VzZUZhbGxiYWNrID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJlZml4RGF0YSA9IHRoaXMuX2Jyb3dzZXJJbmZvLmJyb3dzZXJOYW1lICYmIHByZWZpeE1hcFt0aGlzLl9icm93c2VySW5mby5icm93c2VyTmFtZV07XG4gICAgICBpZiAocHJlZml4RGF0YSkge1xuICAgICAgICB0aGlzLl9yZXF1aXJlc1ByZWZpeCA9IHt9O1xuXG4gICAgICAgIGZvciAodmFyIHByb3BlcnR5IGluIHByZWZpeERhdGEpIHtcbiAgICAgICAgICBpZiAocHJlZml4RGF0YVtwcm9wZXJ0eV0gPj0gdGhpcy5fYnJvd3NlckluZm8uYnJvd3NlclZlcnNpb24pIHtcbiAgICAgICAgICAgIHRoaXMuX3JlcXVpcmVzUHJlZml4W3Byb3BlcnR5XSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5faGFzUHJvcHNSZXF1aXJpbmdQcmVmaXggPSBPYmplY3Qua2V5cyh0aGlzLl9yZXF1aXJlc1ByZWZpeCkubGVuZ3RoID4gMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3VzZUZhbGxiYWNrID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fbWV0YURhdGEgPSB7XG4gICAgICAgIGJyb3dzZXJWZXJzaW9uOiB0aGlzLl9icm93c2VySW5mby5icm93c2VyVmVyc2lvbixcbiAgICAgICAgYnJvd3Nlck5hbWU6IHRoaXMuX2Jyb3dzZXJJbmZvLmJyb3dzZXJOYW1lLFxuICAgICAgICBjc3NQcmVmaXg6IHRoaXMuX2Jyb3dzZXJJbmZvLmNzc1ByZWZpeCxcbiAgICAgICAganNQcmVmaXg6IHRoaXMuX2Jyb3dzZXJJbmZvLmpzUHJlZml4LFxuICAgICAgICBrZWVwVW5wcmVmaXhlZDogdGhpcy5fa2VlcFVucHJlZml4ZWQsXG4gICAgICAgIHJlcXVpcmVzUHJlZml4OiB0aGlzLl9yZXF1aXJlc1ByZWZpeFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoUHJlZml4ZXIsIFt7XG4gICAgICBrZXk6ICdwcmVmaXgnLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgICAgICAvLyB1c2Ugc3RhdGljIHByZWZpeGVyIGFzIGZhbGxiYWNrIGlmIHVzZXJBZ2VudCBjYW4gbm90IGJlIHJlc29sdmVkXG4gICAgICAgIGlmICh0aGlzLl91c2VGYWxsYmFjaykge1xuICAgICAgICAgIHJldHVybiBmYWxsYmFjayhzdHlsZSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBvbmx5IGFkZCBwcmVmaXhlcyBpZiBuZWVkZWRcbiAgICAgICAgaWYgKCF0aGlzLl9oYXNQcm9wc1JlcXVpcmluZ1ByZWZpeCkge1xuICAgICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9wcmVmaXhTdHlsZShzdHlsZSk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiAnX3ByZWZpeFN0eWxlJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBfcHJlZml4U3R5bGUoc3R5bGUpIHtcbiAgICAgICAgZm9yICh2YXIgcHJvcGVydHkgaW4gc3R5bGUpIHtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgICAgICAvLyBoYW5kbGUgbmVzdGVkIG9iamVjdHNcbiAgICAgICAgICBpZiAoKDAsIF9pc09iamVjdDIuZGVmYXVsdCkodmFsdWUpKSB7XG4gICAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSB0aGlzLnByZWZpeCh2YWx1ZSk7XG4gICAgICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgdmFyIGNvbWJpbmVkVmFsdWUgPSBbXTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICAgIHZhciBwcm9jZXNzZWRWYWx1ZSA9ICgwLCBfcHJlZml4VmFsdWUyLmRlZmF1bHQpKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZVtpXSwgc3R5bGUsIHRoaXMuX21ldGFEYXRhKTtcbiAgICAgICAgICAgICAgKDAsIF9hZGROZXdWYWx1ZXNPbmx5Mi5kZWZhdWx0KShjb21iaW5lZFZhbHVlLCBwcm9jZXNzZWRWYWx1ZSB8fCB2YWx1ZVtpXSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICAgICAgaWYgKGNvbWJpbmVkVmFsdWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgdGhpcy5fbWV0YURhdGEpO1xuXG4gICAgICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgICAgIC8vIGJ5IGFueSBwbHVnaW4gdG8gcHJldmVudCB1bm5lY2Vzc2FyeSBtdXRhdGlvbnNcbiAgICAgICAgICAgIGlmIChfcHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBhZGQgcHJlZml4ZXMgdG8gcHJvcGVydGllc1xuICAgICAgICAgICAgaWYgKHRoaXMuX3JlcXVpcmVzUHJlZml4Lmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgICAgICAgICAgICBzdHlsZVt0aGlzLl9icm93c2VySW5mby5qc1ByZWZpeCArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IHZhbHVlO1xuICAgICAgICAgICAgICBpZiAoIXRoaXMuX2tlZXBVbnByZWZpeGVkKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHN0eWxlW3Byb3BlcnR5XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBzdHlsZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAqIFJldHVybnMgYSBwcmVmaXhlZCB2ZXJzaW9uIG9mIHRoZSBzdHlsZSBvYmplY3QgdXNpbmcgYWxsIHZlbmRvciBwcmVmaXhlc1xuICAgICAgKiBAcGFyYW0ge09iamVjdH0gc3R5bGVzIC0gU3R5bGUgb2JqZWN0IHRoYXQgZ2V0cyBwcmVmaXhlZCBwcm9wZXJ0aWVzIGFkZGVkXG4gICAgICAqIEByZXR1cm5zIHtPYmplY3R9IC0gU3R5bGUgb2JqZWN0IHdpdGggcHJlZml4ZWQgcHJvcGVydGllcyBhbmQgdmFsdWVzXG4gICAgICAqL1xuXG4gICAgfV0sIFt7XG4gICAgICBrZXk6ICdwcmVmaXhBbGwnLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHByZWZpeEFsbChzdHlsZXMpIHtcbiAgICAgICAgcmV0dXJuIGZhbGxiYWNrKHN0eWxlcyk7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFByZWZpeGVyO1xuICB9KCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhQcm9wZXJ0eTtcblxudmFyIF9jYXBpdGFsaXplU3RyaW5nID0gcmVxdWlyZSgnLi9jYXBpdGFsaXplU3RyaW5nJyk7XG5cbnZhciBfY2FwaXRhbGl6ZVN0cmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jYXBpdGFsaXplU3RyaW5nKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIHN0eWxlW3JlcXVpcmVkUHJlZml4ZXNbaV0gKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgfVxuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVQcmVmaXhlcjtcblxudmFyIF9wcmVmaXhQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL3V0aWxzL3ByZWZpeFByb3BlcnR5Jyk7XG5cbnZhciBfcHJlZml4UHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJlZml4UHJvcGVydHkpO1xuXG52YXIgX3ByZWZpeFZhbHVlID0gcmVxdWlyZSgnLi4vdXRpbHMvcHJlZml4VmFsdWUnKTtcblxudmFyIF9wcmVmaXhWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcmVmaXhWYWx1ZSk7XG5cbnZhciBfYWRkTmV3VmFsdWVzT25seSA9IHJlcXVpcmUoJy4uL3V0aWxzL2FkZE5ld1ZhbHVlc09ubHknKTtcblxudmFyIF9hZGROZXdWYWx1ZXNPbmx5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2FkZE5ld1ZhbHVlc09ubHkpO1xuXG52YXIgX2lzT2JqZWN0ID0gcmVxdWlyZSgnLi4vdXRpbHMvaXNPYmplY3QnKTtcblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pc09iamVjdCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGNyZWF0ZVByZWZpeGVyKF9yZWYpIHtcbiAgdmFyIHByZWZpeE1hcCA9IF9yZWYucHJlZml4TWFwLFxuICAgICAgcGx1Z2lucyA9IF9yZWYucGx1Z2lucztcblxuICBmdW5jdGlvbiBwcmVmaXhBbGwoc3R5bGUpIHtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBzdHlsZSkge1xuICAgICAgdmFyIHZhbHVlID0gc3R5bGVbcHJvcGVydHldO1xuXG4gICAgICAvLyBoYW5kbGUgbmVzdGVkIG9iamVjdHNcbiAgICAgIGlmICgoMCwgX2lzT2JqZWN0Mi5kZWZhdWx0KSh2YWx1ZSkpIHtcbiAgICAgICAgc3R5bGVbcHJvcGVydHldID0gcHJlZml4QWxsKHZhbHVlKTtcbiAgICAgICAgLy8gaGFuZGxlIGFycmF5IHZhbHVlc1xuICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICB2YXIgY29tYmluZWRWYWx1ZSA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgIHZhciBwcm9jZXNzZWRWYWx1ZSA9ICgwLCBfcHJlZml4VmFsdWUyLmRlZmF1bHQpKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZVtpXSwgc3R5bGUsIHByZWZpeE1hcCk7XG4gICAgICAgICAgKDAsIF9hZGROZXdWYWx1ZXNPbmx5Mi5kZWZhdWx0KShjb21iaW5lZFZhbHVlLCBwcm9jZXNzZWRWYWx1ZSB8fCB2YWx1ZVtpXSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoY29tYmluZWRWYWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gY29tYmluZWRWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIF9wcm9jZXNzZWRWYWx1ZSA9ICgwLCBfcHJlZml4VmFsdWUyLmRlZmF1bHQpKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByZWZpeE1hcCk7XG5cbiAgICAgICAgLy8gb25seSBtb2RpZnkgdGhlIHZhbHVlIGlmIGl0IHdhcyB0b3VjaGVkXG4gICAgICAgIC8vIGJ5IGFueSBwbHVnaW4gdG8gcHJldmVudCB1bm5lY2Vzc2FyeSBtdXRhdGlvbnNcbiAgICAgICAgaWYgKF9wcm9jZXNzZWRWYWx1ZSkge1xuICAgICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9IF9wcm9jZXNzZWRWYWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICgwLCBfcHJlZml4UHJvcGVydHkyLmRlZmF1bHQpKHByZWZpeE1hcCwgcHJvcGVydHksIHN0eWxlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICByZXR1cm4gcHJlZml4QWxsO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAobXVpVGhlbWUpIHtcbiAgdmFyIGlzQ2xpZW50ID0gdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCc7XG4gIHZhciB1c2VyQWdlbnQgPSBtdWlUaGVtZS51c2VyQWdlbnQ7XG5cbiAgaWYgKHVzZXJBZ2VudCA9PT0gdW5kZWZpbmVkICYmIGlzQ2xpZW50KSB7XG4gICAgdXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgfVxuXG4gIGlmICh1c2VyQWdlbnQgPT09IHVuZGVmaW5lZCAmJiAhaGFzV2FybmVkQWJvdXRVc2VyQWdlbnQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKGZhbHNlLCAnTWF0ZXJpYWwtVUk6IHVzZXJBZ2VudCBzaG91bGQgYmUgc3VwcGxpZWQgaW4gdGhlIG11aVRoZW1lIGNvbnRleHRcXG4gICAgICBmb3Igc2VydmVyLXNpZGUgcmVuZGVyaW5nLicpIDogdm9pZCAwO1xuXG4gICAgaGFzV2FybmVkQWJvdXRVc2VyQWdlbnQgPSB0cnVlO1xuICB9XG5cbiAgdmFyIHByZWZpeEFsbCA9ICgwLCBfY3JlYXRlUHJlZml4ZXIyLmRlZmF1bHQpKF9hdXRvcHJlZml4ZXJTdGF0aWMyLmRlZmF1bHQpO1xuXG4gIGlmICh1c2VyQWdlbnQgPT09IGZhbHNlKSB7XG4gICAgLy8gRGlzYWJsZWQgYXV0b3ByZWZpeGVyXG4gICAgcmV0dXJuIG51bGw7XG4gIH0gZWxzZSBpZiAodXNlckFnZW50ID09PSAnYWxsJyB8fCB1c2VyQWdlbnQgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIFByZWZpeCBmb3IgYWxsIHVzZXIgYWdlbnRcbiAgICByZXR1cm4gZnVuY3Rpb24gKHN0eWxlKSB7XG4gICAgICB2YXIgaXNGbGV4ID0gWydmbGV4JywgJ2lubGluZS1mbGV4J10uaW5kZXhPZihzdHlsZS5kaXNwbGF5KSAhPT0gLTE7XG4gICAgICB2YXIgc3R5bGVQcmVmaXhlZCA9IHByZWZpeEFsbChzdHlsZSk7XG5cbiAgICAgIGlmIChpc0ZsZXgpIHtcbiAgICAgICAgdmFyIGRpc3BsYXkgPSBzdHlsZVByZWZpeGVkLmRpc3BsYXk7XG4gICAgICAgIGlmIChpc0NsaWVudCkge1xuICAgICAgICAgIC8vIFdlIGNhbid0IGFwcGx5IHRoaXMgam9pbiB3aXRoIHJlYWN0LWRvbTpcbiAgICAgICAgICAvLyAjaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy82NDY3XG4gICAgICAgICAgc3R5bGVQcmVmaXhlZC5kaXNwbGF5ID0gZGlzcGxheVtkaXNwbGF5Lmxlbmd0aCAtIDFdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0eWxlUHJlZml4ZWQuZGlzcGxheSA9IGRpc3BsYXkuam9pbignOyBkaXNwbGF5OiAnKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3R5bGVQcmVmaXhlZDtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHZhciBQcmVmaXhlciA9ICgwLCBfY3JlYXRlUHJlZml4ZXI0LmRlZmF1bHQpKF9hdXRvcHJlZml4ZXJEeW5hbWljMi5kZWZhdWx0LCBwcmVmaXhBbGwpO1xuICAgIHZhciBwcmVmaXhlciA9IG5ldyBQcmVmaXhlcih7XG4gICAgICB1c2VyQWdlbnQ6IHVzZXJBZ2VudFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChzdHlsZSkge1xuICAgICAgcmV0dXJuIHByZWZpeGVyLnByZWZpeChzdHlsZSk7XG4gICAgfTtcbiAgfVxufTtcblxudmFyIF9jcmVhdGVQcmVmaXhlciA9IHJlcXVpcmUoJ2lubGluZS1zdHlsZS1wcmVmaXhlci9zdGF0aWMvY3JlYXRlUHJlZml4ZXInKTtcblxudmFyIF9jcmVhdGVQcmVmaXhlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVQcmVmaXhlcik7XG5cbnZhciBfY3JlYXRlUHJlZml4ZXIzID0gcmVxdWlyZSgnaW5saW5lLXN0eWxlLXByZWZpeGVyL2R5bmFtaWMvY3JlYXRlUHJlZml4ZXInKTtcblxudmFyIF9jcmVhdGVQcmVmaXhlcjQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVQcmVmaXhlcjMpO1xuXG52YXIgX2F1dG9wcmVmaXhlckR5bmFtaWMgPSByZXF1aXJlKCcuL2F1dG9wcmVmaXhlckR5bmFtaWMnKTtcblxudmFyIF9hdXRvcHJlZml4ZXJEeW5hbWljMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F1dG9wcmVmaXhlckR5bmFtaWMpO1xuXG52YXIgX2F1dG9wcmVmaXhlclN0YXRpYyA9IHJlcXVpcmUoJy4vYXV0b3ByZWZpeGVyU3RhdGljJyk7XG5cbnZhciBfYXV0b3ByZWZpeGVyU3RhdGljMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F1dG9wcmVmaXhlclN0YXRpYyk7XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgaGFzV2FybmVkQWJvdXRVc2VyQWdlbnQgPSBmYWxzZTsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgbWVudTogMTAwMCxcbiAgYXBwQmFyOiAxMTAwLFxuICBkcmF3ZXJPdmVybGF5OiAxMjAwLFxuICBkcmF3ZXI6IDEzMDAsXG4gIGRpYWxvZ092ZXJsYXk6IDE0MDAsXG4gIGRpYWxvZzogMTUwMCxcbiAgbGF5ZXI6IDIwMDAsXG4gIHBvcG92ZXI6IDIxMDAsXG4gIHNuYWNrYmFyOiAyOTAwLFxuICB0b29sdGlwOiAzMDAwXG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICBpY29uU2l6ZTogMjQsXG5cbiAgZGVza3RvcEd1dHRlcjogMjQsXG4gIGRlc2t0b3BHdXR0ZXJNb3JlOiAzMixcbiAgZGVza3RvcEd1dHRlckxlc3M6IDE2LFxuICBkZXNrdG9wR3V0dGVyTWluaTogOCxcbiAgZGVza3RvcEtleWxpbmVJbmNyZW1lbnQ6IDY0LFxuICBkZXNrdG9wRHJvcERvd25NZW51SXRlbUhlaWdodDogMzIsXG4gIGRlc2t0b3BEcm9wRG93bk1lbnVGb250U2l6ZTogMTUsXG4gIGRlc2t0b3BEcmF3ZXJNZW51SXRlbUhlaWdodDogNDgsXG4gIGRlc2t0b3BTdWJoZWFkZXJIZWlnaHQ6IDQ4LFxuICBkZXNrdG9wVG9vbGJhckhlaWdodDogNTZcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NvbG9ycyA9IHJlcXVpcmUoJy4uL2NvbG9ycycpO1xuXG52YXIgX2NvbG9yTWFuaXB1bGF0b3IgPSByZXF1aXJlKCcuLi8uLi91dGlscy9jb2xvck1hbmlwdWxhdG9yJyk7XG5cbnZhciBfc3BhY2luZyA9IHJlcXVpcmUoJy4uL3NwYWNpbmcnKTtcblxudmFyIF9zcGFjaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NwYWNpbmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqICBMaWdodCBUaGVtZSBpcyB0aGUgZGVmYXVsdCB0aGVtZSB1c2VkIGluIG1hdGVyaWFsLXVpLiBJdCBpcyBndWFyYW50ZWVkIHRvXG4gKiAgaGF2ZSBhbGwgdGhlbWUgdmFyaWFibGVzIG5lZWRlZCBmb3IgZXZlcnkgY29tcG9uZW50LiBWYXJpYWJsZXMgbm90IGRlZmluZWRcbiAqICBpbiBhIGN1c3RvbSB0aGVtZSB3aWxsIGRlZmF1bHQgdG8gdGhlc2UgdmFsdWVzLlxuICovXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIHNwYWNpbmc6IF9zcGFjaW5nMi5kZWZhdWx0LFxuICBmb250RmFtaWx5OiAnUm9ib3RvLCBzYW5zLXNlcmlmJyxcbiAgYm9yZGVyUmFkaXVzOiAyLFxuICBwYWxldHRlOiB7XG4gICAgcHJpbWFyeTFDb2xvcjogX2NvbG9ycy5jeWFuNTAwLFxuICAgIHByaW1hcnkyQ29sb3I6IF9jb2xvcnMuY3lhbjcwMCxcbiAgICBwcmltYXJ5M0NvbG9yOiBfY29sb3JzLmdyZXk0MDAsXG4gICAgYWNjZW50MUNvbG9yOiBfY29sb3JzLnBpbmtBMjAwLFxuICAgIGFjY2VudDJDb2xvcjogX2NvbG9ycy5ncmV5MTAwLFxuICAgIGFjY2VudDNDb2xvcjogX2NvbG9ycy5ncmV5NTAwLFxuICAgIHRleHRDb2xvcjogX2NvbG9ycy5kYXJrQmxhY2ssXG4gICAgc2Vjb25kYXJ5VGV4dENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkoX2NvbG9ycy5kYXJrQmxhY2ssIDAuNTQpLFxuICAgIGFsdGVybmF0ZVRleHRDb2xvcjogX2NvbG9ycy53aGl0ZSxcbiAgICBjYW52YXNDb2xvcjogX2NvbG9ycy53aGl0ZSxcbiAgICBib3JkZXJDb2xvcjogX2NvbG9ycy5ncmV5MzAwLFxuICAgIGRpc2FibGVkQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShfY29sb3JzLmRhcmtCbGFjaywgMC4zKSxcbiAgICBwaWNrZXJIZWFkZXJDb2xvcjogX2NvbG9ycy5jeWFuNTAwLFxuICAgIGNsb2NrQ2lyY2xlQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShfY29sb3JzLmRhcmtCbGFjaywgMC4wNyksXG4gICAgc2hhZG93Q29sb3I6IF9jb2xvcnMuZnVsbEJsYWNrXG4gIH1cbn07IC8qKlxuICAgICogTkI6IElmIHlvdSB1cGRhdGUgdGhpcyBmaWxlLCBwbGVhc2UgYWxzbyB1cGRhdGUgYGRvY3Mvc3JjL2FwcC9jdXN0b21pemF0aW9uL1RoZW1lcy5qc2BcbiAgICAqLyIsIi8qKlxuICogTG9kYXNoIChDdXN0b20gQnVpbGQpIDxodHRwczovL2xvZGFzaC5jb20vPlxuICogQnVpbGQ6IGBsb2Rhc2ggbW9kdWxhcml6ZSBleHBvcnRzPVwibnBtXCIgLW8gLi9gXG4gKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzIDxodHRwczovL2pzLmZvdW5kYXRpb24vPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovXG5cbi8qKiBVc2VkIGFzIHRoZSBzaXplIHRvIGVuYWJsZSBsYXJnZSBhcnJheSBvcHRpbWl6YXRpb25zLiAqL1xudmFyIExBUkdFX0FSUkFZX1NJWkUgPSAyMDA7XG5cbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGhvdCBmdW5jdGlvbnMgYnkgbnVtYmVyIG9mIGNhbGxzIHdpdGhpbiBhIHNwYW4gb2YgbWlsbGlzZWNvbmRzLiAqL1xudmFyIEhPVF9DT1VOVCA9IDgwMCxcbiAgICBIT1RfU1BBTiA9IDE2O1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYXN5bmNUYWcgPSAnW29iamVjdCBBc3luY0Z1bmN0aW9uXScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBnZW5UYWcgPSAnW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIG51bGxUYWcgPSAnW29iamVjdCBOdWxsXScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XScsXG4gICAgcHJveHlUYWcgPSAnW29iamVjdCBQcm94eV0nLFxuICAgIHJlZ2V4cFRhZyA9ICdbb2JqZWN0IFJlZ0V4cF0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nLFxuICAgIHVuZGVmaW5lZFRhZyA9ICdbb2JqZWN0IFVuZGVmaW5lZF0nLFxuICAgIHdlYWtNYXBUYWcgPSAnW29iamVjdCBXZWFrTWFwXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nLFxuICAgIGZsb2F0MzJUYWcgPSAnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcbiAgICBmbG9hdDY0VGFnID0gJ1tvYmplY3QgRmxvYXQ2NEFycmF5XScsXG4gICAgaW50OFRhZyA9ICdbb2JqZWN0IEludDhBcnJheV0nLFxuICAgIGludDE2VGFnID0gJ1tvYmplY3QgSW50MTZBcnJheV0nLFxuICAgIGludDMyVGFnID0gJ1tvYmplY3QgSW50MzJBcnJheV0nLFxuICAgIHVpbnQ4VGFnID0gJ1tvYmplY3QgVWludDhBcnJheV0nLFxuICAgIHVpbnQ4Q2xhbXBlZFRhZyA9ICdbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XScsXG4gICAgdWludDE2VGFnID0gJ1tvYmplY3QgVWludDE2QXJyYXldJyxcbiAgICB1aW50MzJUYWcgPSAnW29iamVjdCBVaW50MzJBcnJheV0nO1xuXG4vKipcbiAqIFVzZWQgdG8gbWF0Y2ggYFJlZ0V4cGBcbiAqIFtzeW50YXggY2hhcmFjdGVyc10oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcGF0dGVybnMpLlxuICovXG52YXIgcmVSZWdFeHBDaGFyID0gL1tcXFxcXiQuKis/KClbXFxde318XS9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaG9zdCBjb25zdHJ1Y3RvcnMgKFNhZmFyaSkuICovXG52YXIgcmVJc0hvc3RDdG9yID0gL15cXFtvYmplY3QgLis/Q29uc3RydWN0b3JcXF0kLztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqIFVzZWQgdG8gaWRlbnRpZnkgYHRvU3RyaW5nVGFnYCB2YWx1ZXMgb2YgdHlwZWQgYXJyYXlzLiAqL1xudmFyIHR5cGVkQXJyYXlUYWdzID0ge307XG50eXBlZEFycmF5VGFnc1tmbG9hdDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Zsb2F0NjRUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDhUYWddID0gdHlwZWRBcnJheVRhZ3NbaW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQ4VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50OENsYW1wZWRUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDE2VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50MzJUYWddID0gdHJ1ZTtcbnR5cGVkQXJyYXlUYWdzW2FyZ3NUYWddID0gdHlwZWRBcnJheVRhZ3NbYXJyYXlUYWddID1cbnR5cGVkQXJyYXlUYWdzW2FycmF5QnVmZmVyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Jvb2xUYWddID1cbnR5cGVkQXJyYXlUYWdzW2RhdGFWaWV3VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2RhdGVUYWddID1cbnR5cGVkQXJyYXlUYWdzW2Vycm9yVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Z1bmNUYWddID1cbnR5cGVkQXJyYXlUYWdzW21hcFRhZ10gPSB0eXBlZEFycmF5VGFnc1tudW1iZXJUYWddID1cbnR5cGVkQXJyYXlUYWdzW29iamVjdFRhZ10gPSB0eXBlZEFycmF5VGFnc1tyZWdleHBUYWddID1cbnR5cGVkQXJyYXlUYWdzW3NldFRhZ10gPSB0eXBlZEFycmF5VGFnc1tzdHJpbmdUYWddID1cbnR5cGVkQXJyYXlUYWdzW3dlYWtNYXBUYWddID0gZmFsc2U7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHByb2Nlc3NgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzO1xuXG4vKiogVXNlZCB0byBhY2Nlc3MgZmFzdGVyIE5vZGUuanMgaGVscGVycy4gKi9cbnZhciBub2RlVXRpbCA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZnJlZVByb2Nlc3MgJiYgZnJlZVByb2Nlc3MuYmluZGluZyAmJiBmcmVlUHJvY2Vzcy5iaW5kaW5nKCd1dGlsJyk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59KCkpO1xuXG4vKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL1xudmFyIG5vZGVJc1R5cGVkQXJyYXkgPSBub2RlVXRpbCAmJiBub2RlVXRpbC5pc1R5cGVkQXJyYXk7XG5cbi8qKlxuICogQSBmYXN0ZXIgYWx0ZXJuYXRpdmUgdG8gYEZ1bmN0aW9uI2FwcGx5YCwgdGhpcyBmdW5jdGlvbiBpbnZva2VzIGBmdW5jYFxuICogd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgYHRoaXNBcmdgIGFuZCB0aGUgYXJndW1lbnRzIG9mIGBhcmdzYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaW52b2tlLlxuICogQHBhcmFtIHsqfSB0aGlzQXJnIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgZnVuY2AuXG4gKiBAcGFyYW0ge0FycmF5fSBhcmdzIFRoZSBhcmd1bWVudHMgdG8gaW52b2tlIGBmdW5jYCB3aXRoLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc3VsdCBvZiBgZnVuY2AuXG4gKi9cbmZ1bmN0aW9uIGFwcGx5KGZ1bmMsIHRoaXNBcmcsIGFyZ3MpIHtcbiAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnKTtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jLmNhbGwodGhpc0FyZywgYXJnc1swXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuYy5jYWxsKHRoaXNBcmcsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgfVxuICByZXR1cm4gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50aW1lc2Agd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzXG4gKiBvciBtYXggYXJyYXkgbGVuZ3RoIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtudW1iZXJ9IG4gVGhlIG51bWJlciBvZiB0aW1lcyB0byBpbnZva2UgYGl0ZXJhdGVlYC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHJlc3VsdHMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VUaW1lcyhuLCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IEFycmF5KG4pO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbikge1xuICAgIHJlc3VsdFtpbmRleF0gPSBpdGVyYXRlZShpbmRleCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy51bmFyeWAgd2l0aG91dCBzdXBwb3J0IGZvciBzdG9yaW5nIG1ldGFkYXRhLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjYXAgYXJndW1lbnRzIGZvci5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGNhcHBlZCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVVuYXJ5KGZ1bmMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGZ1bmModmFsdWUpO1xuICB9O1xufVxuXG4vKipcbiAqIEdldHMgdGhlIHZhbHVlIGF0IGBrZXlgIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHByb3BlcnR5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBnZXRWYWx1ZShvYmplY3QsIGtleSkge1xuICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBvYmplY3Rba2V5XTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgdW5hcnkgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCB3aXRoIGl0cyBhcmd1bWVudCB0cmFuc2Zvcm1lZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gd3JhcC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgYXJndW1lbnQgdHJhbnNmb3JtLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG92ZXJBcmcoZnVuYywgdHJhbnNmb3JtKSB7XG4gIHJldHVybiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gZnVuYyh0cmFuc2Zvcm0oYXJnKSk7XG4gIH07XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAsIHVubGVzcyBga2V5YCBpcyBcIl9fcHJvdG9fX1wiLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBwcm9wZXJ0eSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gc2FmZUdldChvYmplY3QsIGtleSkge1xuICByZXR1cm4ga2V5ID09ICdfX3Byb3RvX18nXG4gICAgPyB1bmRlZmluZWRcbiAgICA6IG9iamVjdFtrZXldO1xufVxuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgYXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZSxcbiAgICBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgb3ZlcnJlYWNoaW5nIGNvcmUtanMgc2hpbXMuICovXG52YXIgY29yZUpzRGF0YSA9IHJvb3RbJ19fY29yZS1qc19zaGFyZWRfXyddO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBkZXRlY3QgbWV0aG9kcyBtYXNxdWVyYWRpbmcgYXMgbmF0aXZlLiAqL1xudmFyIG1hc2tTcmNLZXkgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciB1aWQgPSAvW14uXSskLy5leGVjKGNvcmVKc0RhdGEgJiYgY29yZUpzRGF0YS5rZXlzICYmIGNvcmVKc0RhdGEua2V5cy5JRV9QUk9UTyB8fCAnJyk7XG4gIHJldHVybiB1aWQgPyAoJ1N5bWJvbChzcmMpXzEuJyArIHVpZCkgOiAnJztcbn0oKSk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBpbmZlciB0aGUgYE9iamVjdGAgY29uc3RydWN0b3IuICovXG52YXIgb2JqZWN0Q3RvclN0cmluZyA9IGZ1bmNUb1N0cmluZy5jYWxsKE9iamVjdCk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBpZiBhIG1ldGhvZCBpcyBuYXRpdmUuICovXG52YXIgcmVJc05hdGl2ZSA9IFJlZ0V4cCgnXicgK1xuICBmdW5jVG9TdHJpbmcuY2FsbChoYXNPd25Qcm9wZXJ0eSkucmVwbGFjZShyZVJlZ0V4cENoYXIsICdcXFxcJCYnKVxuICAucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXFxcXCgpfCBmb3IgLis/KD89XFxcXFxcXSkvZywgJyQxLio/JykgKyAnJCdcbik7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIEJ1ZmZlciA9IG1vZHVsZUV4cG9ydHMgPyByb290LkJ1ZmZlciA6IHVuZGVmaW5lZCxcbiAgICBTeW1ib2wgPSByb290LlN5bWJvbCxcbiAgICBVaW50OEFycmF5ID0gcm9vdC5VaW50OEFycmF5LFxuICAgIGFsbG9jVW5zYWZlID0gQnVmZmVyID8gQnVmZmVyLmFsbG9jVW5zYWZlIDogdW5kZWZpbmVkLFxuICAgIGdldFByb3RvdHlwZSA9IG92ZXJBcmcoT2JqZWN0LmdldFByb3RvdHlwZU9mLCBPYmplY3QpLFxuICAgIG9iamVjdENyZWF0ZSA9IE9iamVjdC5jcmVhdGUsXG4gICAgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZSxcbiAgICBzcGxpY2UgPSBhcnJheVByb3RvLnNwbGljZSxcbiAgICBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxudmFyIGRlZmluZVByb3BlcnR5ID0gKGZ1bmN0aW9uKCkge1xuICB0cnkge1xuICAgIHZhciBmdW5jID0gZ2V0TmF0aXZlKE9iamVjdCwgJ2RlZmluZVByb3BlcnR5Jyk7XG4gICAgZnVuYyh7fSwgJycsIHt9KTtcbiAgICByZXR1cm4gZnVuYztcbiAgfSBjYXRjaCAoZSkge31cbn0oKSk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVJc0J1ZmZlciA9IEJ1ZmZlciA/IEJ1ZmZlci5pc0J1ZmZlciA6IHVuZGVmaW5lZCxcbiAgICBuYXRpdmVNYXggPSBNYXRoLm1heCxcbiAgICBuYXRpdmVOb3cgPSBEYXRlLm5vdztcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIE1hcCA9IGdldE5hdGl2ZShyb290LCAnTWFwJyksXG4gICAgbmF0aXZlQ3JlYXRlID0gZ2V0TmF0aXZlKE9iamVjdCwgJ2NyZWF0ZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmNyZWF0ZWAgd2l0aG91dCBzdXBwb3J0IGZvciBhc3NpZ25pbmdcbiAqIHByb3BlcnRpZXMgdG8gdGhlIGNyZWF0ZWQgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvdG8gVGhlIG9iamVjdCB0byBpbmhlcml0IGZyb20uXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LlxuICovXG52YXIgYmFzZUNyZWF0ZSA9IChmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gb2JqZWN0KCkge31cbiAgcmV0dXJuIGZ1bmN0aW9uKHByb3RvKSB7XG4gICAgaWYgKCFpc09iamVjdChwcm90bykpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgaWYgKG9iamVjdENyZWF0ZSkge1xuICAgICAgcmV0dXJuIG9iamVjdENyZWF0ZShwcm90byk7XG4gICAgfVxuICAgIG9iamVjdC5wcm90b3R5cGUgPSBwcm90bztcbiAgICB2YXIgcmVzdWx0ID0gbmV3IG9iamVjdDtcbiAgICBvYmplY3QucHJvdG90eXBlID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59KCkpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoYXNoIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gSGFzaChlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKi9cbmZ1bmN0aW9uIGhhc2hDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5hdGl2ZUNyZWF0ZSA/IG5hdGl2ZUNyZWF0ZShudWxsKSA6IHt9O1xuICB0aGlzLnNpemUgPSAwO1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBoYXNoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge09iamVjdH0gaGFzaCBUaGUgaGFzaCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaERlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IHRoaXMuaGFzKGtleSkgJiYgZGVsZXRlIHRoaXMuX19kYXRhX19ba2V5XTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGhhc2ggdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gaGFzaEdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAobmF0aXZlQ3JlYXRlKSB7XG4gICAgdmFyIHJlc3VsdCA9IGRhdGFba2V5XTtcbiAgICByZXR1cm4gcmVzdWx0ID09PSBIQVNIX1VOREVGSU5FRCA/IHVuZGVmaW5lZCA6IHJlc3VsdDtcbiAgfVxuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpID8gZGF0YVtrZXldIDogdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBhIGhhc2ggdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc2hIYXMoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgcmV0dXJuIG5hdGl2ZUNyZWF0ZSA/IChkYXRhW2tleV0gIT09IHVuZGVmaW5lZCkgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHRoaXMuc2l6ZSArPSB0aGlzLmhhcyhrZXkpID8gMCA6IDE7XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBbXTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlRGVsZXRlKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGxhc3RJbmRleCA9IGRhdGEubGVuZ3RoIC0gMTtcbiAgaWYgKGluZGV4ID09IGxhc3RJbmRleCkge1xuICAgIGRhdGEucG9wKCk7XG4gIH0gZWxzZSB7XG4gICAgc3BsaWNlLmNhbGwoZGF0YSwgaW5kZXgsIDEpO1xuICB9XG4gIC0tdGhpcy5zaXplO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIHJldHVybiBpbmRleCA8IDAgPyB1bmRlZmluZWQgOiBkYXRhW2luZGV4XVsxXTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGFzc29jSW5kZXhPZih0aGlzLl9fZGF0YV9fLCBrZXkpID4gLTE7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgbGlzdCBjYWNoZSBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbGlzdCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgKyt0aGlzLnNpemU7XG4gICAgZGF0YS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0YVtpbmRleF1bMV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYExpc3RDYWNoZWAuXG5MaXN0Q2FjaGUucHJvdG90eXBlLmNsZWFyID0gbGlzdENhY2hlQ2xlYXI7XG5MaXN0Q2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IGxpc3RDYWNoZURlbGV0ZTtcbkxpc3RDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbGlzdENhY2hlR2V0O1xuTGlzdENhY2hlLnByb3RvdHlwZS5oYXMgPSBsaXN0Q2FjaGVIYXM7XG5MaXN0Q2FjaGUucHJvdG90eXBlLnNldCA9IGxpc3RDYWNoZVNldDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbWFwIGNhY2hlIG9iamVjdCB0byBzdG9yZSBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIE1hcENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVDbGVhcigpIHtcbiAgdGhpcy5zaXplID0gMDtcbiAgdGhpcy5fX2RhdGFfXyA9IHtcbiAgICAnaGFzaCc6IG5ldyBIYXNoLFxuICAgICdtYXAnOiBuZXcgKE1hcCB8fCBMaXN0Q2FjaGUpLFxuICAgICdzdHJpbmcnOiBuZXcgSGFzaFxuICB9O1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciByZXN1bHQgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSlbJ2RlbGV0ZSddKGtleSk7XG4gIHRoaXMuc2l6ZSAtPSByZXN1bHQgPyAxIDogMDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBtYXAgdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlR2V0KGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLmdldChrZXkpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBhIG1hcCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLmhhcyhrZXkpO1xufVxuXG4vKipcbiAqIFNldHMgdGhlIG1hcCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBtYXAgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSksXG4gICAgICBzaXplID0gZGF0YS5zaXplO1xuXG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgKz0gZGF0YS5zaXplID09IHNpemUgPyAwIDogMTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBNYXBDYWNoZWAuXG5NYXBDYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBtYXBDYWNoZUNsZWFyO1xuTWFwQ2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IG1hcENhY2hlRGVsZXRlO1xuTWFwQ2FjaGUucHJvdG90eXBlLmdldCA9IG1hcENhY2hlR2V0O1xuTWFwQ2FjaGUucHJvdG90eXBlLmhhcyA9IG1hcENhY2hlSGFzO1xuTWFwQ2FjaGUucHJvdG90eXBlLnNldCA9IG1hcENhY2hlU2V0O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdGFjayBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTdGFjayhlbnRyaWVzKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBMaXN0Q2FjaGUoZW50cmllcyk7XG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBTdGFja1xuICovXG5mdW5jdGlvbiBzdGFja0NsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmV3IExpc3RDYWNoZTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIHJlc3VsdCA9IGRhdGFbJ2RlbGV0ZSddKGtleSk7XG5cbiAgdGhpcy5zaXplID0gZGF0YS5zaXplO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEdldHMgdGhlIHN0YWNrIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBzdGFja0dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgc3RhY2sgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0hhcyhrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgc3RhY2sgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgc3RhY2sgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIExpc3RDYWNoZSkge1xuICAgIHZhciBwYWlycyA9IGRhdGEuX19kYXRhX187XG4gICAgaWYgKCFNYXAgfHwgKHBhaXJzLmxlbmd0aCA8IExBUkdFX0FSUkFZX1NJWkUgLSAxKSkge1xuICAgICAgcGFpcnMucHVzaChba2V5LCB2YWx1ZV0pO1xuICAgICAgdGhpcy5zaXplID0gKytkYXRhLnNpemU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGUocGFpcnMpO1xuICB9XG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG4gIHJldHVybiB0aGlzO1xufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgU3RhY2tgLlxuU3RhY2sucHJvdG90eXBlLmNsZWFyID0gc3RhY2tDbGVhcjtcblN0YWNrLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBzdGFja0RlbGV0ZTtcblN0YWNrLnByb3RvdHlwZS5nZXQgPSBzdGFja0dldDtcblN0YWNrLnByb3RvdHlwZS5oYXMgPSBzdGFja0hhcztcblN0YWNrLnByb3RvdHlwZS5zZXQgPSBzdGFja1NldDtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpLFxuICAgICAgaXNBcmcgPSAhaXNBcnIgJiYgaXNBcmd1bWVudHModmFsdWUpLFxuICAgICAgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksXG4gICAgICBpc1R5cGUgPSAhaXNBcnIgJiYgIWlzQXJnICYmICFpc0J1ZmYgJiYgaXNUeXBlZEFycmF5KHZhbHVlKSxcbiAgICAgIHNraXBJbmRleGVzID0gaXNBcnIgfHwgaXNBcmcgfHwgaXNCdWZmIHx8IGlzVHlwZSxcbiAgICAgIHJlc3VsdCA9IHNraXBJbmRleGVzID8gYmFzZVRpbWVzKHZhbHVlLmxlbmd0aCwgU3RyaW5nKSA6IFtdLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChcbiAgICAgICAgICAgLy8gU2FmYXJpIDkgaGFzIGVudW1lcmFibGUgYGFyZ3VtZW50cy5sZW5ndGhgIGluIHN0cmljdCBtb2RlLlxuICAgICAgICAgICBrZXkgPT0gJ2xlbmd0aCcgfHxcbiAgICAgICAgICAgLy8gTm9kZS5qcyAwLjEwIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIGJ1ZmZlcnMuXG4gICAgICAgICAgIChpc0J1ZmYgJiYgKGtleSA9PSAnb2Zmc2V0JyB8fCBrZXkgPT0gJ3BhcmVudCcpKSB8fFxuICAgICAgICAgICAvLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuXG4gICAgICAgICAgIChpc1R5cGUgJiYgKGtleSA9PSAnYnVmZmVyJyB8fCBrZXkgPT0gJ2J5dGVMZW5ndGgnIHx8IGtleSA9PSAnYnl0ZU9mZnNldCcpKSB8fFxuICAgICAgICAgICAvLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuXG4gICAgICAgICAgIGlzSW5kZXgoa2V5LCBsZW5ndGgpXG4gICAgICAgICkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgbGlrZSBgYXNzaWduVmFsdWVgIGV4Y2VwdCB0aGF0IGl0IGRvZXNuJ3QgYXNzaWduXG4gKiBgdW5kZWZpbmVkYCB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFzc2lnbi5cbiAqL1xuZnVuY3Rpb24gYXNzaWduTWVyZ2VWYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgaWYgKCh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmICFlcShvYmplY3Rba2V5XSwgdmFsdWUpKSB8fFxuICAgICAgKHZhbHVlID09PSB1bmRlZmluZWQgJiYgIShrZXkgaW4gb2JqZWN0KSkpIHtcbiAgICBiYXNlQXNzaWduVmFsdWUob2JqZWN0LCBrZXksIHZhbHVlKTtcbiAgfVxufVxuXG4vKipcbiAqIEFzc2lnbnMgYHZhbHVlYCB0byBga2V5YCBvZiBgb2JqZWN0YCBpZiB0aGUgZXhpc3RpbmcgdmFsdWUgaXMgbm90IGVxdWl2YWxlbnRcbiAqIHVzaW5nIFtgU2FtZVZhbHVlWmVyb2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXNhbWV2YWx1ZXplcm8pXG4gKiBmb3IgZXF1YWxpdHkgY29tcGFyaXNvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFzc2lnbi5cbiAqL1xuZnVuY3Rpb24gYXNzaWduVmFsdWUob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHZhciBvYmpWYWx1ZSA9IG9iamVjdFtrZXldO1xuICBpZiAoIShoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSAmJiBlcShvYmpWYWx1ZSwgdmFsdWUpKSB8fFxuICAgICAgKHZhbHVlID09PSB1bmRlZmluZWQgJiYgIShrZXkgaW4gb2JqZWN0KSkpIHtcbiAgICBiYXNlQXNzaWduVmFsdWUob2JqZWN0LCBrZXksIHZhbHVlKTtcbiAgfVxufVxuXG4vKipcbiAqIEdldHMgdGhlIGluZGV4IGF0IHdoaWNoIHRoZSBga2V5YCBpcyBmb3VuZCBpbiBgYXJyYXlgIG9mIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0geyp9IGtleSBUaGUga2V5IHRvIHNlYXJjaCBmb3IuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxuICovXG5mdW5jdGlvbiBhc3NvY0luZGV4T2YoYXJyYXksIGtleSkge1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICBpZiAoZXEoYXJyYXlbbGVuZ3RoXVswXSwga2V5KSkge1xuICAgICAgcmV0dXJuIGxlbmd0aDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBhc3NpZ25WYWx1ZWAgYW5kIGBhc3NpZ25NZXJnZVZhbHVlYCB3aXRob3V0XG4gKiB2YWx1ZSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFzc2lnbi5cbiAqL1xuZnVuY3Rpb24gYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5ID09ICdfX3Byb3RvX18nICYmIGRlZmluZVByb3BlcnR5KSB7XG4gICAgZGVmaW5lUHJvcGVydHkob2JqZWN0LCBrZXksIHtcbiAgICAgICdjb25maWd1cmFibGUnOiB0cnVlLFxuICAgICAgJ2VudW1lcmFibGUnOiB0cnVlLFxuICAgICAgJ3ZhbHVlJzogdmFsdWUsXG4gICAgICAnd3JpdGFibGUnOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgfVxufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBiYXNlRm9yT3duYCB3aGljaCBpdGVyYXRlcyBvdmVyIGBvYmplY3RgXG4gKiBwcm9wZXJ0aWVzIHJldHVybmVkIGJ5IGBrZXlzRnVuY2AgYW5kIGludm9rZXMgYGl0ZXJhdGVlYCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqIEl0ZXJhdGVlIGZ1bmN0aW9ucyBtYXkgZXhpdCBpdGVyYXRpb24gZWFybHkgYnkgZXhwbGljaXRseSByZXR1cm5pbmcgYGZhbHNlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xudmFyIGJhc2VGb3IgPSBjcmVhdGVCYXNlRm9yKCk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldFRhZ2Agd2l0aG91dCBmYWxsYmFja3MgZm9yIGJ1Z2d5IGVudmlyb25tZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0VGFnKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWRUYWcgOiBudWxsVGFnO1xuICB9XG4gIHJldHVybiAoc3ltVG9TdHJpbmdUYWcgJiYgc3ltVG9TdHJpbmdUYWcgaW4gT2JqZWN0KHZhbHVlKSlcbiAgICA/IGdldFJhd1RhZyh2YWx1ZSlcbiAgICA6IG9iamVjdFRvU3RyaW5nKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0FyZ3VtZW50c2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICovXG5mdW5jdGlvbiBiYXNlSXNBcmd1bWVudHModmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gYXJnc1RhZztcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc05hdGl2ZWAgd2l0aG91dCBiYWQgc2hpbSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBuYXRpdmUgZnVuY3Rpb24sXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkgfHwgaXNNYXNrZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwYXR0ZXJuID0gaXNGdW5jdGlvbih2YWx1ZSkgPyByZUlzTmF0aXZlIDogcmVJc0hvc3RDdG9yO1xuICByZXR1cm4gcGF0dGVybi50ZXN0KHRvU291cmNlKHZhbHVlKSk7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNUeXBlZEFycmF5YCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHR5cGVkIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc1R5cGVkQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiZcbiAgICBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICEhdHlwZWRBcnJheVRhZ3NbYmFzZUdldFRhZyh2YWx1ZSldO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmtleXNJbmAgd2hpY2ggZG9lc24ndCB0cmVhdCBzcGFyc2UgYXJyYXlzIGFzIGRlbnNlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICovXG5mdW5jdGlvbiBiYXNlS2V5c0luKG9iamVjdCkge1xuICBpZiAoIWlzT2JqZWN0KG9iamVjdCkpIHtcbiAgICByZXR1cm4gbmF0aXZlS2V5c0luKG9iamVjdCk7XG4gIH1cbiAgdmFyIGlzUHJvdG8gPSBpc1Byb3RvdHlwZShvYmplY3QpLFxuICAgICAgcmVzdWx0ID0gW107XG5cbiAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgIGlmICghKGtleSA9PSAnY29uc3RydWN0b3InICYmIChpc1Byb3RvIHx8ICFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1lcmdlYCB3aXRob3V0IHN1cHBvcnQgZm9yIG11bHRpcGxlIHNvdXJjZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIGRlc3RpbmF0aW9uIG9iamVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIHNvdXJjZSBvYmplY3QuXG4gKiBAcGFyYW0ge251bWJlcn0gc3JjSW5kZXggVGhlIGluZGV4IG9mIGBzb3VyY2VgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgbWVyZ2VkIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgc291cmNlIHZhbHVlcyBhbmQgdGhlaXIgbWVyZ2VkXG4gKiAgY291bnRlcnBhcnRzLlxuICovXG5mdW5jdGlvbiBiYXNlTWVyZ2Uob2JqZWN0LCBzb3VyY2UsIHNyY0luZGV4LCBjdXN0b21pemVyLCBzdGFjaykge1xuICBpZiAob2JqZWN0ID09PSBzb3VyY2UpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgYmFzZUZvcihzb3VyY2UsIGZ1bmN0aW9uKHNyY1ZhbHVlLCBrZXkpIHtcbiAgICBpZiAoaXNPYmplY3Qoc3JjVmFsdWUpKSB7XG4gICAgICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICAgICAgYmFzZU1lcmdlRGVlcChvYmplY3QsIHNvdXJjZSwga2V5LCBzcmNJbmRleCwgYmFzZU1lcmdlLCBjdXN0b21pemVyLCBzdGFjayk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdmFyIG5ld1ZhbHVlID0gY3VzdG9taXplclxuICAgICAgICA/IGN1c3RvbWl6ZXIoc2FmZUdldChvYmplY3QsIGtleSksIHNyY1ZhbHVlLCAoa2V5ICsgJycpLCBvYmplY3QsIHNvdXJjZSwgc3RhY2spXG4gICAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgICBpZiAobmV3VmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBuZXdWYWx1ZSA9IHNyY1ZhbHVlO1xuICAgICAgfVxuICAgICAgYXNzaWduTWVyZ2VWYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpO1xuICAgIH1cbiAgfSwga2V5c0luKTtcbn1cblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VNZXJnZWAgZm9yIGFycmF5cyBhbmQgb2JqZWN0cyB3aGljaCBwZXJmb3Jtc1xuICogZGVlcCBtZXJnZXMgYW5kIHRyYWNrcyB0cmF2ZXJzZWQgb2JqZWN0cyBlbmFibGluZyBvYmplY3RzIHdpdGggY2lyY3VsYXJcbiAqIHJlZmVyZW5jZXMgdG8gYmUgbWVyZ2VkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBtZXJnZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBzcmNJbmRleCBUaGUgaW5kZXggb2YgYHNvdXJjZWAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBtZXJnZUZ1bmMgVGhlIGZ1bmN0aW9uIHRvIG1lcmdlIHZhbHVlcy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGFzc2lnbmVkIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgc291cmNlIHZhbHVlcyBhbmQgdGhlaXIgbWVyZ2VkXG4gKiAgY291bnRlcnBhcnRzLlxuICovXG5mdW5jdGlvbiBiYXNlTWVyZ2VEZWVwKG9iamVjdCwgc291cmNlLCBrZXksIHNyY0luZGV4LCBtZXJnZUZ1bmMsIGN1c3RvbWl6ZXIsIHN0YWNrKSB7XG4gIHZhciBvYmpWYWx1ZSA9IHNhZmVHZXQob2JqZWN0LCBrZXkpLFxuICAgICAgc3JjVmFsdWUgPSBzYWZlR2V0KHNvdXJjZSwga2V5KSxcbiAgICAgIHN0YWNrZWQgPSBzdGFjay5nZXQoc3JjVmFsdWUpO1xuXG4gIGlmIChzdGFja2VkKSB7XG4gICAgYXNzaWduTWVyZ2VWYWx1ZShvYmplY3QsIGtleSwgc3RhY2tlZCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBuZXdWYWx1ZSA9IGN1c3RvbWl6ZXJcbiAgICA/IGN1c3RvbWl6ZXIob2JqVmFsdWUsIHNyY1ZhbHVlLCAoa2V5ICsgJycpLCBvYmplY3QsIHNvdXJjZSwgc3RhY2spXG4gICAgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIGlzQ29tbW9uID0gbmV3VmFsdWUgPT09IHVuZGVmaW5lZDtcblxuICBpZiAoaXNDb21tb24pIHtcbiAgICB2YXIgaXNBcnIgPSBpc0FycmF5KHNyY1ZhbHVlKSxcbiAgICAgICAgaXNCdWZmID0gIWlzQXJyICYmIGlzQnVmZmVyKHNyY1ZhbHVlKSxcbiAgICAgICAgaXNUeXBlZCA9ICFpc0FyciAmJiAhaXNCdWZmICYmIGlzVHlwZWRBcnJheShzcmNWYWx1ZSk7XG5cbiAgICBuZXdWYWx1ZSA9IHNyY1ZhbHVlO1xuICAgIGlmIChpc0FyciB8fCBpc0J1ZmYgfHwgaXNUeXBlZCkge1xuICAgICAgaWYgKGlzQXJyYXkob2JqVmFsdWUpKSB7XG4gICAgICAgIG5ld1ZhbHVlID0gb2JqVmFsdWU7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChpc0FycmF5TGlrZU9iamVjdChvYmpWYWx1ZSkpIHtcbiAgICAgICAgbmV3VmFsdWUgPSBjb3B5QXJyYXkob2JqVmFsdWUpO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoaXNCdWZmKSB7XG4gICAgICAgIGlzQ29tbW9uID0gZmFsc2U7XG4gICAgICAgIG5ld1ZhbHVlID0gY2xvbmVCdWZmZXIoc3JjVmFsdWUsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoaXNUeXBlZCkge1xuICAgICAgICBpc0NvbW1vbiA9IGZhbHNlO1xuICAgICAgICBuZXdWYWx1ZSA9IGNsb25lVHlwZWRBcnJheShzcmNWYWx1ZSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgbmV3VmFsdWUgPSBbXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaXNQbGFpbk9iamVjdChzcmNWYWx1ZSkgfHwgaXNBcmd1bWVudHMoc3JjVmFsdWUpKSB7XG4gICAgICBuZXdWYWx1ZSA9IG9ialZhbHVlO1xuICAgICAgaWYgKGlzQXJndW1lbnRzKG9ialZhbHVlKSkge1xuICAgICAgICBuZXdWYWx1ZSA9IHRvUGxhaW5PYmplY3Qob2JqVmFsdWUpO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoIWlzT2JqZWN0KG9ialZhbHVlKSB8fCAoc3JjSW5kZXggJiYgaXNGdW5jdGlvbihvYmpWYWx1ZSkpKSB7XG4gICAgICAgIG5ld1ZhbHVlID0gaW5pdENsb25lT2JqZWN0KHNyY1ZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBpc0NvbW1vbiA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBpZiAoaXNDb21tb24pIHtcbiAgICAvLyBSZWN1cnNpdmVseSBtZXJnZSBvYmplY3RzIGFuZCBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICBzdGFjay5zZXQoc3JjVmFsdWUsIG5ld1ZhbHVlKTtcbiAgICBtZXJnZUZ1bmMobmV3VmFsdWUsIHNyY1ZhbHVlLCBzcmNJbmRleCwgY3VzdG9taXplciwgc3RhY2spO1xuICAgIHN0YWNrWydkZWxldGUnXShzcmNWYWx1ZSk7XG4gIH1cbiAgYXNzaWduTWVyZ2VWYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnJlc3RgIHdoaWNoIGRvZXNuJ3QgdmFsaWRhdGUgb3IgY29lcmNlIGFyZ3VtZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9ZnVuYy5sZW5ndGgtMV0gVGhlIHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSByZXN0IHBhcmFtZXRlci5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlUmVzdChmdW5jLCBzdGFydCkge1xuICByZXR1cm4gc2V0VG9TdHJpbmcob3ZlclJlc3QoZnVuYywgc3RhcnQsIGlkZW50aXR5KSwgZnVuYyArICcnKTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgc2V0VG9TdHJpbmdgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaG90IGxvb3Agc2hvcnRpbmcuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHN0cmluZyBUaGUgYHRvU3RyaW5nYCByZXN1bHQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgYGZ1bmNgLlxuICovXG52YXIgYmFzZVNldFRvU3RyaW5nID0gIWRlZmluZVByb3BlcnR5ID8gaWRlbnRpdHkgOiBmdW5jdGlvbihmdW5jLCBzdHJpbmcpIHtcbiAgcmV0dXJuIGRlZmluZVByb3BlcnR5KGZ1bmMsICd0b1N0cmluZycsIHtcbiAgICAnY29uZmlndXJhYmxlJzogdHJ1ZSxcbiAgICAnZW51bWVyYWJsZSc6IGZhbHNlLFxuICAgICd2YWx1ZSc6IGNvbnN0YW50KHN0cmluZyksXG4gICAgJ3dyaXRhYmxlJzogdHJ1ZVxuICB9KTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mICBgYnVmZmVyYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZmZlciBUaGUgYnVmZmVyIHRvIGNsb25lLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS5cbiAqIEByZXR1cm5zIHtCdWZmZXJ9IFJldHVybnMgdGhlIGNsb25lZCBidWZmZXIuXG4gKi9cbmZ1bmN0aW9uIGNsb25lQnVmZmVyKGJ1ZmZlciwgaXNEZWVwKSB7XG4gIGlmIChpc0RlZXApIHtcbiAgICByZXR1cm4gYnVmZmVyLnNsaWNlKCk7XG4gIH1cbiAgdmFyIGxlbmd0aCA9IGJ1ZmZlci5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBhbGxvY1Vuc2FmZSA/IGFsbG9jVW5zYWZlKGxlbmd0aCkgOiBuZXcgYnVmZmVyLmNvbnN0cnVjdG9yKGxlbmd0aCk7XG5cbiAgYnVmZmVyLmNvcHkocmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgYGFycmF5QnVmZmVyYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheUJ1ZmZlcn0gYXJyYXlCdWZmZXIgVGhlIGFycmF5IGJ1ZmZlciB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtBcnJheUJ1ZmZlcn0gUmV0dXJucyB0aGUgY2xvbmVkIGFycmF5IGJ1ZmZlci5cbiAqL1xuZnVuY3Rpb24gY2xvbmVBcnJheUJ1ZmZlcihhcnJheUJ1ZmZlcikge1xuICB2YXIgcmVzdWx0ID0gbmV3IGFycmF5QnVmZmVyLmNvbnN0cnVjdG9yKGFycmF5QnVmZmVyLmJ5dGVMZW5ndGgpO1xuICBuZXcgVWludDhBcnJheShyZXN1bHQpLnNldChuZXcgVWludDhBcnJheShhcnJheUJ1ZmZlcikpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgdHlwZWRBcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSB0eXBlZEFycmF5IFRoZSB0eXBlZCBhcnJheSB0byBjbG9uZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgdHlwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh0eXBlZEFycmF5LCBpc0RlZXApIHtcbiAgdmFyIGJ1ZmZlciA9IGlzRGVlcCA/IGNsb25lQXJyYXlCdWZmZXIodHlwZWRBcnJheS5idWZmZXIpIDogdHlwZWRBcnJheS5idWZmZXI7XG4gIHJldHVybiBuZXcgdHlwZWRBcnJheS5jb25zdHJ1Y3RvcihidWZmZXIsIHR5cGVkQXJyYXkuYnl0ZU9mZnNldCwgdHlwZWRBcnJheS5sZW5ndGgpO1xufVxuXG4vKipcbiAqIENvcGllcyB0aGUgdmFsdWVzIG9mIGBzb3VyY2VgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IHNvdXJjZSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgZnJvbS5cbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheT1bXV0gVGhlIGFycmF5IHRvIGNvcHkgdmFsdWVzIHRvLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuXG4gKi9cbmZ1bmN0aW9uIGNvcHlBcnJheShzb3VyY2UsIGFycmF5KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gc291cmNlLmxlbmd0aDtcblxuICBhcnJheSB8fCAoYXJyYXkgPSBBcnJheShsZW5ndGgpKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBhcnJheVtpbmRleF0gPSBzb3VyY2VbaW5kZXhdO1xuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxuLyoqXG4gKiBDb3BpZXMgcHJvcGVydGllcyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tLlxuICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IGlkZW50aWZpZXJzIHRvIGNvcHkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdD17fV0gVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgdG8uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb3BpZWQgdmFsdWVzLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29weU9iamVjdChzb3VyY2UsIHByb3BzLCBvYmplY3QsIGN1c3RvbWl6ZXIpIHtcbiAgdmFyIGlzTmV3ID0gIW9iamVjdDtcbiAgb2JqZWN0IHx8IChvYmplY3QgPSB7fSk7XG5cbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIga2V5ID0gcHJvcHNbaW5kZXhdO1xuXG4gICAgdmFyIG5ld1ZhbHVlID0gY3VzdG9taXplclxuICAgICAgPyBjdXN0b21pemVyKG9iamVjdFtrZXldLCBzb3VyY2Vba2V5XSwga2V5LCBvYmplY3QsIHNvdXJjZSlcbiAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgaWYgKG5ld1ZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIG5ld1ZhbHVlID0gc291cmNlW2tleV07XG4gICAgfVxuICAgIGlmIChpc05ldykge1xuICAgICAgYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCBuZXdWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFzc2lnblZhbHVlKG9iamVjdCwga2V5LCBuZXdWYWx1ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIGxpa2UgYF8uYXNzaWduYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gYXNzaWduZXIgVGhlIGZ1bmN0aW9uIHRvIGFzc2lnbiB2YWx1ZXMuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhc3NpZ25lciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQXNzaWduZXIoYXNzaWduZXIpIHtcbiAgcmV0dXJuIGJhc2VSZXN0KGZ1bmN0aW9uKG9iamVjdCwgc291cmNlcykge1xuICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICBsZW5ndGggPSBzb3VyY2VzLmxlbmd0aCxcbiAgICAgICAgY3VzdG9taXplciA9IGxlbmd0aCA+IDEgPyBzb3VyY2VzW2xlbmd0aCAtIDFdIDogdW5kZWZpbmVkLFxuICAgICAgICBndWFyZCA9IGxlbmd0aCA+IDIgPyBzb3VyY2VzWzJdIDogdW5kZWZpbmVkO1xuXG4gICAgY3VzdG9taXplciA9IChhc3NpZ25lci5sZW5ndGggPiAzICYmIHR5cGVvZiBjdXN0b21pemVyID09ICdmdW5jdGlvbicpXG4gICAgICA/IChsZW5ndGgtLSwgY3VzdG9taXplcilcbiAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgaWYgKGd1YXJkICYmIGlzSXRlcmF0ZWVDYWxsKHNvdXJjZXNbMF0sIHNvdXJjZXNbMV0sIGd1YXJkKSkge1xuICAgICAgY3VzdG9taXplciA9IGxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiBjdXN0b21pemVyO1xuICAgICAgbGVuZ3RoID0gMTtcbiAgICB9XG4gICAgb2JqZWN0ID0gT2JqZWN0KG9iamVjdCk7XG4gICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIHZhciBzb3VyY2UgPSBzb3VyY2VzW2luZGV4XTtcbiAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgYXNzaWduZXIob2JqZWN0LCBzb3VyY2UsIGluZGV4LCBjdXN0b21pemVyKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGJhc2UgZnVuY3Rpb24gZm9yIG1ldGhvZHMgbGlrZSBgXy5mb3JJbmAgYW5kIGBfLmZvck93bmAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUZvcihmcm9tUmlnaHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCwgaXRlcmF0ZWUsIGtleXNGdW5jKSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIGl0ZXJhYmxlID0gT2JqZWN0KG9iamVjdCksXG4gICAgICAgIHByb3BzID0ga2V5c0Z1bmMob2JqZWN0KSxcbiAgICAgICAgbGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG4gICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICB2YXIga2V5ID0gcHJvcHNbZnJvbVJpZ2h0ID8gbGVuZ3RoIDogKytpbmRleF07XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVba2V5XSwga2V5LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xuICB9O1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGRhdGEgZm9yIGBtYXBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSByZWZlcmVuY2Uga2V5LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hcCBkYXRhLlxuICovXG5mdW5jdGlvbiBnZXRNYXBEYXRhKG1hcCwga2V5KSB7XG4gIHZhciBkYXRhID0gbWFwLl9fZGF0YV9fO1xuICByZXR1cm4gaXNLZXlhYmxlKGtleSlcbiAgICA/IGRhdGFbdHlwZW9mIGtleSA9PSAnc3RyaW5nJyA/ICdzdHJpbmcnIDogJ2hhc2gnXVxuICAgIDogZGF0YS5tYXA7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgbmF0aXZlIGZ1bmN0aW9uIGF0IGBrZXlgIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIG1ldGhvZCB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZnVuY3Rpb24gaWYgaXQncyBuYXRpdmUsIGVsc2UgYHVuZGVmaW5lZGAuXG4gKi9cbmZ1bmN0aW9uIGdldE5hdGl2ZShvYmplY3QsIGtleSkge1xuICB2YXIgdmFsdWUgPSBnZXRWYWx1ZShvYmplY3QsIGtleSk7XG4gIHJldHVybiBiYXNlSXNOYXRpdmUodmFsdWUpID8gdmFsdWUgOiB1bmRlZmluZWQ7XG59XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlR2V0VGFnYCB3aGljaCBpZ25vcmVzIGBTeW1ib2wudG9TdHJpbmdUYWdgIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSByYXcgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gZ2V0UmF3VGFnKHZhbHVlKSB7XG4gIHZhciBpc093biA9IGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIHN5bVRvU3RyaW5nVGFnKSxcbiAgICAgIHRhZyA9IHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcblxuICB0cnkge1xuICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHVuZGVmaW5lZDtcbiAgICB2YXIgdW5tYXNrZWQgPSB0cnVlO1xuICB9IGNhdGNoIChlKSB7fVxuXG4gIHZhciByZXN1bHQgPSBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgaWYgKHVubWFza2VkKSB7XG4gICAgaWYgKGlzT3duKSB7XG4gICAgICB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ10gPSB0YWc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ107XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZXMgYW4gb2JqZWN0IGNsb25lLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBpbml0aWFsaXplZCBjbG9uZS5cbiAqL1xuZnVuY3Rpb24gaW5pdENsb25lT2JqZWN0KG9iamVjdCkge1xuICByZXR1cm4gKHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNQcm90b3R5cGUob2JqZWN0KSlcbiAgICA/IGJhc2VDcmVhdGUoZ2V0UHJvdG90eXBlKG9iamVjdCkpXG4gICAgOiB7fTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBpbmRleCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcblxuICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAodHlwZSA9PSAnbnVtYmVyJyB8fFxuICAgICAgKHR5cGUgIT0gJ3N5bWJvbCcgJiYgcmVJc1VpbnQudGVzdCh2YWx1ZSkpKSAmJlxuICAgICAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBhcmd1bWVudHMgYXJlIGZyb20gYW4gaXRlcmF0ZWUgY2FsbC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgcG90ZW50aWFsIGl0ZXJhdGVlIHZhbHVlIGFyZ3VtZW50LlxuICogQHBhcmFtIHsqfSBpbmRleCBUaGUgcG90ZW50aWFsIGl0ZXJhdGVlIGluZGV4IG9yIGtleSBhcmd1bWVudC5cbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgb2JqZWN0IGFyZ3VtZW50LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBhcmd1bWVudHMgYXJlIGZyb20gYW4gaXRlcmF0ZWUgY2FsbCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzSXRlcmF0ZWVDYWxsKHZhbHVlLCBpbmRleCwgb2JqZWN0KSB7XG4gIGlmICghaXNPYmplY3Qob2JqZWN0KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdHlwZSA9IHR5cGVvZiBpbmRleDtcbiAgaWYgKHR5cGUgPT0gJ251bWJlcidcbiAgICAgICAgPyAoaXNBcnJheUxpa2Uob2JqZWN0KSAmJiBpc0luZGV4KGluZGV4LCBvYmplY3QubGVuZ3RoKSlcbiAgICAgICAgOiAodHlwZSA9PSAnc3RyaW5nJyAmJiBpbmRleCBpbiBvYmplY3QpXG4gICAgICApIHtcbiAgICByZXR1cm4gZXEob2JqZWN0W2luZGV4XSwgdmFsdWUpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSBmb3IgdXNlIGFzIHVuaXF1ZSBvYmplY3Qga2V5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzS2V5YWJsZSh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuICh0eXBlID09ICdzdHJpbmcnIHx8IHR5cGUgPT0gJ251bWJlcicgfHwgdHlwZSA9PSAnc3ltYm9sJyB8fCB0eXBlID09ICdib29sZWFuJylcbiAgICA/ICh2YWx1ZSAhPT0gJ19fcHJvdG9fXycpXG4gICAgOiAodmFsdWUgPT09IG51bGwpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgZnVuY2AgaGFzIGl0cyBzb3VyY2UgbWFza2VkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgZnVuY2AgaXMgbWFza2VkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzTWFza2VkKGZ1bmMpIHtcbiAgcmV0dXJuICEhbWFza1NyY0tleSAmJiAobWFza1NyY0tleSBpbiBmdW5jKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYSBwcm90b3R5cGUgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcHJvdG90eXBlLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzUHJvdG90eXBlKHZhbHVlKSB7XG4gIHZhciBDdG9yID0gdmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IsXG4gICAgICBwcm90byA9ICh0eXBlb2YgQ3RvciA9PSAnZnVuY3Rpb24nICYmIEN0b3IucHJvdG90eXBlKSB8fCBvYmplY3RQcm90bztcblxuICByZXR1cm4gdmFsdWUgPT09IHByb3RvO1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgbGlrZVxuICogW2BPYmplY3Qua2V5c2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5rZXlzKVxuICogZXhjZXB0IHRoYXQgaXQgaW5jbHVkZXMgaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydGllcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gbmF0aXZlS2V5c0luKG9iamVjdCkge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGlmIChvYmplY3QgIT0gbnVsbCkge1xuICAgIGZvciAodmFyIGtleSBpbiBPYmplY3Qob2JqZWN0KSkge1xuICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIHVzaW5nIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VSZXN0YCB3aGljaCB0cmFuc2Zvcm1zIHRoZSByZXN0IGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBhcHBseSBhIHJlc3QgcGFyYW1ldGVyIHRvLlxuICogQHBhcmFtIHtudW1iZXJ9IFtzdGFydD1mdW5jLmxlbmd0aC0xXSBUaGUgc3RhcnQgcG9zaXRpb24gb2YgdGhlIHJlc3QgcGFyYW1ldGVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtIFRoZSByZXN0IGFycmF5IHRyYW5zZm9ybS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBvdmVyUmVzdChmdW5jLCBzdGFydCwgdHJhbnNmb3JtKSB7XG4gIHN0YXJ0ID0gbmF0aXZlTWF4KHN0YXJ0ID09PSB1bmRlZmluZWQgPyAoZnVuYy5sZW5ndGggLSAxKSA6IHN0YXJ0LCAwKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICBpbmRleCA9IC0xLFxuICAgICAgICBsZW5ndGggPSBuYXRpdmVNYXgoYXJncy5sZW5ndGggLSBzdGFydCwgMCksXG4gICAgICAgIGFycmF5ID0gQXJyYXkobGVuZ3RoKTtcblxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBhcnJheVtpbmRleF0gPSBhcmdzW3N0YXJ0ICsgaW5kZXhdO1xuICAgIH1cbiAgICBpbmRleCA9IC0xO1xuICAgIHZhciBvdGhlckFyZ3MgPSBBcnJheShzdGFydCArIDEpO1xuICAgIHdoaWxlICgrK2luZGV4IDwgc3RhcnQpIHtcbiAgICAgIG90aGVyQXJnc1tpbmRleF0gPSBhcmdzW2luZGV4XTtcbiAgICB9XG4gICAgb3RoZXJBcmdzW3N0YXJ0XSA9IHRyYW5zZm9ybShhcnJheSk7XG4gICAgcmV0dXJuIGFwcGx5KGZ1bmMsIHRoaXMsIG90aGVyQXJncyk7XG4gIH07XG59XG5cbi8qKlxuICogU2V0cyB0aGUgYHRvU3RyaW5nYCBtZXRob2Qgb2YgYGZ1bmNgIHRvIHJldHVybiBgc3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtGdW5jdGlvbn0gc3RyaW5nIFRoZSBgdG9TdHJpbmdgIHJlc3VsdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyBgZnVuY2AuXG4gKi9cbnZhciBzZXRUb1N0cmluZyA9IHNob3J0T3V0KGJhc2VTZXRUb1N0cmluZyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQnbGwgc2hvcnQgb3V0IGFuZCBpbnZva2UgYGlkZW50aXR5YCBpbnN0ZWFkXG4gKiBvZiBgZnVuY2Agd2hlbiBpdCdzIGNhbGxlZCBgSE9UX0NPVU5UYCBvciBtb3JlIHRpbWVzIGluIGBIT1RfU1BBTmBcbiAqIG1pbGxpc2Vjb25kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gcmVzdHJpY3QuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzaG9ydGFibGUgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHNob3J0T3V0KGZ1bmMpIHtcbiAgdmFyIGNvdW50ID0gMCxcbiAgICAgIGxhc3RDYWxsZWQgPSAwO1xuXG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RhbXAgPSBuYXRpdmVOb3coKSxcbiAgICAgICAgcmVtYWluaW5nID0gSE9UX1NQQU4gLSAoc3RhbXAgLSBsYXN0Q2FsbGVkKTtcblxuICAgIGxhc3RDYWxsZWQgPSBzdGFtcDtcbiAgICBpZiAocmVtYWluaW5nID4gMCkge1xuICAgICAgaWYgKCsrY291bnQgPj0gSE9UX0NPVU5UKSB7XG4gICAgICAgIHJldHVybiBhcmd1bWVudHNbMF07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvdW50ID0gMDtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmMuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGBmdW5jYCB0byBpdHMgc291cmNlIGNvZGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBzb3VyY2UgY29kZS5cbiAqL1xuZnVuY3Rpb24gdG9Tb3VyY2UoZnVuYykge1xuICBpZiAoZnVuYyAhPSBudWxsKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBmdW5jVG9TdHJpbmcuY2FsbChmdW5jKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICAgIHRyeSB7XG4gICAgICByZXR1cm4gKGZ1bmMgKyAnJyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxuICByZXR1cm4gJyc7XG59XG5cbi8qKlxuICogUGVyZm9ybXMgYVxuICogW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAqIGNvbXBhcmlzb24gYmV0d2VlbiB0d28gdmFsdWVzIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZSBlcXVpdmFsZW50LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICogdmFyIG90aGVyID0geyAnYSc6IDEgfTtcbiAqXG4gKiBfLmVxKG9iamVjdCwgb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKG9iamVjdCwgb3RoZXIpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKCdhJywgJ2EnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKCdhJywgT2JqZWN0KCdhJykpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKE5hTiwgTmFOKTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gZXEodmFsdWUsIG90aGVyKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gb3RoZXIgfHwgKHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXIpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGxpa2VseSBhbiBgYXJndW1lbnRzYCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICogIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJndW1lbnRzKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcmd1bWVudHMgPSBiYXNlSXNBcmd1bWVudHMoZnVuY3Rpb24oKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPyBiYXNlSXNBcmd1bWVudHMgOiBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCAnY2FsbGVlJykgJiZcbiAgICAhcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpO1xufTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZS4gQSB2YWx1ZSBpcyBjb25zaWRlcmVkIGFycmF5LWxpa2UgaWYgaXQnc1xuICogbm90IGEgZnVuY3Rpb24gYW5kIGhhcyBhIGB2YWx1ZS5sZW5ndGhgIHRoYXQncyBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiBvclxuICogZXF1YWwgdG8gYDBgIGFuZCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gYE51bWJlci5NQVhfU0FGRV9JTlRFR0VSYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoJ2FiYycpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgIWlzRnVuY3Rpb24odmFsdWUpO1xufVxuXG4vKipcbiAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8uaXNBcnJheUxpa2VgIGV4Y2VwdCB0aGF0IGl0IGFsc28gY2hlY2tzIGlmIGB2YWx1ZWBcbiAqIGlzIGFuIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheS1saWtlIG9iamVjdCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheUxpa2VPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlT2JqZWN0KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2VPYmplY3QoJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXlMaWtlT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5TGlrZU9iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBpc0FycmF5TGlrZSh2YWx1ZSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjMuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0J1ZmZlcihuZXcgQnVmZmVyKDIpKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBVaW50OEFycmF5KDIpKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0J1ZmZlciA9IG5hdGl2ZUlzQnVmZmVyIHx8IHN0dWJGYWxzZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYEZ1bmN0aW9uYCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBmdW5jdGlvbiwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oXyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0Z1bmN0aW9uKC9hYmMvKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gVGhlIHVzZSBvZiBgT2JqZWN0I3RvU3RyaW5nYCBhdm9pZHMgaXNzdWVzIHdpdGggdGhlIGB0eXBlb2ZgIG9wZXJhdG9yXG4gIC8vIGluIFNhZmFyaSA5IHdoaWNoIHJldHVybnMgJ29iamVjdCcgZm9yIHR5cGVkIGFycmF5cyBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICB2YXIgdGFnID0gYmFzZUdldFRhZyh2YWx1ZSk7XG4gIHJldHVybiB0YWcgPT0gZnVuY1RhZyB8fCB0YWcgPT0gZ2VuVGFnIHx8IHRhZyA9PSBhc3luY1RhZyB8fCB0YWcgPT0gcHJveHlUYWc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGxlbmd0aC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgbG9vc2VseSBiYXNlZCBvblxuICogW2BUb0xlbmd0aGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXRvbGVuZ3RoKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTGVuZ3RoKDMpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNMZW5ndGgoSW5maW5pdHkpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKCczJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0xlbmd0aCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInICYmXG4gICAgdmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8PSBNQVhfU0FGRV9JTlRFR0VSO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwbGFpbiBvYmplY3QsIHRoYXQgaXMsIGFuIG9iamVjdCBjcmVhdGVkIGJ5IHRoZVxuICogYE9iamVjdGAgY29uc3RydWN0b3Igb3Igb25lIHdpdGggYSBgW1tQcm90b3R5cGVdXWAgb2YgYG51bGxgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC44LjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5hID0gMTtcbiAqIH1cbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QobmV3IEZvbyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNQbGFpbk9iamVjdChbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoeyAneCc6IDAsICd5JzogMCB9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoT2JqZWN0LmNyZWF0ZShudWxsKSk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdExpa2UodmFsdWUpIHx8IGJhc2VHZXRUYWcodmFsdWUpICE9IG9iamVjdFRhZykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcHJvdG8gPSBnZXRQcm90b3R5cGUodmFsdWUpO1xuICBpZiAocHJvdG8gPT09IG51bGwpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB2YXIgQ3RvciA9IGhhc093blByb3BlcnR5LmNhbGwocHJvdG8sICdjb25zdHJ1Y3RvcicpICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuICByZXR1cm4gdHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yIGluc3RhbmNlb2YgQ3RvciAmJlxuICAgIGZ1bmNUb1N0cmluZy5jYWxsKEN0b3IpID09IG9iamVjdEN0b3JTdHJpbmc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkobmV3IFVpbnQ4QXJyYXkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNUeXBlZEFycmF5KFtdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc1R5cGVkQXJyYXkgPSBub2RlSXNUeXBlZEFycmF5ID8gYmFzZVVuYXJ5KG5vZGVJc1R5cGVkQXJyYXkpIDogYmFzZUlzVHlwZWRBcnJheTtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgcGxhaW4gb2JqZWN0IGZsYXR0ZW5pbmcgaW5oZXJpdGVkIGVudW1lcmFibGUgc3RyaW5nXG4gKiBrZXllZCBwcm9wZXJ0aWVzIG9mIGB2YWx1ZWAgdG8gb3duIHByb3BlcnRpZXMgb2YgdGhlIHBsYWluIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDMuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBwbGFpbiBvYmplY3QuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5iID0gMjtcbiAqIH1cbiAqXG4gKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICpcbiAqIF8uYXNzaWduKHsgJ2EnOiAxIH0sIG5ldyBGb28pO1xuICogLy8gPT4geyAnYSc6IDEsICdiJzogMiB9XG4gKlxuICogXy5hc3NpZ24oeyAnYSc6IDEgfSwgXy50b1BsYWluT2JqZWN0KG5ldyBGb28pKTtcbiAqIC8vID0+IHsgJ2EnOiAxLCAnYic6IDIsICdjJzogMyB9XG4gKi9cbmZ1bmN0aW9uIHRvUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIGNvcHlPYmplY3QodmFsdWUsIGtleXNJbih2YWx1ZSkpO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIG93biBhbmQgaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gKlxuICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAzLjAuMFxuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogICB0aGlzLmIgPSAyO1xuICogfVxuICpcbiAqIEZvby5wcm90b3R5cGUuYyA9IDM7XG4gKlxuICogXy5rZXlzSW4obmV3IEZvbyk7XG4gKiAvLyA9PiBbJ2EnLCAnYicsICdjJ10gKGl0ZXJhdGlvbiBvcmRlciBpcyBub3QgZ3VhcmFudGVlZClcbiAqL1xuZnVuY3Rpb24ga2V5c0luKG9iamVjdCkge1xuICByZXR1cm4gaXNBcnJheUxpa2Uob2JqZWN0KSA/IGFycmF5TGlrZUtleXMob2JqZWN0LCB0cnVlKSA6IGJhc2VLZXlzSW4ob2JqZWN0KTtcbn1cblxuLyoqXG4gKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmFzc2lnbmAgZXhjZXB0IHRoYXQgaXQgcmVjdXJzaXZlbHkgbWVyZ2VzIG93biBhbmRcbiAqIGluaGVyaXRlZCBlbnVtZXJhYmxlIHN0cmluZyBrZXllZCBwcm9wZXJ0aWVzIG9mIHNvdXJjZSBvYmplY3RzIGludG8gdGhlXG4gKiBkZXN0aW5hdGlvbiBvYmplY3QuIFNvdXJjZSBwcm9wZXJ0aWVzIHRoYXQgcmVzb2x2ZSB0byBgdW5kZWZpbmVkYCBhcmVcbiAqIHNraXBwZWQgaWYgYSBkZXN0aW5hdGlvbiB2YWx1ZSBleGlzdHMuIEFycmF5IGFuZCBwbGFpbiBvYmplY3QgcHJvcGVydGllc1xuICogYXJlIG1lcmdlZCByZWN1cnNpdmVseS4gT3RoZXIgb2JqZWN0cyBhbmQgdmFsdWUgdHlwZXMgYXJlIG92ZXJyaWRkZW4gYnlcbiAqIGFzc2lnbm1lbnQuIFNvdXJjZSBvYmplY3RzIGFyZSBhcHBsaWVkIGZyb20gbGVmdCB0byByaWdodC4gU3Vic2VxdWVudFxuICogc291cmNlcyBvdmVyd3JpdGUgcHJvcGVydHkgYXNzaWdubWVudHMgb2YgcHJldmlvdXMgc291cmNlcy5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgbXV0YXRlcyBgb2JqZWN0YC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuNS4wXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0gey4uLk9iamVjdH0gW3NvdXJjZXNdIFRoZSBzb3VyY2Ugb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7XG4gKiAgICdhJzogW3sgJ2InOiAyIH0sIHsgJ2QnOiA0IH1dXG4gKiB9O1xuICpcbiAqIHZhciBvdGhlciA9IHtcbiAqICAgJ2EnOiBbeyAnYyc6IDMgfSwgeyAnZSc6IDUgfV1cbiAqIH07XG4gKlxuICogXy5tZXJnZShvYmplY3QsIG90aGVyKTtcbiAqIC8vID0+IHsgJ2EnOiBbeyAnYic6IDIsICdjJzogMyB9LCB7ICdkJzogNCwgJ2UnOiA1IH1dIH1cbiAqL1xudmFyIG1lcmdlID0gY3JlYXRlQXNzaWduZXIoZnVuY3Rpb24ob2JqZWN0LCBzb3VyY2UsIHNyY0luZGV4KSB7XG4gIGJhc2VNZXJnZShvYmplY3QsIHNvdXJjZSwgc3JjSW5kZXgpO1xufSk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBgdmFsdWVgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMi40LjBcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byByZXR1cm4gZnJvbSB0aGUgbmV3IGZ1bmN0aW9uLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY29uc3RhbnQgZnVuY3Rpb24uXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3RzID0gXy50aW1lcygyLCBfLmNvbnN0YW50KHsgJ2EnOiAxIH0pKTtcbiAqXG4gKiBjb25zb2xlLmxvZyhvYmplY3RzKTtcbiAqIC8vID0+IFt7ICdhJzogMSB9LCB7ICdhJzogMSB9XVxuICpcbiAqIGNvbnNvbGUubG9nKG9iamVjdHNbMF0gPT09IG9iamVjdHNbMV0pO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBjb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgdGhlIGZpcnN0IGFyZ3VtZW50IGl0IHJlY2VpdmVzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0geyp9IHZhbHVlIEFueSB2YWx1ZS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIGB2YWx1ZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICpcbiAqIGNvbnNvbGUubG9nKF8uaWRlbnRpdHkob2JqZWN0KSA9PT0gb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG4vKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWVyZ2U7XG4iLCJ2YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIHJpdGVyID0gWzddW0lURVJBVE9SXSgpO1xuICByaXRlclsncmV0dXJuJ10gPSBmdW5jdGlvbiAoKSB7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uICgpIHsgdGhyb3cgMjsgfSk7XG59IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYywgc2tpcENsb3NpbmcpIHtcbiAgaWYgKCFza2lwQ2xvc2luZyAmJiAhU0FGRV9DTE9TSU5HKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzYWZlID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IFs3XTtcbiAgICB2YXIgaXRlciA9IGFycltJVEVSQVRPUl0oKTtcbiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB7IGRvbmU6IHNhZmUgPSB0cnVlIH07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXI7IH07XG4gICAgZXhlYyhhcnIpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIHNhZmU7XG59O1xuIiwiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIiwidmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29yZScpLmdldEl0ZXJhdG9yTWV0aG9kID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCAhPSB1bmRlZmluZWQpIHJldHVybiBpdFtJVEVSQVRPUl1cbiAgICB8fCBpdFsnQEBpdGVyYXRvciddXG4gICAgfHwgSXRlcmF0b3JzW2NsYXNzb2YoaXQpXTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBpbmRleCwgdmFsdWUpIHtcbiAgaWYgKGluZGV4IGluIG9iamVjdCkgJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpO1xuICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTtcbn07XG4iLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsIi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3JcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcykge1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkgYW5PYmplY3QocmV0LmNhbGwoaXRlcmF0b3IpKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikgeyBBcnJheS5mcm9tKGl0ZXIpOyB9KSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjIuMSBBcnJheS5mcm9tKGFycmF5TGlrZSwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gIGZyb206IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlIC8qICwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gICAgdmFyIEMgPSB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5O1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBsZW5ndGgsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKG1hcHBpbmcpIG1hcGZuID0gY3R4KG1hcGZuLCBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gICAgLy8gaWYgb2JqZWN0IGlzbid0IGl0ZXJhYmxlIG9yIGl0J3MgYXJyYXkgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yIC0gdXNlIHNpbXBsZSBjYXNlXG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyKGl0ZXJGbikpKSB7XG4gICAgICBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHJlc3VsdCA9IG5ldyBDKCk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gY2FsbChpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICAgIGZvciAocmVzdWx0ID0gbmV3IEMobGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IG1hcGZuKE9baW5kZXhdLCBpbmRleCkgOiBPW2luZGV4XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5sZW5ndGggPSBpbmRleDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuYXJyYXkuZnJvbScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuZnJvbTtcbiIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9hcnJheS9mcm9tXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZnJvbSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL2FycmF5L2Zyb21cIik7XG5cbnZhciBfZnJvbTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9mcm9tKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgYXJyMltpXSA9IGFycltpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKDAsIF9mcm9tMi5kZWZhdWx0KShhcnIpO1xuICB9XG59OyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF90b0NvbnN1bWFibGVBcnJheTIgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXknKTtcblxudmFyIF90b0NvbnN1bWFibGVBcnJheTMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90b0NvbnN1bWFibGVBcnJheTIpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBnZXRNdWlUaGVtZTtcblxudmFyIF9sb2Rhc2ggPSByZXF1aXJlKCdsb2Rhc2gubWVyZ2UnKTtcblxudmFyIF9sb2Rhc2gyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9kYXNoKTtcblxudmFyIF9jb2xvck1hbmlwdWxhdG9yID0gcmVxdWlyZSgnLi4vdXRpbHMvY29sb3JNYW5pcHVsYXRvcicpO1xuXG52YXIgX2xpZ2h0QmFzZVRoZW1lID0gcmVxdWlyZSgnLi9iYXNlVGhlbWVzL2xpZ2h0QmFzZVRoZW1lJyk7XG5cbnZhciBfbGlnaHRCYXNlVGhlbWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbGlnaHRCYXNlVGhlbWUpO1xuXG52YXIgX3pJbmRleCA9IHJlcXVpcmUoJy4vekluZGV4Jyk7XG5cbnZhciBfekluZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3pJbmRleCk7XG5cbnZhciBfYXV0b3ByZWZpeGVyID0gcmVxdWlyZSgnLi4vdXRpbHMvYXV0b3ByZWZpeGVyJyk7XG5cbnZhciBfYXV0b3ByZWZpeGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F1dG9wcmVmaXhlcik7XG5cbnZhciBfY2FsbE9uY2UgPSByZXF1aXJlKCcuLi91dGlscy9jYWxsT25jZScpO1xuXG52YXIgX2NhbGxPbmNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NhbGxPbmNlKTtcblxudmFyIF9ydGwgPSByZXF1aXJlKCcuLi91dGlscy9ydGwnKTtcblxudmFyIF9ydGwyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnRsKTtcblxudmFyIF9jb21wb3NlID0gcmVxdWlyZSgncmVjb21wb3NlL2NvbXBvc2UnKTtcblxudmFyIF9jb21wb3NlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbXBvc2UpO1xuXG52YXIgX3R5cG9ncmFwaHkgPSByZXF1aXJlKCcuL3R5cG9ncmFwaHknKTtcblxudmFyIF90eXBvZ3JhcGh5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cG9ncmFwaHkpO1xuXG52YXIgX2NvbG9ycyA9IHJlcXVpcmUoJy4vY29sb3JzJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogR2V0IHRoZSBNVUkgdGhlbWUgY29ycmVzcG9uZGluZyB0byBhIGJhc2UgdGhlbWUuXG4gKiBJdCdzIHBvc3NpYmxlIHRvIG92ZXJyaWRlIHRoZSBjb21wdXRlZCB0aGVtZSB2YWx1ZXNcbiAqIGJ5IHByb3ZpZGluZyBhIHNlY29uZCBhcmd1bWVudC4gVGhlIGNhbGN1bGF0ZWRcbiAqIHRoZW1lIHdpbGwgYmUgZGVlcGx5IG1lcmdlZCB3aXRoIHRoZSBzZWNvbmQgYXJndW1lbnQuXG4gKi9cbmZ1bmN0aW9uIGdldE11aVRoZW1lKG11aVRoZW1lKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtb3JlID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1vcmVbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgbXVpVGhlbWUgPSBfbG9kYXNoMi5kZWZhdWx0LmFwcGx5KHVuZGVmaW5lZCwgW3tcbiAgICB6SW5kZXg6IF96SW5kZXgyLmRlZmF1bHQsXG4gICAgaXNSdGw6IGZhbHNlLFxuICAgIHVzZXJBZ2VudDogdW5kZWZpbmVkXG4gIH0sIF9saWdodEJhc2VUaGVtZTIuZGVmYXVsdCwgbXVpVGhlbWVdLmNvbmNhdChtb3JlKSk7XG5cbiAgdmFyIF9tdWlUaGVtZSA9IG11aVRoZW1lLFxuICAgICAgc3BhY2luZyA9IF9tdWlUaGVtZS5zcGFjaW5nLFxuICAgICAgZm9udEZhbWlseSA9IF9tdWlUaGVtZS5mb250RmFtaWx5LFxuICAgICAgcGFsZXR0ZSA9IF9tdWlUaGVtZS5wYWxldHRlO1xuXG4gIHZhciBiYXNlVGhlbWUgPSB7IHNwYWNpbmc6IHNwYWNpbmcsIGZvbnRGYW1pbHk6IGZvbnRGYW1pbHksIHBhbGV0dGU6IHBhbGV0dGUgfTtcblxuICBtdWlUaGVtZSA9ICgwLCBfbG9kYXNoMi5kZWZhdWx0KSh7XG4gICAgYXBwQmFyOiB7XG4gICAgICBjb2xvcjogcGFsZXR0ZS5wcmltYXJ5MUNvbG9yLFxuICAgICAgdGV4dENvbG9yOiBwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvcixcbiAgICAgIGhlaWdodDogc3BhY2luZy5kZXNrdG9wS2V5bGluZUluY3JlbWVudCxcbiAgICAgIHRpdGxlRm9udFdlaWdodDogX3R5cG9ncmFwaHkyLmRlZmF1bHQuZm9udFdlaWdodE5vcm1hbCxcbiAgICAgIHBhZGRpbmc6IHNwYWNpbmcuZGVza3RvcEd1dHRlclxuICAgIH0sXG4gICAgYXZhdGFyOiB7XG4gICAgICBjb2xvcjogcGFsZXR0ZS5jYW52YXNDb2xvcixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmVtcGhhc2l6ZSkocGFsZXR0ZS5jYW52YXNDb2xvciwgMC4yNilcbiAgICB9LFxuICAgIGJhZGdlOiB7XG4gICAgICBjb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUudGV4dENvbG9yLFxuICAgICAgcHJpbWFyeUNvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3IsXG4gICAgICBwcmltYXJ5VGV4dENvbG9yOiBwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvcixcbiAgICAgIHNlY29uZGFyeUNvbG9yOiBwYWxldHRlLmFjY2VudDFDb2xvcixcbiAgICAgIHNlY29uZGFyeVRleHRDb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICBmb250V2VpZ2h0OiBfdHlwb2dyYXBoeTIuZGVmYXVsdC5mb250V2VpZ2h0TWVkaXVtXG4gICAgfSxcbiAgICBib3R0b21OYXZpZ2F0aW9uOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUuY2FudmFzQ29sb3IsXG4gICAgICB1bnNlbGVjdGVkQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC41NCksXG4gICAgICBzZWxlY3RlZENvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3IsXG4gICAgICBoZWlnaHQ6IDU2LFxuICAgICAgdW5zZWxlY3RlZEZvbnRTaXplOiAxMixcbiAgICAgIHNlbGVjdGVkRm9udFNpemU6IDE0XG4gICAgfSxcbiAgICBidXR0b246IHtcbiAgICAgIGhlaWdodDogMzYsXG4gICAgICBtaW5XaWR0aDogODgsXG4gICAgICBpY29uQnV0dG9uU2l6ZTogc3BhY2luZy5pY29uU2l6ZSAqIDJcbiAgICB9LFxuICAgIGNhcmQ6IHtcbiAgICAgIHRpdGxlQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC44NyksXG4gICAgICBzdWJ0aXRsZUNvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkocGFsZXR0ZS50ZXh0Q29sb3IsIDAuNTQpLFxuICAgICAgZm9udFdlaWdodDogX3R5cG9ncmFwaHkyLmRlZmF1bHQuZm9udFdlaWdodE1lZGl1bVxuICAgIH0sXG4gICAgY2FyZE1lZGlhOiB7XG4gICAgICBjb2xvcjogX2NvbG9ycy5kYXJrV2hpdGUsXG4gICAgICBvdmVybGF5Q29udGVudEJhY2tncm91bmQ6IF9jb2xvcnMubGlnaHRCbGFjayxcbiAgICAgIHRpdGxlQ29sb3I6IF9jb2xvcnMuZGFya1doaXRlLFxuICAgICAgc3VidGl0bGVDb2xvcjogX2NvbG9ycy5saWdodFdoaXRlXG4gICAgfSxcbiAgICBjYXJkVGV4dDoge1xuICAgICAgdGV4dENvbG9yOiBwYWxldHRlLnRleHRDb2xvclxuICAgIH0sXG4gICAgY2hlY2tib3g6IHtcbiAgICAgIGJveENvbG9yOiBwYWxldHRlLnRleHRDb2xvcixcbiAgICAgIGNoZWNrZWRDb2xvcjogcGFsZXR0ZS5wcmltYXJ5MUNvbG9yLFxuICAgICAgcmVxdWlyZWRDb2xvcjogcGFsZXR0ZS5wcmltYXJ5MUNvbG9yLFxuICAgICAgZGlzYWJsZWRDb2xvcjogcGFsZXR0ZS5kaXNhYmxlZENvbG9yLFxuICAgICAgbGFiZWxDb2xvcjogcGFsZXR0ZS50ZXh0Q29sb3IsXG4gICAgICBsYWJlbERpc2FibGVkQ29sb3I6IHBhbGV0dGUuZGlzYWJsZWRDb2xvclxuICAgIH0sXG4gICAgY2hpcDoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZW1waGFzaXplKShwYWxldHRlLmNhbnZhc0NvbG9yLCAwLjEyKSxcbiAgICAgIGRlbGV0ZUljb25Db2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUudGV4dENvbG9yLCAwLjI2KSxcbiAgICAgIHRleHRDb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUudGV4dENvbG9yLCAwLjg3KSxcbiAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgIGZvbnRXZWlnaHQ6IF90eXBvZ3JhcGh5Mi5kZWZhdWx0LmZvbnRXZWlnaHROb3JtYWwsXG4gICAgICBzaGFkb3c6ICcwIDFweCA2cHggJyArICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnNoYWRvd0NvbG9yLCAwLjEyKSArICcsXFxuICAgICAgICAwIDFweCA0cHggJyArICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnNoYWRvd0NvbG9yLCAwLjEyKVxuICAgIH0sXG4gICAgZGF0ZVBpY2tlcjoge1xuICAgICAgY29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIHRleHRDb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICBjYWxlbmRhclRleHRDb2xvcjogcGFsZXR0ZS50ZXh0Q29sb3IsXG4gICAgICBzZWxlY3RDb2xvcjogcGFsZXR0ZS5wcmltYXJ5MkNvbG9yLFxuICAgICAgc2VsZWN0VGV4dENvbG9yOiBwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvcixcbiAgICAgIGNhbGVuZGFyWWVhckJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5jYW52YXNDb2xvcixcbiAgICAgIGhlYWRlckNvbG9yOiBwYWxldHRlLnBpY2tlckhlYWRlckNvbG9yIHx8IHBhbGV0dGUucHJpbWFyeTFDb2xvclxuICAgIH0sXG4gICAgZGlhbG9nOiB7XG4gICAgICB0aXRsZUZvbnRTaXplOiAyMixcbiAgICAgIGJvZHlGb250U2l6ZTogMTYsXG4gICAgICBib2R5Q29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC42KVxuICAgIH0sXG4gICAgZHJvcERvd25NZW51OiB7XG4gICAgICBhY2NlbnRDb2xvcjogcGFsZXR0ZS5ib3JkZXJDb2xvclxuICAgIH0sXG4gICAgZW5oYW5jZWRCdXR0b246IHtcbiAgICAgIHRhcEhpZ2hsaWdodENvbG9yOiBfY29sb3JzLnRyYW5zcGFyZW50XG4gICAgfSxcbiAgICBmbGF0QnV0dG9uOiB7XG4gICAgICBjb2xvcjogX2NvbG9ycy50cmFuc3BhcmVudCxcbiAgICAgIGJ1dHRvbkZpbHRlckNvbG9yOiAnIzk5OTk5OScsXG4gICAgICBkaXNhYmxlZFRleHRDb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUudGV4dENvbG9yLCAwLjMpLFxuICAgICAgdGV4dENvbG9yOiBwYWxldHRlLnRleHRDb2xvcixcbiAgICAgIHByaW1hcnlUZXh0Q29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIHNlY29uZGFyeVRleHRDb2xvcjogcGFsZXR0ZS5hY2NlbnQxQ29sb3IsXG4gICAgICBmb250U2l6ZTogX3R5cG9ncmFwaHkyLmRlZmF1bHQuZm9udFN0eWxlQnV0dG9uRm9udFNpemUsXG4gICAgICBmb250V2VpZ2h0OiBfdHlwb2dyYXBoeTIuZGVmYXVsdC5mb250V2VpZ2h0TWVkaXVtXG4gICAgfSxcbiAgICBmbG9hdGluZ0FjdGlvbkJ1dHRvbjoge1xuICAgICAgYnV0dG9uU2l6ZTogNTYsXG4gICAgICBtaW5pU2l6ZTogNDAsXG4gICAgICBjb2xvcjogcGFsZXR0ZS5wcmltYXJ5MUNvbG9yLFxuICAgICAgaWNvbkNvbG9yOiBwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvcixcbiAgICAgIHNlY29uZGFyeUNvbG9yOiBwYWxldHRlLmFjY2VudDFDb2xvcixcbiAgICAgIHNlY29uZGFyeUljb25Db2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICBkaXNhYmxlZFRleHRDb2xvcjogcGFsZXR0ZS5kaXNhYmxlZENvbG9yLFxuICAgICAgZGlzYWJsZWRDb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmVtcGhhc2l6ZSkocGFsZXR0ZS5jYW52YXNDb2xvciwgMC4xMilcbiAgICB9LFxuICAgIGdyaWRUaWxlOiB7XG4gICAgICB0ZXh0Q29sb3I6IF9jb2xvcnMud2hpdGVcbiAgICB9LFxuICAgIGljb246IHtcbiAgICAgIGNvbG9yOiBwYWxldHRlLmNhbnZhc0NvbG9yLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3JcbiAgICB9LFxuICAgIGlua0Jhcjoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLmFjY2VudDFDb2xvclxuICAgIH0sXG4gICAgZHJhd2VyOiB7XG4gICAgICB3aWR0aDogc3BhY2luZy5kZXNrdG9wS2V5bGluZUluY3JlbWVudCAqIDQsXG4gICAgICBjb2xvcjogcGFsZXR0ZS5jYW52YXNDb2xvclxuICAgIH0sXG4gICAgbGlzdEl0ZW06IHtcbiAgICAgIG5lc3RlZExldmVsRGVwdGg6IDE4LFxuICAgICAgc2Vjb25kYXJ5VGV4dENvbG9yOiBwYWxldHRlLnNlY29uZGFyeVRleHRDb2xvcixcbiAgICAgIGxlZnRJY29uQ29sb3I6IF9jb2xvcnMuZ3JleTYwMCxcbiAgICAgIHJpZ2h0SWNvbkNvbG9yOiBfY29sb3JzLmdyZXk2MDBcbiAgICB9LFxuICAgIG1lbnU6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5jYW52YXNDb2xvcixcbiAgICAgIGNvbnRhaW5lckJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5jYW52YXNDb2xvclxuICAgIH0sXG4gICAgbWVudUl0ZW06IHtcbiAgICAgIGRhdGFIZWlnaHQ6IDMyLFxuICAgICAgaGVpZ2h0OiA0OCxcbiAgICAgIGhvdmVyQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC4xKSxcbiAgICAgIHBhZGRpbmc6IHNwYWNpbmcuZGVza3RvcEd1dHRlcixcbiAgICAgIHNlbGVjdGVkVGV4dENvbG9yOiBwYWxldHRlLmFjY2VudDFDb2xvcixcbiAgICAgIHJpZ2h0SWNvbkRlc2t0b3BGaWxsOiBfY29sb3JzLmdyZXk2MDBcbiAgICB9LFxuICAgIG1lbnVTdWJoZWFkZXI6IHtcbiAgICAgIHBhZGRpbmc6IHNwYWNpbmcuZGVza3RvcEd1dHRlcixcbiAgICAgIGJvcmRlckNvbG9yOiBwYWxldHRlLmJvcmRlckNvbG9yLFxuICAgICAgdGV4dENvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3JcbiAgICB9LFxuICAgIG92ZXJsYXk6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogX2NvbG9ycy5saWdodEJsYWNrXG4gICAgfSxcbiAgICBwYXBlcjoge1xuICAgICAgY29sb3I6IHBhbGV0dGUudGV4dENvbG9yLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLmNhbnZhc0NvbG9yLFxuICAgICAgekRlcHRoU2hhZG93czogW1sxLCA2LCAwLjEyLCAxLCA0LCAwLjEyXSwgWzMsIDEwLCAwLjE2LCAzLCAxMCwgMC4yM10sIFsxMCwgMzAsIDAuMTksIDYsIDEwLCAwLjIzXSwgWzE0LCA0NSwgMC4yNSwgMTAsIDE4LCAwLjIyXSwgWzE5LCA2MCwgMC4zMCwgMTUsIDIwLCAwLjIyXV0ubWFwKGZ1bmN0aW9uIChkKSB7XG4gICAgICAgIHJldHVybiAnMCAnICsgZFswXSArICdweCAnICsgZFsxXSArICdweCAnICsgKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUuc2hhZG93Q29sb3IsIGRbMl0pICsgJyxcXG4gICAgICAgICAwICcgKyBkWzNdICsgJ3B4ICcgKyBkWzRdICsgJ3B4ICcgKyAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkocGFsZXR0ZS5zaGFkb3dDb2xvciwgZFs1XSk7XG4gICAgICB9KVxuICAgIH0sXG4gICAgcmFkaW9CdXR0b246IHtcbiAgICAgIGJvcmRlckNvbG9yOiBwYWxldHRlLnRleHRDb2xvcixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICBjaGVja2VkQ29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIHJlcXVpcmVkQ29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIGRpc2FibGVkQ29sb3I6IHBhbGV0dGUuZGlzYWJsZWRDb2xvcixcbiAgICAgIHNpemU6IDI0LFxuICAgICAgbGFiZWxDb2xvcjogcGFsZXR0ZS50ZXh0Q29sb3IsXG4gICAgICBsYWJlbERpc2FibGVkQ29sb3I6IHBhbGV0dGUuZGlzYWJsZWRDb2xvclxuICAgIH0sXG4gICAgcmFpc2VkQnV0dG9uOiB7XG4gICAgICBjb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUudGV4dENvbG9yLFxuICAgICAgcHJpbWFyeUNvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3IsXG4gICAgICBwcmltYXJ5VGV4dENvbG9yOiBwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvcixcbiAgICAgIHNlY29uZGFyeUNvbG9yOiBwYWxldHRlLmFjY2VudDFDb2xvcixcbiAgICAgIHNlY29uZGFyeVRleHRDb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICBkaXNhYmxlZENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZGFya2VuKShwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvciwgMC4xKSxcbiAgICAgIGRpc2FibGVkVGV4dENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkocGFsZXR0ZS50ZXh0Q29sb3IsIDAuMyksXG4gICAgICBmb250U2l6ZTogX3R5cG9ncmFwaHkyLmRlZmF1bHQuZm9udFN0eWxlQnV0dG9uRm9udFNpemUsXG4gICAgICBmb250V2VpZ2h0OiBfdHlwb2dyYXBoeTIuZGVmYXVsdC5mb250V2VpZ2h0TWVkaXVtXG4gICAgfSxcbiAgICByZWZyZXNoSW5kaWNhdG9yOiB7XG4gICAgICBzdHJva2VDb2xvcjogcGFsZXR0ZS5ib3JkZXJDb2xvcixcbiAgICAgIGxvYWRpbmdTdHJva2VDb2xvcjogcGFsZXR0ZS5wcmltYXJ5MUNvbG9yXG4gICAgfSxcbiAgICByaXBwbGU6IHtcbiAgICAgIGNvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkocGFsZXR0ZS50ZXh0Q29sb3IsIDAuODcpXG4gICAgfSxcbiAgICBzbGlkZXI6IHtcbiAgICAgIHRyYWNrU2l6ZTogMixcbiAgICAgIHRyYWNrQ29sb3I6IHBhbGV0dGUucHJpbWFyeTNDb2xvcixcbiAgICAgIHRyYWNrQ29sb3JTZWxlY3RlZDogcGFsZXR0ZS5hY2NlbnQzQ29sb3IsXG4gICAgICBoYW5kbGVTaXplOiAxMixcbiAgICAgIGhhbmRsZVNpemVEaXNhYmxlZDogOCxcbiAgICAgIGhhbmRsZVNpemVBY3RpdmU6IDE4LFxuICAgICAgaGFuZGxlQ29sb3JaZXJvOiBwYWxldHRlLnByaW1hcnkzQ29sb3IsXG4gICAgICBoYW5kbGVGaWxsQ29sb3I6IHBhbGV0dGUuYWx0ZXJuYXRlVGV4dENvbG9yLFxuICAgICAgc2VsZWN0aW9uQ29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIHJpcHBsZUNvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3JcbiAgICB9LFxuICAgIHNuYWNrYmFyOiB7XG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUuYWx0ZXJuYXRlVGV4dENvbG9yLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnRleHRDb2xvcixcbiAgICAgIGFjdGlvbkNvbG9yOiBwYWxldHRlLmFjY2VudDFDb2xvclxuICAgIH0sXG4gICAgc3ViaGVhZGVyOiB7XG4gICAgICBjb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUudGV4dENvbG9yLCAwLjU0KSxcbiAgICAgIGZvbnRXZWlnaHQ6IF90eXBvZ3JhcGh5Mi5kZWZhdWx0LmZvbnRXZWlnaHRNZWRpdW1cbiAgICB9LFxuICAgIHN0ZXBwZXI6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgIGhvdmVyQmFja2dyb3VuZENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkoX2NvbG9ycy5ibGFjaywgMC4wNiksXG4gICAgICBpY29uQ29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIGhvdmVyZWRJY29uQ29sb3I6IF9jb2xvcnMuZ3JleTcwMCxcbiAgICAgIGluYWN0aXZlSWNvbkNvbG9yOiBfY29sb3JzLmdyZXk1MDAsXG4gICAgICB0ZXh0Q29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShfY29sb3JzLmJsYWNrLCAwLjg3KSxcbiAgICAgIGRpc2FibGVkVGV4dENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkoX2NvbG9ycy5ibGFjaywgMC4yNiksXG4gICAgICBjb25uZWN0b3JMaW5lQ29sb3I6IF9jb2xvcnMuZ3JleTQwMFxuICAgIH0sXG4gICAgc3ZnSWNvbjoge1xuICAgICAgY29sb3I6IHBhbGV0dGUudGV4dENvbG9yXG4gICAgfSxcbiAgICB0YWJsZToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLmNhbnZhc0NvbG9yXG4gICAgfSxcbiAgICB0YWJsZUZvb3Rlcjoge1xuICAgICAgYm9yZGVyQ29sb3I6IHBhbGV0dGUuYm9yZGVyQ29sb3IsXG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUuYWNjZW50M0NvbG9yXG4gICAgfSxcbiAgICB0YWJsZUhlYWRlcjoge1xuICAgICAgYm9yZGVyQ29sb3I6IHBhbGV0dGUuYm9yZGVyQ29sb3JcbiAgICB9LFxuICAgIHRhYmxlSGVhZGVyQ29sdW1uOiB7XG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUuYWNjZW50M0NvbG9yLFxuICAgICAgaGVpZ2h0OiA1NixcbiAgICAgIHNwYWNpbmc6IDI0XG4gICAgfSxcbiAgICB0YWJsZVJvdzoge1xuICAgICAgaG92ZXJDb2xvcjogcGFsZXR0ZS5hY2NlbnQyQ29sb3IsXG4gICAgICBzdHJpcGVDb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKCgwLCBfY29sb3JNYW5pcHVsYXRvci5saWdodGVuKShwYWxldHRlLnByaW1hcnkxQ29sb3IsIDAuNSksIDAuNCksXG4gICAgICBzZWxlY3RlZENvbG9yOiBwYWxldHRlLmJvcmRlckNvbG9yLFxuICAgICAgdGV4dENvbG9yOiBwYWxldHRlLnRleHRDb2xvcixcbiAgICAgIGJvcmRlckNvbG9yOiBwYWxldHRlLmJvcmRlckNvbG9yLFxuICAgICAgaGVpZ2h0OiA0OFxuICAgIH0sXG4gICAgdGFibGVSb3dDb2x1bW46IHtcbiAgICAgIGhlaWdodDogNDgsXG4gICAgICBzcGFjaW5nOiAyNFxuICAgIH0sXG4gICAgdGFiczoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3IsXG4gICAgICB0ZXh0Q29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvciwgMC43KSxcbiAgICAgIHNlbGVjdGVkVGV4dENvbG9yOiBwYWxldHRlLmFsdGVybmF0ZVRleHRDb2xvclxuICAgIH0sXG4gICAgdGV4dEZpZWxkOiB7XG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUudGV4dENvbG9yLFxuICAgICAgaGludENvbG9yOiBwYWxldHRlLmRpc2FibGVkQ29sb3IsXG4gICAgICBmbG9hdGluZ0xhYmVsQ29sb3I6IHBhbGV0dGUuZGlzYWJsZWRDb2xvcixcbiAgICAgIGRpc2FibGVkVGV4dENvbG9yOiBwYWxldHRlLmRpc2FibGVkQ29sb3IsXG4gICAgICBlcnJvckNvbG9yOiBfY29sb3JzLnJlZDUwMCxcbiAgICAgIGZvY3VzQ29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgIGJvcmRlckNvbG9yOiBwYWxldHRlLmJvcmRlckNvbG9yXG4gICAgfSxcbiAgICB0aW1lUGlja2VyOiB7XG4gICAgICBjb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3IsXG4gICAgICB0ZXh0Q29sb3I6IHBhbGV0dGUuYWx0ZXJuYXRlVGV4dENvbG9yLFxuICAgICAgYWNjZW50Q29sb3I6IHBhbGV0dGUucHJpbWFyeTFDb2xvcixcbiAgICAgIGNsb2NrQ29sb3I6IHBhbGV0dGUudGV4dENvbG9yLFxuICAgICAgY2xvY2tDaXJjbGVDb2xvcjogcGFsZXR0ZS5jbG9ja0NpcmNsZUNvbG9yLFxuICAgICAgaGVhZGVyQ29sb3I6IHBhbGV0dGUucGlja2VySGVhZGVyQ29sb3IgfHwgcGFsZXR0ZS5wcmltYXJ5MUNvbG9yLFxuICAgICAgc2VsZWN0Q29sb3I6IHBhbGV0dGUucHJpbWFyeTJDb2xvcixcbiAgICAgIHNlbGVjdFRleHRDb2xvcjogcGFsZXR0ZS5hbHRlcm5hdGVUZXh0Q29sb3JcbiAgICB9LFxuICAgIHRvZ2dsZToge1xuICAgICAgdGh1bWJPbkNvbG9yOiBwYWxldHRlLnByaW1hcnkxQ29sb3IsXG4gICAgICB0aHVtYk9mZkNvbG9yOiBwYWxldHRlLmFjY2VudDJDb2xvcixcbiAgICAgIHRodW1iRGlzYWJsZWRDb2xvcjogcGFsZXR0ZS5ib3JkZXJDb2xvcixcbiAgICAgIHRodW1iUmVxdWlyZWRDb2xvcjogcGFsZXR0ZS5wcmltYXJ5MUNvbG9yLFxuICAgICAgdHJhY2tPbkNvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkocGFsZXR0ZS5wcmltYXJ5MUNvbG9yLCAwLjUpLFxuICAgICAgdHJhY2tPZmZDb2xvcjogcGFsZXR0ZS5wcmltYXJ5M0NvbG9yLFxuICAgICAgdHJhY2tEaXNhYmxlZENvbG9yOiBwYWxldHRlLnByaW1hcnkzQ29sb3IsXG4gICAgICBsYWJlbENvbG9yOiBwYWxldHRlLnRleHRDb2xvcixcbiAgICAgIGxhYmVsRGlzYWJsZWRDb2xvcjogcGFsZXR0ZS5kaXNhYmxlZENvbG9yLFxuICAgICAgdHJhY2tSZXF1aXJlZENvbG9yOiAoMCwgX2NvbG9yTWFuaXB1bGF0b3IuZmFkZSkocGFsZXR0ZS5wcmltYXJ5MUNvbG9yLCAwLjUpXG4gICAgfSxcbiAgICB0b29sYmFyOiB7XG4gICAgICBjb2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUudGV4dENvbG9yLCAwLjU0KSxcbiAgICAgIGhvdmVyQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC44NyksXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5kYXJrZW4pKHBhbGV0dGUuYWNjZW50MkNvbG9yLCAwLjA1KSxcbiAgICAgIGhlaWdodDogNTYsXG4gICAgICB0aXRsZUZvbnRTaXplOiAyMCxcbiAgICAgIGljb25Db2xvcjogKDAsIF9jb2xvck1hbmlwdWxhdG9yLmZhZGUpKHBhbGV0dGUudGV4dENvbG9yLCAwLjQpLFxuICAgICAgc2VwYXJhdG9yQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC4xNzUpLFxuICAgICAgbWVudUhvdmVyQ29sb3I6ICgwLCBfY29sb3JNYW5pcHVsYXRvci5mYWRlKShwYWxldHRlLnRleHRDb2xvciwgMC4xKVxuICAgIH0sXG4gICAgdG9vbHRpcDoge1xuICAgICAgY29sb3I6IF9jb2xvcnMud2hpdGUsXG4gICAgICByaXBwbGVCYWNrZ3JvdW5kQ29sb3I6IF9jb2xvcnMuZ3JleTcwMCxcbiAgICAgIG9wYWNpdHk6IDAuOVxuICAgIH1cbiAgfSwgbXVpVGhlbWUsIHtcbiAgICBiYXNlVGhlbWU6IGJhc2VUaGVtZSwgLy8gVG8gcHJvdmlkZSBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LlxuICAgIHJhd1RoZW1lOiBiYXNlVGhlbWUgLy8gVG8gcHJvdmlkZSBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LlxuICB9KTtcblxuICB2YXIgdHJhbnNmb3JtZXJzID0gW19hdXRvcHJlZml4ZXIyLmRlZmF1bHQsIF9ydGwyLmRlZmF1bHQsIF9jYWxsT25jZTIuZGVmYXVsdF0ubWFwKGZ1bmN0aW9uICh0KSB7XG4gICAgcmV0dXJuIHQobXVpVGhlbWUpO1xuICB9KS5maWx0ZXIoZnVuY3Rpb24gKHQpIHtcbiAgICByZXR1cm4gdDtcbiAgfSk7XG5cbiAgbXVpVGhlbWUucHJlcGFyZVN0eWxlcyA9IF9jb21wb3NlMi5kZWZhdWx0LmFwcGx5KHVuZGVmaW5lZCwgKDAsIF90b0NvbnN1bWFibGVBcnJheTMuZGVmYXVsdCkodHJhbnNmb3JtZXJzKSk7XG5cbiAgcmV0dXJuIG11aVRoZW1lO1xufSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCk7XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcignTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGUoUCwgRCkge1xuICByZXR1cm4gJE9iamVjdC5jcmVhdGUoUCwgRCk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGVcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCIvLyBXb3JrcyB3aXRoIF9fcHJvdG9fXyBvbmx5LiBPbGQgdjggY2FuJ3Qgd29yayB3aXRoIG51bGwgcHJvdG8gb2JqZWN0cy5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGNoZWNrID0gZnVuY3Rpb24gKE8sIHByb3RvKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBpZiAoIWlzT2JqZWN0KHByb3RvKSAmJiBwcm90byAhPT0gbnVsbCkgdGhyb3cgVHlwZUVycm9yKHByb3RvICsgXCI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhXCIpO1xufTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgZnVuY3Rpb24gKHRlc3QsIGJ1Z2d5LCBzZXQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldCA9IHJlcXVpcmUoJy4vX2N0eCcpKEZ1bmN0aW9uLmNhbGwsIHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZihPYmplY3QucHJvdG90eXBlLCAnX19wcm90b19fJykuc2V0LCAyKTtcbiAgICAgICAgc2V0KHRlc3QsIFtdKTtcbiAgICAgICAgYnVnZ3kgPSAhKHRlc3QgaW5zdGFuY2VvZiBBcnJheSk7XG4gICAgICB9IGNhdGNoIChlKSB7IGJ1Z2d5ID0gdHJ1ZTsgfVxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKE8sIHByb3RvKSB7XG4gICAgICAgIGNoZWNrKE8sIHByb3RvKTtcbiAgICAgICAgaWYgKGJ1Z2d5KSBPLl9fcHJvdG9fXyA9IHByb3RvO1xuICAgICAgICBlbHNlIHNldChPLCBwcm90byk7XG4gICAgICAgIHJldHVybiBPO1xuICAgICAgfTtcbiAgICB9KHt9LCBmYWxzZSkgOiB1bmRlZmluZWQpLFxuICBjaGVjazogY2hlY2tcbn07XG4iLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5zZXRQcm90b3R5cGVPZjtcbiIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZlwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3NldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIik7XG5cbnZhciBfc2V0UHJvdG90eXBlT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2V0UHJvdG90eXBlT2YpO1xuXG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGVcIik7XG5cbnZhciBfY3JlYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZSk7XG5cbnZhciBfdHlwZW9mMiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIF90eXBlb2YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZW9mMik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyAodHlwZW9mIHN1cGVyQ2xhc3MgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogKDAsIF90eXBlb2YzLmRlZmF1bHQpKHN1cGVyQ2xhc3MpKSk7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSAoMCwgX2NyZWF0ZTIuZGVmYXVsdCkoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZjIuZGVmYXVsdCA/ICgwLCBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59OyIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnb2JzZXJ2YWJsZScpO1xuIiwicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG4iLCIvLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxudmFyIHdpbmRvd05hbWVzID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNcbiAgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpIDogW107XG5cbnZhciBnZXRXaW5kb3dOYW1lcyA9IGZ1bmN0aW9uIChpdCkge1xuICB0cnkge1xuICAgIHJldHVybiBnT1BOKGl0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICByZXR1cm4gd2luZG93TmFtZXMgJiYgdG9TdHJpbmcuY2FsbChpdCkgPT0gJ1tvYmplY3QgV2luZG93XScgPyBnZXRXaW5kb3dOYW1lcyhpdCkgOiBnT1BOKHRvSU9iamVjdChpdCkpO1xufTtcbiIsIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuIiwiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gZ2V0S2V5cyhpdCk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZiAoZ2V0U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCk7XG4gICAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChzeW1ib2xzLmxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbiIsInZhciBNRVRBID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHNldERlc2MgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGlkID0gMDtcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlIHx8IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRydWU7XG59O1xudmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xudmFyIHNldE1ldGEgPSBmdW5jdGlvbiAoaXQpIHtcbiAgc2V0RGVzYyhpdCwgTUVUQSwgeyB2YWx1ZToge1xuICAgIGk6ICdPJyArICsraWQsIC8vIG9iamVjdCBJRFxuICAgIHc6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gfSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICAvLyByZXR1cm4gcHJpbWl0aXZlIHdpdGggcHJlZml4XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnID8gaXQgOiAodHlwZW9mIGl0ID09ICdzdHJpbmcnID8gJ1MnIDogJ1AnKSArIGl0O1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuICdGJztcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gJ0UnO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQV0uaTtcbn07XG52YXIgZ2V0V2VhayA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKSBzZXRNZXRhKGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciBtZXRhID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIEtFWTogTUVUQSxcbiAgTkVFRDogZmFsc2UsXG4gIGZhc3RLZXk6IGZhc3RLZXksXG4gIGdldFdlYWs6IGdldFdlYWssXG4gIG9uRnJlZXplOiBvbkZyZWV6ZVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEVDTUFTY3JpcHQgNiBzeW1ib2xzIHNoaW1cbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBNRVRBID0gcmVxdWlyZSgnLi9fbWV0YScpLktFWTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciB3a3NFeHQgPSByZXF1aXJlKCcuL193a3MtZXh0Jyk7XG52YXIgd2tzRGVmaW5lID0gcmVxdWlyZSgnLi9fd2tzLWRlZmluZScpO1xudmFyIGVudW1LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1rZXlzJyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBnT1BORXh0ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0Jyk7XG52YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BEID0gJEdPUEQuZjtcbnZhciBkUCA9ICREUC5mO1xudmFyIGdPUE4gPSBnT1BORXh0LmY7XG52YXIgJFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgJEpTT04gPSBnbG9iYWwuSlNPTjtcbnZhciBfc3RyaW5naWZ5ID0gJEpTT04gJiYgJEpTT04uc3RyaW5naWZ5O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIEhJRERFTiA9IHdrcygnX2hpZGRlbicpO1xudmFyIFRPX1BSSU1JVElWRSA9IHdrcygndG9QcmltaXRpdmUnKTtcbnZhciBpc0VudW0gPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBTeW1ib2xSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXJlZ2lzdHJ5Jyk7XG52YXIgQWxsU3ltYm9scyA9IHNoYXJlZCgnc3ltYm9scycpO1xudmFyIE9QU3ltYm9scyA9IHNoYXJlZCgnb3Atc3ltYm9scycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0W1BST1RPVFlQRV07XG52YXIgVVNFX05BVElWRSA9IHR5cGVvZiAkU3ltYm9sID09ICdmdW5jdGlvbic7XG52YXIgUU9iamVjdCA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRQKHRoaXMsICdhJywgeyB2YWx1ZTogNyB9KS5hOyB9XG4gIH0pKS5hICE9IDc7XG59KSA/IGZ1bmN0aW9uIChpdCwga2V5LCBEKSB7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZiAocHJvdG9EZXNjKSBkZWxldGUgT2JqZWN0UHJvdG9ba2V5XTtcbiAgZFAoaXQsIGtleSwgRCk7XG4gIGlmIChwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKSBkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpO1xufSA6IGRQO1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpIHtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90bykgJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTtcbiAgYW5PYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBhbk9iamVjdChEKTtcbiAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFELmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzKGl0LCBISURERU4pKSBkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7XG4gICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkgaXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7IGVudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpIH0pO1xuICAgIH0gcmV0dXJuIHNldFN5bWJvbERlc2MoaXQsIGtleSwgRCk7XG4gIH0gcmV0dXJuIGRQKGl0LCBrZXksIEQpO1xufTtcbnZhciAkZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoaXQsIFApIHtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpO1xuICB2YXIgaSA9IDA7XG4gIHZhciBsID0ga2V5cy5sZW5ndGg7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChsID4gaSkgJGRlZmluZVByb3BlcnR5KGl0LCBrZXkgPSBrZXlzW2krK10sIFBba2V5XSk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgJGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpdCwgUCkge1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkge1xuICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpO1xuICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgaXQgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBEID0gZ09QRChpdCwga2V5KTtcbiAgaWYgKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSkgRC5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgcmV0dXJuIEQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICB2YXIgbmFtZXMgPSBnT1BOKHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoIWhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiBrZXkgIT0gSElEREVOICYmIGtleSAhPSBNRVRBKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgdmFyIElTX09QID0gaXQgPT09IE9iamVjdFByb3RvO1xuICB2YXIgbmFtZXMgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmIChoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpIHJlc3VsdC5wdXNoKEFsbFN5bWJvbHNba2V5XSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIDE5LjQuMS4xIFN5bWJvbChbZGVzY3JpcHRpb25dKVxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgaWYgKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKSB0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTtcbiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvKSAkc2V0LmNhbGwoT1BTeW1ib2xzLCB2YWx1ZSk7XG4gICAgICBpZiAoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSkgdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTtcbiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG4gICAgfTtcbiAgICBpZiAoREVTQ1JJUFRPUlMgJiYgc2V0dGVyKSBzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXQgfSk7XG4gICAgcmV0dXJuIHdyYXAodGFnKTtcbiAgfTtcbiAgcmVkZWZpbmUoJFN5bWJvbFtQUk9UT1RZUEVdLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mID0gJGRlZmluZVByb3BlcnR5O1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJykuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5JykpIHtcbiAgICByZWRlZmluZShPYmplY3RQcm90bywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJHByb3BlcnR5SXNFbnVtZXJhYmxlLCB0cnVlKTtcbiAgfVxuXG4gIHdrc0V4dC5mID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFN5bWJvbDogJFN5bWJvbCB9KTtcblxuZm9yICh2YXIgZXM2U3ltYm9scyA9IChcbiAgLy8gMTkuNC4yLjIsIDE5LjQuMi4zLCAxOS40LjIuNCwgMTkuNC4yLjYsIDE5LjQuMi44LCAxOS40LjIuOSwgMTkuNC4yLjEwLCAxOS40LjIuMTEsIDE5LjQuMi4xMiwgMTkuNC4yLjEzLCAxOS40LjIuMTRcbiAgJ2hhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzJ1xuKS5zcGxpdCgnLCcpLCBqID0gMDsgZXM2U3ltYm9scy5sZW5ndGggPiBqOyl3a3MoZXM2U3ltYm9sc1tqKytdKTtcblxuZm9yICh2YXIgd2VsbEtub3duU3ltYm9scyA9ICRrZXlzKHdrcy5zdG9yZSksIGsgPSAwOyB3ZWxsS25vd25TeW1ib2xzLmxlbmd0aCA+IGs7KSB3a3NEZWZpbmUod2VsbEtub3duU3ltYm9sc1trKytdKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ1N5bWJvbCcsIHtcbiAgLy8gMTkuNC4yLjEgU3ltYm9sLmZvcihrZXkpXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgICBmb3IgKHZhciBrZXkgaW4gU3ltYm9sUmVnaXN0cnkpIGlmIChTeW1ib2xSZWdpc3RyeVtrZXldID09PSBzeW0pIHJldHVybiBrZXk7XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgUyA9ICRTeW1ib2woKTtcbiAgLy8gTVMgRWRnZSBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMge31cbiAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gIHJldHVybiBfc3RyaW5naWZ5KFtTXSkgIT0gJ1tudWxsXScgfHwgX3N0cmluZ2lmeSh7IGE6IFMgfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9Jztcbn0pKSwgJ0pTT04nLCB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7XG4gICAgdmFyIGFyZ3MgPSBbaXRdO1xuICAgIHZhciBpID0gMTtcbiAgICB2YXIgcmVwbGFjZXIsICRyZXBsYWNlcjtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgJHJlcGxhY2VyID0gcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmICghaXNPYmplY3QocmVwbGFjZXIpICYmIGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICBpZiAoIWlzQXJyYXkocmVwbGFjZXIpKSByZXBsYWNlciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mICRyZXBsYWNlciA9PSAnZnVuY3Rpb24nKSB2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYgKCFpc1N5bWJvbCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIGFyZ3NbMV0gPSByZXBsYWNlcjtcbiAgICByZXR1cm4gX3N0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJncyk7XG4gIH1cbn0pO1xuXG4vLyAxOS40LjMuNCBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdKGhpbnQpXG4kU3ltYm9sW1BST1RPVFlQRV1bVE9fUFJJTUlUSVZFXSB8fCByZXF1aXJlKCcuL19oaWRlJykoJFN5bWJvbFtQUk9UT1RZUEVdLCBUT19QUklNSVRJVkUsICRTeW1ib2xbUFJPVE9UWVBFXS52YWx1ZU9mKTtcbi8vIDE5LjQuMy41IFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKCRTeW1ib2wsICdTeW1ib2wnKTtcbi8vIDIwLjIuMS45IE1hdGhbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKE1hdGgsICdNYXRoJywgdHJ1ZSk7XG4vLyAyNC4zLjMgSlNPTltAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoZ2xvYmFsLkpTT04sICdKU09OJywgdHJ1ZSk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5zeW1ib2wnKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlN5bWJvbDtcbiIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2xcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChkb25lLCB2YWx1ZSkge1xuICByZXR1cm4geyB2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZSB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kXG4vLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIga2luZCA9IHRoaXMuX2s7XG4gIHZhciBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYgKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKSB7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIE9baW5kZXhdKTtcbiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pO1xufSwgJ3ZhbHVlcycpO1xuXG4vLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpXG5JdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcbiIsInJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciBUT19TVFJJTkdfVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbnZhciBET01JdGVyYWJsZXMgPSAoJ0NTU1J1bGVMaXN0LENTU1N0eWxlRGVjbGFyYXRpb24sQ1NTVmFsdWVMaXN0LENsaWVudFJlY3RMaXN0LERPTVJlY3RMaXN0LERPTVN0cmluZ0xpc3QsJyArXG4gICdET01Ub2tlbkxpc3QsRGF0YVRyYW5zZmVySXRlbUxpc3QsRmlsZUxpc3QsSFRNTEFsbENvbGxlY3Rpb24sSFRNTENvbGxlY3Rpb24sSFRNTEZvcm1FbGVtZW50LEhUTUxTZWxlY3RFbGVtZW50LCcgK1xuICAnTWVkaWFMaXN0LE1pbWVUeXBlQXJyYXksTmFtZWROb2RlTWFwLE5vZGVMaXN0LFBhaW50UmVxdWVzdExpc3QsUGx1Z2luLFBsdWdpbkFycmF5LFNWR0xlbmd0aExpc3QsU1ZHTnVtYmVyTGlzdCwnICtcbiAgJ1NWR1BhdGhTZWdMaXN0LFNWR1BvaW50TGlzdCxTVkdTdHJpbmdMaXN0LFNWR1RyYW5zZm9ybUxpc3QsU291cmNlQnVmZmVyTGlzdCxTdHlsZVNoZWV0TGlzdCxUZXh0VHJhY2tDdWVMaXN0LCcgK1xuICAnVGV4dFRyYWNrTGlzdCxUb3VjaExpc3QnKS5zcGxpdCgnLCcpO1xuXG5mb3IgKHZhciBpID0gMDsgaSA8IERPTUl0ZXJhYmxlcy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IERPTUl0ZXJhYmxlc1tpXTtcbiAgdmFyIENvbGxlY3Rpb24gPSBnbG9iYWxbTkFNRV07XG4gIHZhciBwcm90byA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGU7XG4gIGlmIChwcm90byAmJiAhcHJvdG9bVE9fU1RSSU5HX1RBR10pIGhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICBJdGVyYXRvcnNbTkFNRV0gPSBJdGVyYXRvcnMuQXJyYXk7XG59XG4iLCJ2YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbm1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgpIHtcbiAgaW5kZXggPSB0b0ludGVnZXIoaW5kZXgpO1xuICByZXR1cm4gaW5kZXggPCAwID8gbWF4KGluZGV4ICsgbGVuZ3RoLCAwKSA6IG1pbihpbmRleCwgbGVuZ3RoKTtcbn07XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIGtleXMgPSBnZXRLZXlzKFByb3BlcnRpZXMpO1xuICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgdmFyIFA7XG4gIHdoaWxlIChsZW5ndGggPiBpKSBkUC5mKE8sIFAgPSBrZXlzW2krK10sIFByb3BlcnRpZXNbUF0pO1xuICByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbi8vIHRydWUgIC0+IFN0cmluZyNhdFxuLy8gZmFsc2UgLT4gU3RyaW5nI2NvZGVQb2ludEF0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUT19TVFJJTkcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICh0aGF0LCBwb3MpIHtcbiAgICB2YXIgcyA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKTtcbiAgICB2YXIgaSA9IHRvSW50ZWdlcihwb3MpO1xuICAgIHZhciBsID0gcy5sZW5ndGg7XG4gICAgdmFyIGEsIGI7XG4gICAgaWYgKGkgPCAwIHx8IGkgPj0gbCkgcmV0dXJuIFRPX1NUUklORyA/ICcnIDogdW5kZWZpbmVkO1xuICAgIGEgPSBzLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGEgPCAweGQ4MDAgfHwgYSA+IDB4ZGJmZiB8fCBpICsgMSA9PT0gbCB8fCAoYiA9IHMuY2hhckNvZGVBdChpICsgMSkpIDwgMHhkYzAwIHx8IGIgPiAweGRmZmZcbiAgICAgID8gVE9fU1RSSU5HID8gcy5jaGFyQXQoaSkgOiBhXG4gICAgICA6IFRPX1NUUklORyA/IHMuc2xpY2UoaSwgaSArIDIpIDogKGEgLSAweGQ4MDAgPDwgMTApICsgKGIgLSAweGRjMDApICsgMHgxMDAwMDtcbiAgfTtcbn07XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL193a3MtZXh0JykuZignaXRlcmF0b3InKTtcbiIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF90eXBlb2YyID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgX3R5cGVvZjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90eXBlb2YyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHNlbGYsIGNhbGwpIHtcbiAgaWYgKCFzZWxmKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNhbGwgJiYgKCh0eXBlb2YgY2FsbCA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiAoMCwgX3R5cGVvZjMuZGVmYXVsdCkoY2FsbCkpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7XG59OyIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuNCAvIDE1LjIuMy42IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydHk6IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYgfSk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgJE9iamVjdCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2MpIHtcbiAgcmV0dXJuICRPYmplY3QuZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYyk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9kZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIik7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVmaW5lUHJvcGVydHkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgKDAsIF9kZWZpbmVQcm9wZXJ0eTIuZGVmYXVsdCkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2dldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mJyk7XG5cbnZhciBfZ2V0UHJvdG90eXBlT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJvdG90eXBlT2YpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjaycpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7XG5cbnZhciBfY3JlYXRlQ2xhc3MyID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzJyk7XG5cbnZhciBfY3JlYXRlQ2xhc3MzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTtcblxudmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJyk7XG5cbnZhciBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMik7XG5cbnZhciBfaW5oZXJpdHMyID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJyk7XG5cbnZhciBfaW5oZXJpdHMzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5oZXJpdHMyKTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX2dldE11aVRoZW1lID0gcmVxdWlyZSgnLi9nZXRNdWlUaGVtZScpO1xuXG52YXIgX2dldE11aVRoZW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldE11aVRoZW1lKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIE11aVRoZW1lUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAoMCwgX2luaGVyaXRzMy5kZWZhdWx0KShNdWlUaGVtZVByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNdWlUaGVtZVByb3ZpZGVyKCkge1xuICAgICgwLCBfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsIE11aVRoZW1lUHJvdmlkZXIpO1xuICAgIHJldHVybiAoMCwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4zLmRlZmF1bHQpKHRoaXMsIChNdWlUaGVtZVByb3ZpZGVyLl9fcHJvdG9fXyB8fCAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShNdWlUaGVtZVByb3ZpZGVyKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICAoMCwgX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShNdWlUaGVtZVByb3ZpZGVyLCBbe1xuICAgIGtleTogJ2dldENoaWxkQ29udGV4dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG11aVRoZW1lOiB0aGlzLnByb3BzLm11aVRoZW1lIHx8ICgwLCBfZ2V0TXVpVGhlbWUyLmRlZmF1bHQpKClcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBNdWlUaGVtZVByb3ZpZGVyO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuTXVpVGhlbWVQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgbXVpVGhlbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5NdWlUaGVtZVByb3ZpZGVyLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgY2hpbGRyZW46IF9wcm9wVHlwZXMyLmRlZmF1bHQuZWxlbWVudCxcbiAgbXVpVGhlbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0XG59IDoge307XG5leHBvcnRzLmRlZmF1bHQgPSBNdWlUaGVtZVByb3ZpZGVyOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNOb2RlKG9iamVjdCkge1xuICB2YXIgZG9jID0gb2JqZWN0ID8gb2JqZWN0Lm93bmVyRG9jdW1lbnQgfHwgb2JqZWN0IDogZG9jdW1lbnQ7XG4gIHZhciBkZWZhdWx0VmlldyA9IGRvYy5kZWZhdWx0VmlldyB8fCB3aW5kb3c7XG4gIHJldHVybiAhIShvYmplY3QgJiYgKHR5cGVvZiBkZWZhdWx0Vmlldy5Ob2RlID09PSAnZnVuY3Rpb24nID8gb2JqZWN0IGluc3RhbmNlb2YgZGVmYXVsdFZpZXcuTm9kZSA6IHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIHR5cGVvZiBvYmplY3Qubm9kZVR5cGUgPT09ICdudW1iZXInICYmIHR5cGVvZiBvYmplY3Qubm9kZU5hbWUgPT09ICdzdHJpbmcnKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNOb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL2lzTm9kZScpO1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIHRleHQgbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0Tm9kZShvYmplY3QpIHtcbiAgcmV0dXJuIGlzTm9kZShvYmplY3QpICYmIG9iamVjdC5ub2RlVHlwZSA9PSAzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzVGV4dE5vZGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbnZhciBpc1RleHROb2RlID0gcmVxdWlyZSgnLi9pc1RleHROb2RlJyk7XG5cbi8qZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIERPTSBub2RlIGNvbnRhaW5zIG9yIGlzIGFub3RoZXIgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZSkge1xuICBpZiAoIW91dGVyTm9kZSB8fCAhaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZSA9PT0gaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShvdXRlck5vZGUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUoaW5uZXJOb2RlKSkge1xuICAgIHJldHVybiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUucGFyZW50Tm9kZSk7XG4gIH0gZWxzZSBpZiAoJ2NvbnRhaW5zJyBpbiBvdXRlck5vZGUpIHtcbiAgICByZXR1cm4gb3V0ZXJOb2RlLmNvbnRhaW5zKGlubmVyTm9kZSk7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSB7XG4gICAgcmV0dXJuICEhKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihpbm5lck5vZGUpICYgMTYpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5zTm9kZTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gU2FtZVZhbHVlIGFsZ29yaXRobVxuICBpZiAoeCA9PT0geSkge1xuICAgIC8vIFN0ZXBzIDEtNSwgNy0xMFxuICAgIC8vIFN0ZXBzIDYuYi02LmU6ICswICE9IC0wXG4gICAgLy8gQWRkZWQgdGhlIG5vbnplcm8geSBjaGVjayB0byBtYWtlIEZsb3cgaGFwcHksIGJ1dCBpdCBpcyByZWR1bmRhbnRcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBlcXVhbGl0eSBieSBpdGVyYXRpbmcgdGhyb3VnaCBrZXlzIG9uIGFuIG9iamVjdCBhbmQgcmV0dXJuaW5nIGZhbHNlXG4gKiB3aGVuIGFueSBrZXkgaGFzIHZhbHVlcyB3aGljaCBhcmUgbm90IHN0cmljdGx5IGVxdWFsIGJldHdlZW4gdGhlIGFyZ3VtZW50cy5cbiAqIFJldHVybnMgdHJ1ZSB3aGVuIHRoZSB2YWx1ZXMgb2YgYWxsIGtleXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuICovXG5mdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gJ29iamVjdCcgfHwgb2JqQSA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgb2JqQiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNoYWxsb3dFcXVhbDsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmYi13d3cvdHlwZW9mLXVuZGVmaW5lZCAqL1xuXG4vKipcbiAqIFNhbWUgYXMgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBidXQgd3JhcHMgaW4gYSB0cnktY2F0Y2ggYmxvY2suIEluIElFIGl0IGlzXG4gKiBub3Qgc2FmZSB0byBjYWxsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgaWYgdGhlcmUgaXMgbm90aGluZyBmb2N1c2VkLlxuICpcbiAqIFRoZSBhY3RpdmVFbGVtZW50IHdpbGwgYmUgbnVsbCBvbmx5IGlmIHRoZSBkb2N1bWVudCBvciBkb2N1bWVudCBib2R5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKSAvKj9ET01FbGVtZW50Ki97XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcbiAgaWYgKHR5cGVvZiBkb2MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gZG9jLmFjdGl2ZUVsZW1lbnQgfHwgZG9jLmJvZHk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZG9jLmJvZHk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBY3RpdmVFbGVtZW50OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbi8qKlxuICogU2ltcGxlLCBsaWdodHdlaWdodCBtb2R1bGUgYXNzaXN0aW5nIHdpdGggdGhlIGRldGVjdGlvbiBhbmQgY29udGV4dCBvZlxuICogV29ya2VyLiBIZWxwcyBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMgYW5kIGFsbG93cyBjb2RlIHRvIHJlYXNvbiBhYm91dFxuICogd2hldGhlciBvciBub3QgdGhleSBhcmUgaW4gYSBXb3JrZXIsIGV2ZW4gaWYgdGhleSBuZXZlciBpbmNsdWRlIHRoZSBtYWluXG4gKiBgUmVhY3RXb3JrZXJgIGRlcGVuZGVuY3kuXG4gKi9cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuICBjYW5Vc2VET006IGNhblVzZURPTSxcblxuICBjYW5Vc2VXb3JrZXJzOiB0eXBlb2YgV29ya2VyICE9PSAndW5kZWZpbmVkJyxcblxuICBjYW5Vc2VFdmVudExpc3RlbmVyczogY2FuVXNlRE9NICYmICEhKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IHdpbmRvdy5hdHRhY2hFdmVudCksXG5cbiAgY2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW4sXG5cbiAgaXNJbldvcmtlcjogIWNhblVzZURPTSAvLyBGb3Igbm93LCB0aGlzIGlzIHRydWUgLSBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRpb25FbnZpcm9ubWVudDsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjMuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGJhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKSxBPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLEM9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIiksZWE9cmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIiksZmE9cmVxdWlyZShcImZianMvbGliL3NoYWxsb3dFcXVhbFwiKSxoYT1yZXF1aXJlKFwiZmJqcy9saWIvY29udGFpbnNOb2RlXCIpLGphPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtcbmZ1bmN0aW9uIEQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50XFx4M2RcIithLGQ9MDtkPGI7ZCsrKWMrPVwiXFx4MjZhcmdzW11cXHgzZFwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7Yj1FcnJvcihjK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7Yi5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiO2IuZnJhbWVzVG9Qb3A9MTt0aHJvdyBiO31iYT92b2lkIDA6RChcIjIyN1wiKTtcbmZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGgsZyxrKXt0aGlzLl9oYXNDYXVnaHRFcnJvcj0hMTt0aGlzLl9jYXVnaHRFcnJvcj1udWxsO3ZhciB2PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLHYpfWNhdGNoKGwpe3RoaXMuX2NhdWdodEVycm9yPWwsdGhpcy5faGFzQ2F1Z2h0RXJyb3I9ITB9fVxudmFyIEU9e19jYXVnaHRFcnJvcjpudWxsLF9oYXNDYXVnaHRFcnJvcjohMSxfcmV0aHJvd0Vycm9yOm51bGwsX2hhc1JldGhyb3dFcnJvcjohMSxpbnZva2VHdWFyZGVkQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsaCxnLGspe2thLmFwcGx5KEUsYXJndW1lbnRzKX0saW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGgsZyxrKXtFLmludm9rZUd1YXJkZWRDYWxsYmFjay5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoRS5oYXNDYXVnaHRFcnJvcigpKXt2YXIgdj1FLmNsZWFyQ2F1Z2h0RXJyb3IoKTtFLl9oYXNSZXRocm93RXJyb3J8fChFLl9oYXNSZXRocm93RXJyb3I9ITAsRS5fcmV0aHJvd0Vycm9yPXYpfX0scmV0aHJvd0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIG1hLmFwcGx5KEUsYXJndW1lbnRzKX0saGFzQ2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4gRS5faGFzQ2F1Z2h0RXJyb3J9LGNsZWFyQ2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtpZihFLl9oYXNDYXVnaHRFcnJvcil7dmFyIGE9XG5FLl9jYXVnaHRFcnJvcjtFLl9jYXVnaHRFcnJvcj1udWxsO0UuX2hhc0NhdWdodEVycm9yPSExO3JldHVybiBhfUQoXCIxOThcIil9fTtmdW5jdGlvbiBtYSgpe2lmKEUuX2hhc1JldGhyb3dFcnJvcil7dmFyIGE9RS5fcmV0aHJvd0Vycm9yO0UuX3JldGhyb3dFcnJvcj1udWxsO0UuX2hhc1JldGhyb3dFcnJvcj0hMTt0aHJvdyBhO319dmFyIG5hPW51bGwsb2E9e307XG5mdW5jdGlvbiBwYSgpe2lmKG5hKWZvcih2YXIgYSBpbiBvYSl7dmFyIGI9b2FbYV0sYz1uYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOkQoXCI5NlwiLGEpO2lmKCFxYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDpEKFwiOTdcIixhKTtxYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxoPWIsZz1kO3JhLmhhc093blByb3BlcnR5KGcpP0QoXCI5OVwiLGcpOnZvaWQgMDtyYVtnXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZzYShrW2VdLGgsZyk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oc2EoZi5yZWdpc3RyYXRpb25OYW1lLGgsZyksZT0hMCk6ZT0hMTtlP3ZvaWQgMDpEKFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gc2EoYSxiLGMpe3RhW2FdP0QoXCIxMDBcIixhKTp2b2lkIDA7dGFbYV09Yjt1YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBxYT1bXSxyYT17fSx0YT17fSx1YT17fTtmdW5jdGlvbiB2YShhKXtuYT9EKFwiMTAxXCIpOnZvaWQgMDtuYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtwYSgpfWZ1bmN0aW9uIHdhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO29hLmhhc093blByb3BlcnR5KGMpJiZvYVtjXT09PWR8fChvYVtjXT9EKFwiMTAyXCIsYyk6dm9pZCAwLG9hW2NdPWQsYj0hMCl9YiYmcGEoKX1cbnZhciB4YT1PYmplY3QuZnJlZXplKHtwbHVnaW5zOnFhLGV2ZW50TmFtZURpc3BhdGNoQ29uZmlnczpyYSxyZWdpc3RyYXRpb25OYW1lTW9kdWxlczp0YSxyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzOnVhLHBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXM6bnVsbCxpbmplY3RFdmVudFBsdWdpbk9yZGVyOnZhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTp3YX0pLENhPW51bGwsRGE9bnVsbCxFYT1udWxsO2Z1bmN0aW9uIEZhKGEsYixjLGQpe2I9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9RWEoZCk7RS5pbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IoYixjLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIEdhKGEsYil7bnVsbD09Yj9EKFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBIYShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgSWE9bnVsbDtcbmZ1bmN0aW9uIEphKGEsYil7aWYoYSl7dmFyIGM9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsZD1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGMpKWZvcih2YXIgZT0wO2U8Yy5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZSsrKUZhKGEsYixjW2VdLGRbZV0pO2Vsc2UgYyYmRmEoYSxiLGMsZCk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIEphKGEsITApfWZ1bmN0aW9uIExhKGEpe3JldHVybiBKYShhLCExKX12YXIgTWE9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6dmEsaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOndhfTtcbmZ1bmN0aW9uIE5hKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9Q2EoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/RChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIE9hKGEsYil7bnVsbCE9PWEmJihJYT1HYShJYSxhKSk7YT1JYTtJYT1udWxsO2EmJihiP0hhKGEsS2EpOkhhKGEsTGEpLElhP0QoXCI5NVwiKTp2b2lkIDAsRS5yZXRocm93Q2F1Z2h0RXJyb3IoKSl9ZnVuY3Rpb24gUGEoYSxiLGMsZCl7Zm9yKHZhciBlPW51bGwsZj0wO2Y8cWEubGVuZ3RoO2YrKyl7dmFyIGg9cWFbZl07aCYmKGg9aC5leHRyYWN0RXZlbnRzKGEsYixjLGQpKSYmKGU9R2EoZSxoKSl9T2EoZSwhMSl9dmFyIFFhPU9iamVjdC5mcmVlemUoe2luamVjdGlvbjpNYSxnZXRMaXN0ZW5lcjpOYSxydW5FdmVudHNJbkJhdGNoOk9hLHJ1bkV4dHJhY3RlZEV2ZW50c0luQmF0Y2g6UGF9KSxSYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxGPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrUmEsU2E9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitSYTtcbmZ1bmN0aW9uIFRhKGEpe2lmKGFbRl0pcmV0dXJuIGFbRl07Zm9yKDshYVtGXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gVWEoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO0QoXCIzM1wiKX1mdW5jdGlvbiBWYShhKXtyZXR1cm4gYVtTYV18fG51bGx9dmFyIFhhPU9iamVjdC5mcmVlemUoe3ByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltGXT1hfSxnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpUYSxnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe2E9YVtGXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfSxnZXROb2RlRnJvbUluc3RhbmNlOlVhLGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6VmEsdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2FbU2FdPWJ9fSk7XG5mdW5jdGlvbiBMKGEpe2RvIGE9YVtcInJldHVyblwiXTt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBiYihhLGIsYyl7Zm9yKHZhciBkPVtdO2E7KWQucHVzaChhKSxhPUwoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9ZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGI9TmEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1HYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1HYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBkYihhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzJiZiYihhLl90YXJnZXRJbnN0LGNiLGEpfVxuZnVuY3Rpb24gZWIoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/TChiKTpudWxsO2JiKGIsY2IsYSl9fWZ1bmN0aW9uIGZiKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPU5hKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1HYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1HYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gZ2IoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZmYihhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gaGIoYSl7SGEoYSxkYil9XG5mdW5jdGlvbiBpYihhLGIsYyxkKXtpZihjJiZkKWE6e3ZhciBlPWM7Zm9yKHZhciBmPWQsaD0wLGc9ZTtnO2c9TChnKSloKys7Zz0wO2Zvcih2YXIgaz1mO2s7az1MKGspKWcrKztmb3IoOzA8aC1nOyllPUwoZSksaC0tO2Zvcig7MDxnLWg7KWY9TChmKSxnLS07Zm9yKDtoLS07KXtpZihlPT09Znx8ZT09PWYuYWx0ZXJuYXRlKWJyZWFrIGE7ZT1MKGUpO2Y9TChmKX1lPW51bGx9ZWxzZSBlPW51bGw7Zj1lO2ZvcihlPVtdO2MmJmMhPT1mOyl7aD1jLmFsdGVybmF0ZTtpZihudWxsIT09aCYmaD09PWYpYnJlYWs7ZS5wdXNoKGMpO2M9TChjKX1mb3IoYz1bXTtkJiZkIT09Zjspe2g9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWgmJmg9PT1mKWJyZWFrO2MucHVzaChkKTtkPUwoZCl9Zm9yKGQ9MDtkPGUubGVuZ3RoO2QrKylmYihlW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihhPWMubGVuZ3RoOzA8YS0tOylmYihjW2FdLFwiY2FwdHVyZWRcIixiKX1cbnZhciBqYj1PYmplY3QuZnJlZXplKHthY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzOmhiLGFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0OmZ1bmN0aW9uKGEpe0hhKGEsZWIpfSxhY2N1bXVsYXRlRW50ZXJMZWF2ZURpc3BhdGNoZXM6aWIsYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXM6ZnVuY3Rpb24oYSl7SGEoYSxnYil9fSksa2I9bnVsbDtmdW5jdGlvbiBsYigpeyFrYiYmbS5jYW5Vc2VET00mJihrYj1cInRleHRDb250ZW50XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ/XCJ0ZXh0Q29udGVudFwiOlwiaW5uZXJUZXh0XCIpO3JldHVybiBrYn12YXIgTT17X3Jvb3Q6bnVsbCxfc3RhcnRUZXh0Om51bGwsX2ZhbGxiYWNrVGV4dDpudWxsfTtcbmZ1bmN0aW9uIG1iKCl7aWYoTS5fZmFsbGJhY2tUZXh0KXJldHVybiBNLl9mYWxsYmFja1RleHQ7dmFyIGEsYj1NLl9zdGFydFRleHQsYz1iLmxlbmd0aCxkLGU9bmIoKSxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBoPWMtYTtmb3IoZD0xO2Q8PWgmJmJbYy1kXT09PWVbZi1kXTtkKyspO00uX2ZhbGxiYWNrVGV4dD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApO3JldHVybiBNLl9mYWxsYmFja1RleHR9ZnVuY3Rpb24gbmIoKXtyZXR1cm5cInZhbHVlXCJpbiBNLl9yb290P00uX3Jvb3QudmFsdWU6TS5fcm9vdFtsYigpXX1cbnZhciBvYj1cImRpc3BhdGNoQ29uZmlnIF90YXJnZXRJbnN0IG5hdGl2ZUV2ZW50IGlzRGVmYXVsdFByZXZlbnRlZCBpc1Byb3BhZ2F0aW9uU3RvcHBlZCBfZGlzcGF0Y2hMaXN0ZW5lcnMgX2Rpc3BhdGNoSW5zdGFuY2VzXCIuc3BsaXQoXCIgXCIpLHBiPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpDLnRoYXRSZXR1cm5zTnVsbCxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuZnVuY3Rpb24gTihhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/Qy50aGF0UmV0dXJuc1RydWU6Qy50aGF0UmV0dXJuc0ZhbHNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Qy50aGF0UmV0dXJuc0ZhbHNlO3JldHVybiB0aGlzfVxuQShOLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPUMudGhhdFJldHVybnNUcnVlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPUMudGhhdFJldHVybnNUcnVlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PUMudGhhdFJldHVybnNUcnVlfSxpc1BlcnNpc3RlbnQ6Qy50aGF0UmV0dXJuc0ZhbHNlLFxuZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLGI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7Zm9yKGE9MDthPG9iLmxlbmd0aDthKyspdGhpc1tvYlthXV09bnVsbH19KTtOLkludGVyZmFjZT1wYjtOLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtBKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1BKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO3FiKGMpO3JldHVybiBjfTtxYihOKTtcbmZ1bmN0aW9uIHJiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIHNiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDpEKFwiMjIzXCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBxYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1yYjthLnJlbGVhc2U9c2J9dmFyIHRiPU4uZXh0ZW5kKHtkYXRhOm51bGx9KSx1Yj1OLmV4dGVuZCh7ZGF0YTpudWxsfSksdmI9WzksMTMsMjcsMzJdLHdiPW0uY2FuVXNlRE9NJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyx4Yj1udWxsO20uY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJih4Yj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHliPW0uY2FuVXNlRE9NJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYheGIsemI9bS5jYW5Vc2VET00mJighd2J8fHhiJiY4PHhiJiYxMT49eGIpLEFiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLEJiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1widG9wQ29tcG9zaXRpb25FbmRcIixcInRvcEtleVByZXNzXCIsXCJ0b3BUZXh0SW5wdXRcIixcInRvcFBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uRW5kIHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25TdGFydCB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvblVwZGF0ZSB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX19LEtiPSExO1xuZnVuY3Rpb24gTGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcInRvcEtleVVwXCI6cmV0dXJuLTEhPT12Yi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcInRvcEtleURvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmNhc2UgXCJ0b3BNb3VzZURvd25cIjpjYXNlIFwidG9wQmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIE1iKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIE5iPSExO2Z1bmN0aW9uIE9iKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOnJldHVybiBNYihiKTtjYXNlIFwidG9wS2V5UHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7S2I9ITA7cmV0dXJuIEFiO2Nhc2UgXCJ0b3BUZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUFiJiZLYj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBQYihhLGIpe2lmKE5iKXJldHVyblwidG9wQ29tcG9zaXRpb25FbmRcIj09PWF8fCF3YiYmTGIoYSxiKT8oYT1tYigpLE0uX3Jvb3Q9bnVsbCxNLl9zdGFydFRleHQ9bnVsbCxNLl9mYWxsYmFja1RleHQ9bnVsbCxOYj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwidG9wUGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwidG9wS2V5UHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpyZXR1cm4gemI/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgUWI9e2V2ZW50VHlwZXM6QmIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHdiKWI6e3N3aXRjaChhKXtjYXNlIFwidG9wQ29tcG9zaXRpb25TdGFydFwiOmU9QmIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOmU9QmIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwidG9wQ29tcG9zaXRpb25VcGRhdGVcIjplPUJiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSBOYj9MYihhLGMpJiYoZT1CYi5jb21wb3NpdGlvbkVuZCk6XCJ0b3BLZXlEb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPUJiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHpiJiYoTmJ8fGUhPT1CYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1CYi5jb21wb3NpdGlvbkVuZCYmTmImJihmPW1iKCkpOihNLl9yb290PWQsTS5fc3RhcnRUZXh0PW5iKCksTmI9ITApKSxlPXRiLmdldFBvb2xlZChlLFxuYixjLGQpLGY/ZS5kYXRhPWY6KGY9TWIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLGhiKGUpLGY9ZSk6Zj1udWxsOyhhPXliP09iKGEsYyk6UGIoYSxjKSk/KGI9dWIuZ2V0UG9vbGVkKEJiLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxoYihiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxSYj1udWxsLFNiPW51bGwsVGI9bnVsbDtmdW5jdGlvbiBVYihhKXtpZihhPURhKGEpKXtSYiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFJiLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dm9pZCAwOkQoXCIxOTRcIik7dmFyIGI9Q2EoYS5zdGF0ZU5vZGUpO1JiLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX12YXIgVmI9e2luamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQ6ZnVuY3Rpb24oYSl7UmI9YX19O2Z1bmN0aW9uIFdiKGEpe1NiP1RiP1RiLnB1c2goYSk6VGI9W2FdOlNiPWF9XG5mdW5jdGlvbiBYYigpe3JldHVybiBudWxsIT09U2J8fG51bGwhPT1UYn1mdW5jdGlvbiBZYigpe2lmKFNiKXt2YXIgYT1TYixiPVRiO1RiPVNiPW51bGw7VWIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKVViKGJbYV0pfX12YXIgWmI9T2JqZWN0LmZyZWV6ZSh7aW5qZWN0aW9uOlZiLGVucXVldWVTdGF0ZVJlc3RvcmU6V2IsbmVlZHNTdGF0ZVJlc3RvcmU6WGIscmVzdG9yZVN0YXRlSWZOZWVkZWQ6WWJ9KTtmdW5jdGlvbiAkYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIGFjKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIGJjKCl7fXZhciBjYz0hMTtmdW5jdGlvbiBkYyhhLGIpe2lmKGNjKXJldHVybiBhKGIpO2NjPSEwO3RyeXtyZXR1cm4gJGIoYSxiKX1maW5hbGx5e2NjPSExLFhiKCkmJihiYygpLFliKCkpfX1cbnZhciBlYz17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBmYyhhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWVjW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBnYyhhKXthPWEudGFyZ2V0fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfVxuZnVuY3Rpb24gaGMoYSxiKXtpZighbS5jYW5Vc2VET018fGImJiEoXCJhZGRFdmVudExpc3RlbmVyXCJpbiBkb2N1bWVudCkpcmV0dXJuITE7YT1cIm9uXCIrYTtiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBpYyhhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gamMoYSl7dmFyIGI9aWMoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYy5nZXQuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2Muc2V0LmNhbGwodGhpcyxhKX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pLHtnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPW51bGw7ZGVsZXRlIGFbYl19fX1cbmZ1bmN0aW9uIGtjKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1qYyhhKSl9ZnVuY3Rpb24gbGMoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPWljKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgbWM9YmEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXIsTz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0sbmM9Tz9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLG9jPU8/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY2FsbFwiKTo2MDEwNCxwYz1PP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnJldHVyblwiKTo2MDEwNSxxYz1PP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyYz1PP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHNjPU8/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdGM9Tz9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx1Yz1PP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsdmM9Tz9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLFxud2M9Tz9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix4Yz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24geWMoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXhjJiZhW3hjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHpjKGEpe2E9YS50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWU7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHJjOnJldHVyblwiUmVhY3RGcmFnbWVudFwiO2Nhc2UgcWM6cmV0dXJuXCJSZWFjdFBvcnRhbFwiO2Nhc2Ugb2M6cmV0dXJuXCJSZWFjdENhbGxcIjtjYXNlIHBjOnJldHVyblwiUmVhY3RSZXR1cm5cIn1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIEFjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDE6Y2FzZSAyOmNhc2UgNTp2YXIgYz1hLl9kZWJ1Z093bmVyLGQ9YS5fZGVidWdTb3VyY2U7dmFyIGU9emMoYSk7dmFyIGY9bnVsbDtjJiYoZj16YyhjKSk7Yz1kO2U9XCJcXG4gICAgaW4gXCIrKGV8fFwiVW5rbm93blwiKSsoYz9cIiAoYXQgXCIrYy5maWxlTmFtZS5yZXBsYWNlKC9eLipbXFxcXFxcL10vLFwiXCIpK1wiOlwiK2MubGluZU51bWJlcitcIilcIjpmP1wiIChjcmVhdGVkIGJ5IFwiK2YrXCIpXCI6XCJcIik7YnJlYWsgYTtkZWZhdWx0OmU9XCJcIn1iKz1lO2E9YVtcInJldHVyblwiXX13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBCYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sQ2M9e30sRGM9e307ZnVuY3Rpb24gRWMoYSl7aWYoRGMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITA7aWYoQ2MuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITE7aWYoQmMudGVzdChhKSlyZXR1cm4gRGNbYV09ITA7Q2NbYV09ITA7cmV0dXJuITF9XG5mdW5jdGlvbiBGYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBHYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxGYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1cbmZ1bmN0aW9uIFUoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBWPXt9O1wiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7VlthXT1uZXcgVShhLDAsITEsYSxudWxsKX0pO1xuW1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO1ZbYl09bmV3IFUoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtWW2FdPW5ldyBVKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe1ZbYV09bmV3IFUoYSwyLCExLGEsbnVsbCl9KTtcblwiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7VlthXT1uZXcgVShhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe1ZbYV09bmV3IFUoYSwzLCEwLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7VlthXT1uZXcgVShhLDQsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7VlthXT1uZXcgVShhLDYsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtWW2FdPW5ldyBVKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgSGM9L1tcXC1cXDpdKFthLXpdKS9nO2Z1bmN0aW9uIFNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEhjLFxuU2MpO1ZbYl09bmV3IFUoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEhjLFNjKTtWW2JdPW5ldyBVKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEhjLFNjKTtWW2JdPW5ldyBVKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Vi50YWJJbmRleD1uZXcgVShcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiBUYyhhLGIsYyxkKXt2YXIgZT1WLmhhc093blByb3BlcnR5KGIpP1ZbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChHYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/RWMoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBBKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBWYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1XYyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIFhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmVGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIFljKGEsYil7WGMoYSxiKTt2YXIgYz1XYyhiLnZhbHVlKTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP1pjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJlpjKGEsYi50eXBlLFdjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gJGMoYSxiKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpXCJcIj09PWEudmFsdWUmJihhLnZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSksYS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2I9YS5uYW1lO1wiXCIhPT1iJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDtcIlwiIT09YiYmKGEubmFtZT1iKX1mdW5jdGlvbiBaYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9XG5mdW5jdGlvbiBXYyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19dmFyIGFkPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENoYW5nZSB0b3BDbGljayB0b3BGb2N1cyB0b3BJbnB1dCB0b3BLZXlEb3duIHRvcEtleVVwIHRvcFNlbGVjdGlvbkNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIGJkKGEsYixjKXthPU4uZ2V0UG9vbGVkKGFkLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7V2IoYyk7aGIoYSk7cmV0dXJuIGF9dmFyIGNkPW51bGwsZGQ9bnVsbDtmdW5jdGlvbiBlZChhKXtPYShhLCExKX1cbmZ1bmN0aW9uIGZkKGEpe3ZhciBiPVVhKGEpO2lmKGxjKGIpKXJldHVybiBhfWZ1bmN0aW9uIGdkKGEsYil7aWYoXCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIGhkPSExO20uY2FuVXNlRE9NJiYoaGQ9aGMoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gaWQoKXtjZCYmKGNkLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLGpkKSxkZD1jZD1udWxsKX1mdW5jdGlvbiBqZChhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmZmQoZGQpJiYoYT1iZChkZCxhLGdjKGEpKSxkYyhlZCxhKSl9ZnVuY3Rpb24ga2QoYSxiLGMpe1widG9wRm9jdXNcIj09PWE/KGlkKCksY2Q9YixkZD1jLGNkLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLGpkKSk6XCJ0b3BCbHVyXCI9PT1hJiZpZCgpfVxuZnVuY3Rpb24gbGQoYSl7aWYoXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIj09PWF8fFwidG9wS2V5VXBcIj09PWF8fFwidG9wS2V5RG93blwiPT09YSlyZXR1cm4gZmQoZGQpfWZ1bmN0aW9uIG1kKGEsYil7aWYoXCJ0b3BDbGlja1wiPT09YSlyZXR1cm4gZmQoYil9ZnVuY3Rpb24gbmQoYSxiKXtpZihcInRvcElucHV0XCI9PT1hfHxcInRvcENoYW5nZVwiPT09YSlyZXR1cm4gZmQoYil9XG52YXIgb2Q9e2V2ZW50VHlwZXM6YWQsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpoZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/VWEoYik6d2luZG93LGY9dm9pZCAwLGg9dm9pZCAwLGc9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1nfHxcImlucHV0XCI9PT1nJiZcImZpbGVcIj09PWUudHlwZT9mPWdkOmZjKGUpP2hkP2Y9bmQ6KGY9bGQsaD1rZCk6KGc9ZS5ub2RlTmFtZSwhZ3x8XCJpbnB1dFwiIT09Zy50b0xvd2VyQ2FzZSgpfHxcImNoZWNrYm94XCIhPT1lLnR5cGUmJlwicmFkaW9cIiE9PWUudHlwZXx8KGY9bWQpKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBiZChmLGMsZCk7aCYmaChhLGUsYik7XCJ0b3BCbHVyXCI9PT1hJiZudWxsIT1iJiYoYT1iLl93cmFwcGVyU3RhdGV8fGUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmWmMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0scGQ9Ti5leHRlbmQoe3ZpZXc6bnVsbCxcbmRldGFpbDpudWxsfSkscWQ9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIHJkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9cWRbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBzZCgpe3JldHVybiByZH1cbnZhciB0ZD1wZC5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6c2QsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9fSksdWQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJ0b3BNb3VzZU91dFwiLFwidG9wTW91c2VPdmVyXCJdfX0sdmQ9e2V2ZW50VHlwZXM6dWQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLFxuYixjLGQpe2lmKFwidG9wTW91c2VPdmVyXCI9PT1hJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8XCJ0b3BNb3VzZU91dFwiIT09YSYmXCJ0b3BNb3VzZU92ZXJcIiE9PWEpcmV0dXJuIG51bGw7dmFyIGU9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7XCJ0b3BNb3VzZU91dFwiPT09YT8oYT1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/VGEoYik6bnVsbCk6YT1udWxsO2lmKGE9PT1iKXJldHVybiBudWxsO3ZhciBmPW51bGw9PWE/ZTpVYShhKTtlPW51bGw9PWI/ZTpVYShiKTt2YXIgaD10ZC5nZXRQb29sZWQodWQubW91c2VMZWF2ZSxhLGMsZCk7aC50eXBlPVwibW91c2VsZWF2ZVwiO2gudGFyZ2V0PWY7aC5yZWxhdGVkVGFyZ2V0PWU7Yz10ZC5nZXRQb29sZWQodWQubW91c2VFbnRlcixiLGMsZCk7Yy50eXBlPVwibW91c2VlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PVxuZjtpYihoLGMsYSxiKTtyZXR1cm5baCxjXX19O2Z1bmN0aW9uIHdkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiW1wicmV0dXJuXCJdOyliPWJbXCJyZXR1cm5cIl07ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7YltcInJldHVyblwiXTspaWYoYj1iW1wicmV0dXJuXCJdLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24geGQoYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09d2QoYSk6ITF9ZnVuY3Rpb24geWQoYSl7MiE9PXdkKGEpP0QoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gemQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9d2QoYSksMz09PWI/RChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jW1wicmV0dXJuXCJdLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXJldHVybiB5ZChlKSxhO2lmKGg9PT1kKXJldHVybiB5ZChlKSxiO2g9aC5zaWJsaW5nfUQoXCIxODhcIil9aWYoY1tcInJldHVyblwiXSE9PWRbXCJyZXR1cm5cIl0pYz1lLGQ9ZjtlbHNle2g9ITE7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXtoPSEwO2M9ZTtkPWY7YnJlYWt9aWYoZz09PWQpe2g9ITA7ZD1lO2M9ZjticmVha31nPWcuc2libGluZ31pZighaCl7Zm9yKGc9Zi5jaGlsZDtnOyl7aWYoZz09PWMpe2g9ITA7Yz1mO2Q9ZTticmVha31pZihnPT09ZCl7aD0hMDtkPWY7Yz1lO2JyZWFrfWc9Zy5zaWJsaW5nfWg/XG52b2lkIDA6RChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP0QoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz9EKFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIEFkKGEpe2E9emQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBCZChhKXthPXpkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQmJjQhPT1iLnRhZyliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9dmFyIENkPU4uZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxEZD1OLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEVkPXBkLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBGZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBHZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sSGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LElkPXBkLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1HZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1GZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/SGRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOnNkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP0ZkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP0ZkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksSmQ9dGQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLEtkPXBkLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOnNkfSksTGQ9Ti5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksTWQ9dGQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSxOZD17fSxPZD17fTtmdW5jdGlvbiBQZChhLGIpe3ZhciBjPWFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpLGQ9XCJvblwiK2M7Yz1cInRvcFwiK2M7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07TmRbYV09YjtPZFtjXT1ifVxuXCJibHVyIGNhbmNlbCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkb3VibGVDbGljayBkcmFnRW5kIGRyYWdTdGFydCBkcm9wIGZvY3VzIGlucHV0IGludmFsaWQga2V5RG93biBrZXlQcmVzcyBrZXlVcCBtb3VzZURvd24gbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHJhdGVDaGFuZ2UgcmVzZXQgc2Vla2VkIHN1Ym1pdCB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaFN0YXJ0IHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe1BkKGEsITApfSk7XG5cImFib3J0IGFuaW1hdGlvbkVuZCBhbmltYXRpb25JdGVyYXRpb24gYW5pbWF0aW9uU3RhcnQgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBkcmFnIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBtb3VzZU1vdmUgbW91c2VPdXQgbW91c2VPdmVyIHBsYXlpbmcgcHJvZ3Jlc3Mgc2Nyb2xsIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWVVcGRhdGUgdG9nZ2xlIHRvdWNoTW92ZSB0cmFuc2l0aW9uRW5kIHdhaXRpbmcgd2hlZWxcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtQZChhLCExKX0pO1xudmFyIFFkPXtldmVudFR5cGVzOk5kLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPU9kW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1PZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoMD09PUZkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJ0b3BLZXlEb3duXCI6Y2FzZSBcInRvcEtleVVwXCI6YT1JZDticmVhaztjYXNlIFwidG9wQmx1clwiOmNhc2UgXCJ0b3BGb2N1c1wiOmE9RWQ7YnJlYWs7Y2FzZSBcInRvcENsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJ0b3BEb3VibGVDbGlja1wiOmNhc2UgXCJ0b3BNb3VzZURvd25cIjpjYXNlIFwidG9wTW91c2VNb3ZlXCI6Y2FzZSBcInRvcE1vdXNlVXBcIjpjYXNlIFwidG9wTW91c2VPdXRcIjpjYXNlIFwidG9wTW91c2VPdmVyXCI6Y2FzZSBcInRvcENvbnRleHRNZW51XCI6YT1cbnRkO2JyZWFrO2Nhc2UgXCJ0b3BEcmFnXCI6Y2FzZSBcInRvcERyYWdFbmRcIjpjYXNlIFwidG9wRHJhZ0VudGVyXCI6Y2FzZSBcInRvcERyYWdFeGl0XCI6Y2FzZSBcInRvcERyYWdMZWF2ZVwiOmNhc2UgXCJ0b3BEcmFnT3ZlclwiOmNhc2UgXCJ0b3BEcmFnU3RhcnRcIjpjYXNlIFwidG9wRHJvcFwiOmE9SmQ7YnJlYWs7Y2FzZSBcInRvcFRvdWNoQ2FuY2VsXCI6Y2FzZSBcInRvcFRvdWNoRW5kXCI6Y2FzZSBcInRvcFRvdWNoTW92ZVwiOmNhc2UgXCJ0b3BUb3VjaFN0YXJ0XCI6YT1LZDticmVhaztjYXNlIFwidG9wQW5pbWF0aW9uRW5kXCI6Y2FzZSBcInRvcEFuaW1hdGlvbkl0ZXJhdGlvblwiOmNhc2UgXCJ0b3BBbmltYXRpb25TdGFydFwiOmE9Q2Q7YnJlYWs7Y2FzZSBcInRvcFRyYW5zaXRpb25FbmRcIjphPUxkO2JyZWFrO2Nhc2UgXCJ0b3BTY3JvbGxcIjphPXBkO2JyZWFrO2Nhc2UgXCJ0b3BXaGVlbFwiOmE9TWQ7YnJlYWs7Y2FzZSBcInRvcENvcHlcIjpjYXNlIFwidG9wQ3V0XCI6Y2FzZSBcInRvcFBhc3RlXCI6YT1EZDticmVhaztkZWZhdWx0OmE9XG5OfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7aGIoYik7cmV0dXJuIGJ9fSxSZD1RZC5pc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUsU2Q9W107ZnVuY3Rpb24gVGQoYSl7dmFyIGI9YS50YXJnZXRJbnN0O2Rve2lmKCFiKXthLmFuY2VzdG9ycy5wdXNoKGIpO2JyZWFrfXZhciBjO2ZvcihjPWI7Y1tcInJldHVyblwiXTspYz1jW1wicmV0dXJuXCJdO2M9MyE9PWMudGFnP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9VGEoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSxQYShhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsZ2MoYS5uYXRpdmVFdmVudCkpfXZhciBVZD0hMDtmdW5jdGlvbiBWZChhKXtVZD0hIWF9XG5mdW5jdGlvbiBXKGEsYixjKXtpZighYylyZXR1cm4gbnVsbDthPShSZChhKT9XZDpYZCkuYmluZChudWxsLGEpO2MuYWRkRXZlbnRMaXN0ZW5lcihiLGEsITEpfWZ1bmN0aW9uIFlkKGEsYixjKXtpZighYylyZXR1cm4gbnVsbDthPShSZChhKT9XZDpYZCkuYmluZChudWxsLGEpO2MuYWRkRXZlbnRMaXN0ZW5lcihiLGEsITApfWZ1bmN0aW9uIFdkKGEsYil7YWMoWGQsYSxiKX1cbmZ1bmN0aW9uIFhkKGEsYil7aWYoVWQpe3ZhciBjPWdjKGIpO2M9VGEoYyk7bnVsbCE9PWMmJlwibnVtYmVyXCI9PT10eXBlb2YgYy50YWcmJjIhPT13ZChjKSYmKGM9bnVsbCk7aWYoU2QubGVuZ3RoKXt2YXIgZD1TZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtkYyhUZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPlNkLmxlbmd0aCYmU2QucHVzaChhKX19fVxudmFyIFpkPU9iamVjdC5mcmVlemUoe2dldCBfZW5hYmxlZCgpe3JldHVybiBVZH0sc2V0RW5hYmxlZDpWZCxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gVWR9LHRyYXBCdWJibGVkRXZlbnQ6Vyx0cmFwQ2FwdHVyZWRFdmVudDpZZCxkaXNwYXRjaEV2ZW50OlhkfSk7ZnVuY3Rpb24gJGQoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtjW1wibXNcIithXT1cIk1TXCIrYjtjW1wiT1wiK2FdPVwib1wiK2IudG9Mb3dlckNhc2UoKTtyZXR1cm4gY31cbnZhciBhZT17YW5pbWF0aW9uZW5kOiRkKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOiRkKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6JGQoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6JGQoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxiZT17fSxjZT17fTttLmNhblVzZURPTSYmKGNlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIGFlLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIGFlLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIGFlLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIGFlLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7XG5mdW5jdGlvbiBkZShhKXtpZihiZVthXSlyZXR1cm4gYmVbYV07aWYoIWFlW2FdKXJldHVybiBhO3ZhciBiPWFlW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIGNlKXJldHVybiBiZVthXT1iW2NdO3JldHVybiBhfVxudmFyIGVlPXt0b3BBbmltYXRpb25FbmQ6ZGUoXCJhbmltYXRpb25lbmRcIiksdG9wQW5pbWF0aW9uSXRlcmF0aW9uOmRlKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLHRvcEFuaW1hdGlvblN0YXJ0OmRlKFwiYW5pbWF0aW9uc3RhcnRcIiksdG9wQmx1cjpcImJsdXJcIix0b3BDYW5jZWw6XCJjYW5jZWxcIix0b3BDaGFuZ2U6XCJjaGFuZ2VcIix0b3BDbGljazpcImNsaWNrXCIsdG9wQ2xvc2U6XCJjbG9zZVwiLHRvcENvbXBvc2l0aW9uRW5kOlwiY29tcG9zaXRpb25lbmRcIix0b3BDb21wb3NpdGlvblN0YXJ0OlwiY29tcG9zaXRpb25zdGFydFwiLHRvcENvbXBvc2l0aW9uVXBkYXRlOlwiY29tcG9zaXRpb251cGRhdGVcIix0b3BDb250ZXh0TWVudTpcImNvbnRleHRtZW51XCIsdG9wQ29weTpcImNvcHlcIix0b3BDdXQ6XCJjdXRcIix0b3BEb3VibGVDbGljazpcImRibGNsaWNrXCIsdG9wRHJhZzpcImRyYWdcIix0b3BEcmFnRW5kOlwiZHJhZ2VuZFwiLHRvcERyYWdFbnRlcjpcImRyYWdlbnRlclwiLHRvcERyYWdFeGl0OlwiZHJhZ2V4aXRcIix0b3BEcmFnTGVhdmU6XCJkcmFnbGVhdmVcIixcbnRvcERyYWdPdmVyOlwiZHJhZ292ZXJcIix0b3BEcmFnU3RhcnQ6XCJkcmFnc3RhcnRcIix0b3BEcm9wOlwiZHJvcFwiLHRvcEZvY3VzOlwiZm9jdXNcIix0b3BJbnB1dDpcImlucHV0XCIsdG9wS2V5RG93bjpcImtleWRvd25cIix0b3BLZXlQcmVzczpcImtleXByZXNzXCIsdG9wS2V5VXA6XCJrZXl1cFwiLHRvcExvYWQ6XCJsb2FkXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsdG9wTW91c2VEb3duOlwibW91c2Vkb3duXCIsdG9wTW91c2VNb3ZlOlwibW91c2Vtb3ZlXCIsdG9wTW91c2VPdXQ6XCJtb3VzZW91dFwiLHRvcE1vdXNlT3ZlcjpcIm1vdXNlb3ZlclwiLHRvcE1vdXNlVXA6XCJtb3VzZXVwXCIsdG9wUGFzdGU6XCJwYXN0ZVwiLHRvcFNjcm9sbDpcInNjcm9sbFwiLHRvcFNlbGVjdGlvbkNoYW5nZTpcInNlbGVjdGlvbmNoYW5nZVwiLHRvcFRleHRJbnB1dDpcInRleHRJbnB1dFwiLHRvcFRvZ2dsZTpcInRvZ2dsZVwiLHRvcFRvdWNoQ2FuY2VsOlwidG91Y2hjYW5jZWxcIix0b3BUb3VjaEVuZDpcInRvdWNoZW5kXCIsdG9wVG91Y2hNb3ZlOlwidG91Y2htb3ZlXCIsXG50b3BUb3VjaFN0YXJ0OlwidG91Y2hzdGFydFwiLHRvcFRyYW5zaXRpb25FbmQ6ZGUoXCJ0cmFuc2l0aW9uZW5kXCIpLHRvcFdoZWVsOlwid2hlZWxcIn0sZmU9e3RvcEFib3J0OlwiYWJvcnRcIix0b3BDYW5QbGF5OlwiY2FucGxheVwiLHRvcENhblBsYXlUaHJvdWdoOlwiY2FucGxheXRocm91Z2hcIix0b3BEdXJhdGlvbkNoYW5nZTpcImR1cmF0aW9uY2hhbmdlXCIsdG9wRW1wdGllZDpcImVtcHRpZWRcIix0b3BFbmNyeXB0ZWQ6XCJlbmNyeXB0ZWRcIix0b3BFbmRlZDpcImVuZGVkXCIsdG9wRXJyb3I6XCJlcnJvclwiLHRvcExvYWRlZERhdGE6XCJsb2FkZWRkYXRhXCIsdG9wTG9hZGVkTWV0YWRhdGE6XCJsb2FkZWRtZXRhZGF0YVwiLHRvcExvYWRTdGFydDpcImxvYWRzdGFydFwiLHRvcFBhdXNlOlwicGF1c2VcIix0b3BQbGF5OlwicGxheVwiLHRvcFBsYXlpbmc6XCJwbGF5aW5nXCIsdG9wUHJvZ3Jlc3M6XCJwcm9ncmVzc1wiLHRvcFJhdGVDaGFuZ2U6XCJyYXRlY2hhbmdlXCIsdG9wU2Vla2VkOlwic2Vla2VkXCIsdG9wU2Vla2luZzpcInNlZWtpbmdcIixcbnRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFZvbHVtZUNoYW5nZTpcInZvbHVtZWNoYW5nZVwiLHRvcFdhaXRpbmc6XCJ3YWl0aW5nXCJ9LGdlPXt9LGhlPTAsaWU9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO2Z1bmN0aW9uIGplKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLGllKXx8KGFbaWVdPWhlKyssZ2VbYVtpZV1dPXt9KTtyZXR1cm4gZ2VbYVtpZV1dfWZ1bmN0aW9uIGtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGxlKGEsYil7dmFyIGM9a2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9a2UoYyl9fWZ1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJlwidGV4dFwiPT09YS50eXBlfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBuZT1tLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLG9lPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbnRleHRNZW51IHRvcEZvY3VzIHRvcEtleURvd24gdG9wS2V5VXAgdG9wTW91c2VEb3duIHRvcE1vdXNlVXAgdG9wU2VsZWN0aW9uQ2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0scGU9bnVsbCxxZT1udWxsLHJlPW51bGwsc2U9ITE7XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlfHxudWxsPT1wZXx8cGUhPT1lYSgpKXJldHVybiBudWxsO3ZhciBjPXBlO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJm1lKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTp3aW5kb3cuZ2V0U2VsZWN0aW9uPyhjPXdpbmRvdy5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTpjPXZvaWQgMDtyZXR1cm4gcmUmJmZhKHJlLGMpP251bGw6KHJlPWMsYT1OLmdldFBvb2xlZChvZS5zZWxlY3QscWUsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1wZSxoYihhKSxhKX1cbnZhciB3ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1qZShlKTtmPXVhLm9uU2VsZWN0O2Zvcih2YXIgaD0wO2g8Zi5sZW5ndGg7aCsrKXt2YXIgZz1mW2hdO2lmKCFlLmhhc093blByb3BlcnR5KGcpfHwhZVtnXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/VWEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwidG9wRm9jdXNcIjppZihmYyhlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlwZT1lLHFlPWIscmU9bnVsbDticmVhaztjYXNlIFwidG9wQmx1clwiOnJlPXFlPXBlPW51bGw7YnJlYWs7Y2FzZSBcInRvcE1vdXNlRG93blwiOnNlPSEwO2JyZWFrO2Nhc2UgXCJ0b3BDb250ZXh0TWVudVwiOmNhc2UgXCJ0b3BNb3VzZVVwXCI6cmV0dXJuIHNlPSExLHVlKGMsZCk7Y2FzZSBcInRvcFNlbGVjdGlvbkNoYW5nZVwiOmlmKG5lKWJyZWFrO1xuY2FzZSBcInRvcEtleURvd25cIjpjYXNlIFwidG9wS2V5VXBcIjpyZXR1cm4gdWUoYyxkKX1yZXR1cm4gbnVsbH19O01hLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBUYXBFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7Q2E9WGEuZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTtEYT1YYS5nZXRJbnN0YW5jZUZyb21Ob2RlO0VhPVhhLmdldE5vZGVGcm9tSW5zdGFuY2U7TWEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpRZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46dmQsQ2hhbmdlRXZlbnRQbHVnaW46b2QsU2VsZWN0RXZlbnRQbHVnaW46d2UsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpRYn0pO1xuZnVuY3Rpb24geGUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT1udWxsO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXNbXCJyZXR1cm5cIl09bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9XG5mdW5jdGlvbiB5ZShhLGIsYyl7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbD09PWQ/KGQ9bmV3IHhlKGEudGFnLGIsYS5rZXksYS5tb2RlKSxkLnR5cGU9YS50eXBlLGQuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGQuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9ZCk6KGQucGVuZGluZ1Byb3BzPWIsZC5lZmZlY3RUYWc9MCxkLm5leHRFZmZlY3Q9bnVsbCxkLmZpcnN0RWZmZWN0PW51bGwsZC5sYXN0RWZmZWN0PW51bGwpO2QuZXhwaXJhdGlvblRpbWU9YztkLmNoaWxkPWEuY2hpbGQ7ZC5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztkLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2QudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtkLnNpYmxpbmc9YS5zaWJsaW5nO2QuaW5kZXg9YS5pbmRleDtkLnJlZj1hLnJlZjtyZXR1cm4gZH1cbmZ1bmN0aW9uIHplKGEsYixjKXt2YXIgZD1hLnR5cGUsZT1hLmtleTthPWEucHJvcHM7dmFyIGY9dm9pZCAwO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKWY9ZC5wcm90b3R5cGUmJmQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ/MjowO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkKWY9NTtlbHNlIHN3aXRjaChkKXtjYXNlIHJjOnJldHVybiBBZShhLmNoaWxkcmVuLGIsYyxlKTtjYXNlIHZjOmY9MTE7Ynw9MzticmVhaztjYXNlIHNjOmY9MTE7Ynw9MjticmVhaztjYXNlIG9jOmY9NzticmVhaztjYXNlIHBjOmY9OTticmVhaztkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpc3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgdGM6Zj0xMzticmVhaztjYXNlIHVjOmY9MTI7YnJlYWs7Y2FzZSB3YzpmPTE0O2JyZWFrO2RlZmF1bHQ6aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnRhZylyZXR1cm4gYj1kLGIucGVuZGluZ1Byb3BzPWEsYi5leHBpcmF0aW9uVGltZT1jLFxuYjtEKFwiMTMwXCIsbnVsbD09ZD9kOnR5cGVvZiBkLFwiXCIpfWVsc2UgRChcIjEzMFwiLG51bGw9PWQ/ZDp0eXBlb2YgZCxcIlwiKX1iPW5ldyB4ZShmLGEsZSxiKTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24gQWUoYSxiLGMsZCl7YT1uZXcgeGUoMTAsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBCZShhLGIsYyl7YT1uZXcgeGUoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIENlKGEsYixjKXtiPW5ldyB4ZSg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn12YXIgRGU9bnVsbCxFZT1udWxsO1xuZnVuY3Rpb24gRmUoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1mdW5jdGlvbiBHZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtEZT1GZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7RWU9RmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1mdW5jdGlvbiBIZShhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgRGUmJkRlKGEpfWZ1bmN0aW9uIEllKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBFZSYmRWUoYSl9bmV3IFNldDtcbmZ1bmN0aW9uIEplKGEpe3JldHVybntiYXNlU3RhdGU6YSxleHBpcmF0aW9uVGltZTowLGZpcnN0Om51bGwsbGFzdDpudWxsLGNhbGxiYWNrTGlzdDpudWxsLGhhc0ZvcmNlVXBkYXRlOiExLGlzSW5pdGlhbGl6ZWQ6ITEsY2FwdHVyZWRWYWx1ZXM6bnVsbH19ZnVuY3Rpb24gS2UoYSxiKXtudWxsPT09YS5sYXN0P2EuZmlyc3Q9YS5sYXN0PWI6KGEubGFzdC5uZXh0PWIsYS5sYXN0PWIpO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmIuZXhwaXJhdGlvblRpbWUpYS5leHBpcmF0aW9uVGltZT1iLmV4cGlyYXRpb25UaW1lfXZhciBMZT12b2lkIDAsTWU9dm9pZCAwO1xuZnVuY3Rpb24gTmUoYSl7TGU9TWU9bnVsbDt2YXIgYj1hLmFsdGVybmF0ZSxjPWEudXBkYXRlUXVldWU7bnVsbD09PWMmJihjPWEudXBkYXRlUXVldWU9SmUobnVsbCkpO251bGwhPT1iPyhhPWIudXBkYXRlUXVldWUsbnVsbD09PWEmJihhPWIudXBkYXRlUXVldWU9SmUobnVsbCkpKTphPW51bGw7TGU9YztNZT1hIT09Yz9hOm51bGx9ZnVuY3Rpb24gT2UoYSxiKXtOZShhKTthPUxlO3ZhciBjPU1lO251bGw9PT1jP0tlKGEsYik6bnVsbD09PWEubGFzdHx8bnVsbD09PWMubGFzdD8oS2UoYSxiKSxLZShjLGIpKTooS2UoYSxiKSxjLmxhc3Q9Yil9ZnVuY3Rpb24gUGUoYSxiLGMsZCl7YT1hLnBhcnRpYWxTdGF0ZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoYixjLGQpOmF9XG5mdW5jdGlvbiBRZShhLGIsYyxkLGUsZil7bnVsbCE9PWEmJmEudXBkYXRlUXVldWU9PT1jJiYoYz1iLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6Yy5iYXNlU3RhdGUsZXhwaXJhdGlvblRpbWU6Yy5leHBpcmF0aW9uVGltZSxmaXJzdDpjLmZpcnN0LGxhc3Q6Yy5sYXN0LGlzSW5pdGlhbGl6ZWQ6Yy5pc0luaXRpYWxpemVkLGNhcHR1cmVkVmFsdWVzOmMuY2FwdHVyZWRWYWx1ZXMsY2FsbGJhY2tMaXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITF9KTtjLmV4cGlyYXRpb25UaW1lPTA7Yy5pc0luaXRpYWxpemVkP2E9Yy5iYXNlU3RhdGU6KGE9Yy5iYXNlU3RhdGU9Yi5tZW1vaXplZFN0YXRlLGMuaXNJbml0aWFsaXplZD0hMCk7Zm9yKHZhciBoPSEwLGc9Yy5maXJzdCxrPSExO251bGwhPT1nOyl7dmFyIHY9Zy5leHBpcmF0aW9uVGltZTtpZih2PmYpe3ZhciBsPWMuZXhwaXJhdGlvblRpbWU7aWYoMD09PWx8fGw+diljLmV4cGlyYXRpb25UaW1lPXY7a3x8KGs9ITAsYy5iYXNlU3RhdGU9YSl9ZWxzZXtrfHxcbihjLmZpcnN0PWcubmV4dCxudWxsPT09Yy5maXJzdCYmKGMubGFzdD1udWxsKSk7aWYoZy5pc1JlcGxhY2UpYT1QZShnLGQsYSxlKSxoPSEwO2Vsc2UgaWYodj1QZShnLGQsYSxlKSlhPWg/QSh7fSxhLHYpOkEoYSx2KSxoPSExO2cuaXNGb3JjZWQmJihjLmhhc0ZvcmNlVXBkYXRlPSEwKTtudWxsIT09Zy5jYWxsYmFjayYmKHY9Yy5jYWxsYmFja0xpc3QsbnVsbD09PXYmJih2PWMuY2FsbGJhY2tMaXN0PVtdKSx2LnB1c2goZykpO251bGwhPT1nLmNhcHR1cmVkVmFsdWUmJih2PWMuY2FwdHVyZWRWYWx1ZXMsbnVsbD09PXY/Yy5jYXB0dXJlZFZhbHVlcz1bZy5jYXB0dXJlZFZhbHVlXTp2LnB1c2goZy5jYXB0dXJlZFZhbHVlKSl9Zz1nLm5leHR9bnVsbCE9PWMuY2FsbGJhY2tMaXN0P2IuZWZmZWN0VGFnfD0zMjpudWxsIT09Yy5maXJzdHx8Yy5oYXNGb3JjZVVwZGF0ZXx8bnVsbCE9PWMuY2FwdHVyZWRWYWx1ZXN8fChiLnVwZGF0ZVF1ZXVlPW51bGwpO2t8fChjLmJhc2VTdGF0ZT1hKTtcbnJldHVybiBhfWZ1bmN0aW9uIFJlKGEsYil7dmFyIGM9YS5jYWxsYmFja0xpc3Q7aWYobnVsbCE9PWMpZm9yKGEuY2FsbGJhY2tMaXN0PW51bGwsYT0wO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdLGU9ZC5jYWxsYmFjaztkLmNhbGxiYWNrPW51bGw7XCJmdW5jdGlvblwiIT09dHlwZW9mIGU/RChcIjE5MVwiLGUpOnZvaWQgMDtlLmNhbGwoYil9fVxuZnVuY3Rpb24gU2UoYSxiLGMsZCxlKXtmdW5jdGlvbiBmKGEsYixjLGQsZSxmKXtpZihudWxsPT09Ynx8bnVsbCE9PWEudXBkYXRlUXVldWUmJmEudXBkYXRlUXVldWUuaGFzRm9yY2VVcGRhdGUpcmV0dXJuITA7dmFyIG49YS5zdGF0ZU5vZGU7YT1hLnR5cGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uc2hvdWxkQ29tcG9uZW50VXBkYXRlP24uc2hvdWxkQ29tcG9uZW50VXBkYXRlKGMsZSxmKTphLnByb3RvdHlwZSYmYS5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWZhKGIsYyl8fCFmYShkLGUpOiEwfWZ1bmN0aW9uIGgoYSxiKXtiLnVwZGF0ZXI9cjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hfWZ1bmN0aW9uIGcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcbmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmci5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1mdW5jdGlvbiBrKGEsYixjLGQpe2E9YS50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcylyZXR1cm4gYS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMuY2FsbChudWxsLGMsZCl9dmFyIHY9YS5jYWNoZUNvbnRleHQsbD1hLmdldE1hc2tlZENvbnRleHQscD1hLmdldFVubWFza2VkQ29udGV4dCx6PWEuaXNDb250ZXh0Q29uc3VtZXIsQj1hLmhhc0NvbnRleHRDaGFuZ2VkLHI9e2lzTW91bnRlZDp4ZCxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxkLGUpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2U9dm9pZCAwPT09ZT9udWxsOmU7dmFyIGY9YyhhKTtPZShhLHtleHBpcmF0aW9uVGltZTpmLHBhcnRpYWxTdGF0ZTpkLGNhbGxiYWNrOmUsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLFxuY2FwdHVyZWRWYWx1ZTpudWxsLG5leHQ6bnVsbH0pO2IoYSxmKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGQsZSl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7ZT12b2lkIDA9PT1lP251bGw6ZTt2YXIgZj1jKGEpO09lKGEse2V4cGlyYXRpb25UaW1lOmYscGFydGlhbFN0YXRlOmQsY2FsbGJhY2s6ZSxpc1JlcGxhY2U6ITAsaXNGb3JjZWQ6ITEsY2FwdHVyZWRWYWx1ZTpudWxsLG5leHQ6bnVsbH0pO2IoYSxmKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsZCl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZT1jKGEpO09lKGEse2V4cGlyYXRpb25UaW1lOmUscGFydGlhbFN0YXRlOm51bGwsY2FsbGJhY2s6ZCxpc1JlcGxhY2U6ITEsaXNGb3JjZWQ6ITAsY2FwdHVyZWRWYWx1ZTpudWxsLG5leHQ6bnVsbH0pO2IoYSxlKX19O3JldHVybnthZG9wdENsYXNzSW5zdGFuY2U6aCxjYWxsR2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOmssXG5jb25zdHJ1Y3RDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS50eXBlLGQ9cChhKSxlPXooYSksZj1lP2woYSxkKTpqYTtjPW5ldyBjKGIsZik7dmFyIG49bnVsbCE9PWMuc3RhdGUmJnZvaWQgMCE9PWMuc3RhdGU/Yy5zdGF0ZTpudWxsO2goYSxjKTthLm1lbW9pemVkU3RhdGU9bjtiPWsoYSxjLGIsbik7bnVsbCE9PWImJnZvaWQgMCE9PWImJihhLm1lbW9pemVkU3RhdGU9QSh7fSxhLm1lbW9pemVkU3RhdGUsYikpO2UmJnYoYSxkLGYpO3JldHVybiBjfSxtb3VudENsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnR5cGUsZD1hLmFsdGVybmF0ZSxlPWEuc3RhdGVOb2RlLGY9YS5wZW5kaW5nUHJvcHMsbj1wKGEpO2UucHJvcHM9ZjtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9amE7ZS5jb250ZXh0PWwoYSxuKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGM9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYyE9PWUuc3RhdGUmJnIuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoZS5zdGF0ZT1RZShkLGEsYyxlLGYsYikpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX0scmVzdW1lTW91bnRDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS50eXBlLG49YS5zdGF0ZU5vZGU7bi5wcm9wcz1hLm1lbW9pemVkUHJvcHM7bi5zdGF0ZT1cbmEubWVtb2l6ZWRTdGF0ZTt2YXIgaD1hLm1lbW9pemVkUHJvcHMscj1hLnBlbmRpbmdQcm9wcyx6PW4uY29udGV4dCxxPXAoYSk7cT1sKGEscSk7KGM9XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbi5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBuLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2Ygbi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PXJ8fHohPT1xKSYmZyhhLG4scixxKTt6PWEubWVtb2l6ZWRTdGF0ZTtiPW51bGwhPT1hLnVwZGF0ZVF1ZXVlP1FlKG51bGwsYSxhLnVwZGF0ZVF1ZXVlLG4scixiKTp6O3ZhciB1PXZvaWQgMDtoIT09ciYmKHU9ayhhLG4scixiKSk7aWYobnVsbCE9PXUmJnZvaWQgMCE9PXUpe2I9bnVsbD09PWJ8fHZvaWQgMD09PWI/dTpBKHt9LGIsdSk7dmFyIHQ9YS51cGRhdGVRdWV1ZTtcbm51bGwhPT10JiYodC5iYXNlU3RhdGU9QSh7fSx0LmJhc2VTdGF0ZSx1KSl9aWYoIShoIT09cnx8eiE9PWJ8fEIoKXx8bnVsbCE9PWEudXBkYXRlUXVldWUmJmEudXBkYXRlUXVldWUuaGFzRm9yY2VVcGRhdGUpKXJldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBuLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpLCExOyhoPWYoYSxoLHIseixiLHEpKT8oY3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIG4uVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIG4uY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uY29tcG9uZW50V2lsbE1vdW50JiZuLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJm4uVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbi5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD1cbjQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCksZChhLHIpLGUoYSxiKSk7bi5wcm9wcz1yO24uc3RhdGU9YjtuLmNvbnRleHQ9cTtyZXR1cm4gaH0sdXBkYXRlQ2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7dmFyIG49Yi50eXBlLHg9Yi5zdGF0ZU5vZGU7eC5wcm9wcz1iLm1lbW9pemVkUHJvcHM7eC5zdGF0ZT1iLm1lbW9pemVkU3RhdGU7dmFyIGg9Yi5tZW1vaXplZFByb3BzLHI9Yi5wZW5kaW5nUHJvcHMscT14LmNvbnRleHQsdT1wKGIpO3U9bChiLHUpOyhuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBuLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIHguZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgeC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIHguY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oaCE9PXJ8fHEhPT11KSYmZyhiLHgscix1KTtxPWIubWVtb2l6ZWRTdGF0ZTtjPW51bGwhPT1iLnVwZGF0ZVF1ZXVlP1FlKGEsYixiLnVwZGF0ZVF1ZXVlLHgscixjKTpxO3ZhciB0PXZvaWQgMDtoIT09ciYmKHQ9ayhiLHgscixjKSk7aWYobnVsbCE9PXQmJnZvaWQgMCE9PXQpe2M9bnVsbD09PWN8fHZvaWQgMD09PWM/dDpBKHt9LGMsdCk7dmFyIHk9Yi51cGRhdGVRdWV1ZTtudWxsIT09eSYmKHkuYmFzZVN0YXRlPUEoe30seS5iYXNlU3RhdGUsdCkpfWlmKCEoaCE9PXJ8fHEhPT1jfHxCKCl8fG51bGwhPT1iLnVwZGF0ZVF1ZXVlJiZiLnVwZGF0ZVF1ZXVlLmhhc0ZvcmNlVXBkYXRlKSlyZXR1cm5cImZ1bmN0aW9uXCIhPT10eXBlb2YgeC5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnE9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIHguZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJlxucT09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yMDQ4KSwhMTsodD1mKGIsaCxyLHEsYyx1KSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB4LlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgeC5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIHguY29tcG9uZW50V2lsbFVwZGF0ZSYmeC5jb21wb25lbnRXaWxsVXBkYXRlKHIsYyx1KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgeC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmeC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShyLGMsdSkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiB4LmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgeC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yMDQ4KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB4LmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmXG5xPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB4LmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZxPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTIwNDgpLGQoYixyKSxlKGIsYykpO3gucHJvcHM9cjt4LnN0YXRlPWM7eC5jb250ZXh0PXU7cmV0dXJuIHR9fX12YXIgVGU9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFVlKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDIhPT1jLnRhZz9EKFwiMTEwXCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDpEKFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PWphP2QucmVmcz17fTpkLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/RChcIjE0OFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOkQoXCIyNTRcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIFZlKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZEKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBXZShhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPXllKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gaChiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBnKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9QmUoYyxhLm1vZGUsZCksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYyxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi50eXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPVVlKGEsYixjKSxkW1wicmV0dXJuXCJdPWEsZDtkPXplKGMsYS5tb2RlLGQpO2QucmVmPVVlKGEsYixjKTtkW1wicmV0dXJuXCJdPWE7cmV0dXJuIGR9ZnVuY3Rpb24gdihhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5DZShjLGEubW9kZSxkKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbChhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHwxMCE9PWIudGFnKXJldHVybiBiPUFlKGMsYS5tb2RlLGQsZiksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYyxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9QmUoXCJcIitiLGEubW9kZSxjKSxiW1wicmV0dXJuXCJdPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBuYzpyZXR1cm4gYz16ZShiLGEubW9kZSxjKSxjLnJlZj1VZShhLG51bGwsYiksY1tcInJldHVyblwiXT1hLGM7Y2FzZSBxYzpyZXR1cm4gYj1DZShiLGEubW9kZSxjKSxiW1wicmV0dXJuXCJdPWEsYn1pZihUZShiKXx8eWMoYikpcmV0dXJuIGI9QWUoYixcbmEubW9kZSxjLG51bGwpLGJbXCJyZXR1cm5cIl09YSxiO1ZlKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmcoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBuYzpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXJjP2woYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBxYzpyZXR1cm4gYy5rZXk9PT1lP3YoYSxiLGMsZCk6bnVsbH1pZihUZShjKXx8eWMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bChhLGIsYyxkLG51bGwpO1ZlKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsZyhiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIG5jOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1yYz9sKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSBxYzpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsdihiLGEsZCxlKX1pZihUZShkKXx8eWMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbChiLGEsZCxlLG51bGwpO1ZlKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcihlLGcsbCxoKXtmb3IodmFyIHI9bnVsbCxrPW51bGwscT1nLHU9Zz0wLHQ9bnVsbDtudWxsIT09cSYmdTxsLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8odD1xLHE9bnVsbCk6dD1xLnNpYmxpbmc7dmFyIG49eihlLHEsbFt1XSxoKTtpZihudWxsPT09bil7bnVsbD09PXEmJihxPXQpO2JyZWFrfWEmJnEmJm51bGw9PT1cbm4uYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKG4sZyx1KTtudWxsPT09az9yPW46ay5zaWJsaW5nPW47az1uO3E9dH1pZih1PT09bC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxyO2lmKG51bGw9PT1xKXtmb3IoO3U8bC5sZW5ndGg7dSsrKWlmKHE9cChlLGxbdV0saCkpZz1mKHEsZyx1KSxudWxsPT09az9yPXE6ay5zaWJsaW5nPXEsaz1xO3JldHVybiByfWZvcihxPWQoZSxxKTt1PGwubGVuZ3RoO3UrKylpZih0PUIocSxlLHUsbFt1XSxoKSl7aWYoYSYmbnVsbCE9PXQuYWx0ZXJuYXRlKXFbXCJkZWxldGVcIl0obnVsbD09PXQua2V5P3U6dC5rZXkpO2c9Zih0LGcsdSk7bnVsbD09PWs/cj10Omsuc2libGluZz10O2s9dH1hJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiByfWZ1bmN0aW9uIFEoZSxnLGwsaCl7dmFyIHI9eWMobCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIHI/RChcIjE1MFwiKTp2b2lkIDA7bD1yLmNhbGwobCk7bnVsbD09bD9EKFwiMTUxXCIpOnZvaWQgMDtmb3IodmFyIGs9XG5yPW51bGwscT1nLHU9Zz0wLHQ9bnVsbCxuPWwubmV4dCgpO251bGwhPT1xJiYhbi5kb25lO3UrKyxuPWwubmV4dCgpKXtxLmluZGV4PnU/KHQ9cSxxPW51bGwpOnQ9cS5zaWJsaW5nO3ZhciBIPXooZSxxLG4udmFsdWUsaCk7aWYobnVsbD09PUgpe3F8fChxPXQpO2JyZWFrfWEmJnEmJm51bGw9PT1ILmFsdGVybmF0ZSYmYihlLHEpO2c9ZihILGcsdSk7bnVsbD09PWs/cj1IOmsuc2libGluZz1IO2s9SDtxPXR9aWYobi5kb25lKXJldHVybiBjKGUscSkscjtpZihudWxsPT09cSl7Zm9yKDshbi5kb25lO3UrKyxuPWwubmV4dCgpKW49cChlLG4udmFsdWUsaCksbnVsbCE9PW4mJihnPWYobixnLHUpLG51bGw9PT1rP3I9bjprLnNpYmxpbmc9bixrPW4pO3JldHVybiByfWZvcihxPWQoZSxxKTshbi5kb25lO3UrKyxuPWwubmV4dCgpKWlmKG49QihxLGUsdSxuLnZhbHVlLGgpLG51bGwhPT1uKXtpZihhJiZudWxsIT09bi5hbHRlcm5hdGUpcVtcImRlbGV0ZVwiXShudWxsPT09bi5rZXk/dTpuLmtleSk7XG5nPWYobixnLHUpO251bGw9PT1rP3I9bjprLnNpYmxpbmc9bjtrPW59YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gcn1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsZyl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09cmMmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIG5jOmE6e3ZhciBrPWYua2V5O2ZvcihsPWQ7bnVsbCE9PWw7KXtpZihsLmtleT09PWspaWYoMTA9PT1sLnRhZz9mLnR5cGU9PT1yYzpsLnR5cGU9PT1mLnR5cGUpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYudHlwZT09PXJjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxnKTtkLnJlZj1VZShhLGwsZik7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGwpO2JyZWFrfWVsc2UgYihhLGwpO2w9bC5zaWJsaW5nfWYudHlwZT09PVxucmM/KGQ9QWUoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsZyxmLmtleSksZFtcInJldHVyblwiXT1hLGE9ZCk6KGc9emUoZixhLm1vZGUsZyksZy5yZWY9VWUoYSxkLGYpLGdbXCJyZXR1cm5cIl09YSxhPWcpfXJldHVybiBoKGEpO2Nhc2UgcWM6YTp7Zm9yKGw9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWwpaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGcpO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPUNlKGYsYS5tb2RlLGcpO2RbXCJyZXR1cm5cIl09YTthPWR9cmV0dXJuIGgoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiZcbjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixnKSk6KGMoYSxkKSxkPUJlKGYsYS5tb2RlLGcpKSxkW1wicmV0dXJuXCJdPWEsYT1kLGgoYSk7aWYoVGUoZikpcmV0dXJuIHIoYSxkLGYsZyk7aWYoeWMoZikpcmV0dXJuIFEoYSxkLGYsZyk7bCYmVmUoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYpc3dpdGNoKGEudGFnKXtjYXNlIDI6Y2FzZSAxOmc9YS50eXBlLEQoXCIxNTJcIixnLmRpc3BsYXlOYW1lfHxnLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBYZT1XZSghMCksWWU9V2UoITEpO1xuZnVuY3Rpb24gWmUoYSxiLGMsZCxlLGYsaCl7ZnVuY3Rpb24gZyhhLGIsYyl7ayhhLGIsYyxiLmV4cGlyYXRpb25UaW1lKX1mdW5jdGlvbiBrKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWUoYixudWxsLGMsZCk6WGUoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gdihhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGwoYSxiLGMsZCxlLGYpe3YoYSxiKTtpZighYyYmIWUpcmV0dXJuIGQmJnkoYiwhMSkscihhLGIpO2M9Yi5zdGF0ZU5vZGU7bWMuY3VycmVudD1iO3ZhciBnPWU/bnVsbDpjLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO2UmJihrKGEsYixudWxsLGYpLGIuY2hpbGQ9bnVsbCk7ayhhLGIsZyxmKTtiLm1lbW9pemVkU3RhdGU9Yy5zdGF0ZTtiLm1lbW9pemVkUHJvcHM9Yy5wcm9wcztkJiZ5KGIsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHAoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7XG5iLnBlbmRpbmdDb250ZXh0P3QoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmdChhLGIuY29udGV4dCwhMSk7WShhLGIuY29udGFpbmVySW5mbyl9ZnVuY3Rpb24geihhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO2ZvcihudWxsIT09ZSYmKGVbXCJyZXR1cm5cIl09YSk7bnVsbCE9PWU7KXtzd2l0Y2goZS50YWcpe2Nhc2UgMTI6dmFyIGY9ZS5zdGF0ZU5vZGV8MDtpZihlLnR5cGU9PT1iJiYwIT09KGYmYykpe2ZvcihmPWU7bnVsbCE9PWY7KXt2YXIgZz1mLmFsdGVybmF0ZTtpZigwPT09Zi5leHBpcmF0aW9uVGltZXx8Zi5leHBpcmF0aW9uVGltZT5kKWYuZXhwaXJhdGlvblRpbWU9ZCxudWxsIT09ZyYmKDA9PT1nLmV4cGlyYXRpb25UaW1lfHxnLmV4cGlyYXRpb25UaW1lPmQpJiYoZy5leHBpcmF0aW9uVGltZT1kKTtlbHNlIGlmKG51bGwhPT1nJiYoMD09PWcuZXhwaXJhdGlvblRpbWV8fGcuZXhwaXJhdGlvblRpbWU+ZCkpZy5leHBpcmF0aW9uVGltZT1cbmQ7ZWxzZSBicmVhaztmPWZbXCJyZXR1cm5cIl19Zj1udWxsfWVsc2UgZj1lLmNoaWxkO2JyZWFrO2Nhc2UgMTM6Zj1lLnR5cGU9PT1hLnR5cGU/bnVsbDplLmNoaWxkO2JyZWFrO2RlZmF1bHQ6Zj1lLmNoaWxkfWlmKG51bGwhPT1mKWZbXCJyZXR1cm5cIl09ZTtlbHNlIGZvcihmPWU7bnVsbCE9PWY7KXtpZihmPT09YSl7Zj1udWxsO2JyZWFrfWU9Zi5zaWJsaW5nO2lmKG51bGwhPT1lKXtmPWU7YnJlYWt9Zj1mW1wicmV0dXJuXCJdfWU9Zn19ZnVuY3Rpb24gQihhLGIsYyl7dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkUHJvcHM7aWYoIXEoKSYmZj09PWUpcmV0dXJuIGIuc3RhdGVOb2RlPTAsRyhiKSxyKGEsYik7dmFyIGw9ZS52YWx1ZTtiLm1lbW9pemVkUHJvcHM9ZTtpZihudWxsPT09ZilsPTEwNzM3NDE4MjM7ZWxzZSBpZihmLnZhbHVlPT09ZS52YWx1ZSl7aWYoZi5jaGlsZHJlbj09PWUuY2hpbGRyZW4pcmV0dXJuIGIuc3RhdGVOb2RlPTAsRyhiKSxcbnIoYSxiKTtsPTB9ZWxzZXt2YXIgdT1mLnZhbHVlO2lmKHU9PT1sJiYoMCE9PXV8fDEvdT09PTEvbCl8fHUhPT11JiZsIT09bCl7aWYoZi5jaGlsZHJlbj09PWUuY2hpbGRyZW4pcmV0dXJuIGIuc3RhdGVOb2RlPTAsRyhiKSxyKGEsYik7bD0wfWVsc2UgaWYobD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHModSxsKToxMDczNzQxODIzLGx8PTAsMD09PWwpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuKXJldHVybiBiLnN0YXRlTm9kZT0wLEcoYikscihhLGIpfWVsc2UgeihiLGQsbCxjKX1iLnN0YXRlTm9kZT1sO0coYik7ZyhhLGIsZS5jaGlsZHJlbik7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcihhLGIpe251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD9EKFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO3ZhciBjPXllKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7XG5iLmNoaWxkPWM7Zm9yKGNbXCJyZXR1cm5cIl09YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz15ZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGNbXCJyZXR1cm5cIl09YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgUT1hLnNob3VsZFNldFRleHRDb250ZW50LG49YS5zaG91bGREZXByaW9yaXRpemVTdWJ0cmVlLHg9Yi5wdXNoSG9zdENvbnRleHQsWT1iLnB1c2hIb3N0Q29udGFpbmVyLEc9ZC5wdXNoUHJvdmlkZXIsUj1jLmdldE1hc2tlZENvbnRleHQsUz1jLmdldFVubWFza2VkQ29udGV4dCxxPWMuaGFzQ29udGV4dENoYW5nZWQsdT1jLnB1c2hDb250ZXh0UHJvdmlkZXIsdD1jLnB1c2hUb3BMZXZlbENvbnRleHRPYmplY3QseT1jLmludmFsaWRhdGVDb250ZXh0UHJvdmlkZXIsSD1lLmVudGVySHlkcmF0aW9uU3RhdGUsV2E9ZS5yZXNldEh5ZHJhdGlvblN0YXRlLENiPWUudHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U7XG5hPVNlKGMsZixoLGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFByb3BzPWJ9LGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFN0YXRlPWJ9KTt2YXIgSmM9YS5hZG9wdENsYXNzSW5zdGFuY2UsS2M9YS5jYWxsR2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLExjPWEuY29uc3RydWN0Q2xhc3NJbnN0YW5jZSxEYj1hLm1vdW50Q2xhc3NJbnN0YW5jZSxNYz1hLnJlc3VtZU1vdW50Q2xhc3NJbnN0YW5jZSxFYj1hLnVwZGF0ZUNsYXNzSW5zdGFuY2U7cmV0dXJue2JlZ2luV29yazpmdW5jdGlvbihhLGIsYyl7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+Yyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6cChiKTticmVhaztjYXNlIDI6dShiKTticmVhaztjYXNlIDQ6WShiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTM6RyhiKX1yZXR1cm4gbnVsbH1zd2l0Y2goYi50YWcpe2Nhc2UgMDpudWxsIT09YT9EKFwiMTU1XCIpOnZvaWQgMDt2YXIgZD1iLnR5cGUsXG5lPWIucGVuZGluZ1Byb3BzLGY9UyhiKTtmPVIoYixmKTtkPWQoZSxmKTtiLmVmZmVjdFRhZ3w9MTtcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5yZW5kZXImJnZvaWQgMD09PWQuJCR0eXBlb2Y/KGY9Yi50eXBlLGIudGFnPTIsYi5tZW1vaXplZFN0YXRlPW51bGwhPT1kLnN0YXRlJiZ2b2lkIDAhPT1kLnN0YXRlP2Quc3RhdGU6bnVsbCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJihlPUtjKGIsZCxlLGIubWVtb2l6ZWRTdGF0ZSksbnVsbCE9PWUmJnZvaWQgMCE9PWUmJihiLm1lbW9pemVkU3RhdGU9QSh7fSxiLm1lbW9pemVkU3RhdGUsZSkpKSxlPXUoYiksSmMoYixkKSxEYihiLGMpLGE9bChhLGIsITAsZSwhMSxjKSk6KGIudGFnPTEsZyhhLGIsZCksYi5tZW1vaXplZFByb3BzPWUsYT1iLmNoaWxkKTtyZXR1cm4gYTtjYXNlIDE6cmV0dXJuIGU9Yi50eXBlLGM9Yi5wZW5kaW5nUHJvcHMscSgpfHxcbmIubWVtb2l6ZWRQcm9wcyE9PWM/KGQ9UyhiKSxkPVIoYixkKSxlPWUoYyxkKSxiLmVmZmVjdFRhZ3w9MSxnKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9cihhLGIpLGE7Y2FzZSAyOmU9dShiKTtudWxsPT09YT9udWxsPT09Yi5zdGF0ZU5vZGU/KExjKGIsYi5wZW5kaW5nUHJvcHMpLERiKGIsYyksZD0hMCk6ZD1NYyhiLGMpOmQ9RWIoYSxiLGMpO2Y9ITE7dmFyIGg9Yi51cGRhdGVRdWV1ZTtudWxsIT09aCYmbnVsbCE9PWguY2FwdHVyZWRWYWx1ZXMmJihmPWQ9ITApO3JldHVybiBsKGEsYixkLGUsZixjKTtjYXNlIDM6YTppZihwKGIpLGQ9Yi51cGRhdGVRdWV1ZSxudWxsIT09ZCl7Zj1iLm1lbW9pemVkU3RhdGU7ZT1RZShhLGIsZCxudWxsLG51bGwsYyk7Yi5tZW1vaXplZFN0YXRlPWU7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kJiZudWxsIT09ZC5jYXB0dXJlZFZhbHVlcylkPW51bGw7ZWxzZSBpZihmPT09ZSl7V2EoKTthPXIoYSxiKTticmVhayBhfWVsc2UgZD1cbmUuZWxlbWVudDtmPWIuc3RhdGVOb2RlOyhudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpJiZmLmh5ZHJhdGUmJkgoYik/KGIuZWZmZWN0VGFnfD0yLGIuY2hpbGQ9WWUoYixudWxsLGQsYykpOihXYSgpLGcoYSxiLGQpKTtiLm1lbW9pemVkU3RhdGU9ZTthPWIuY2hpbGR9ZWxzZSBXYSgpLGE9cihhLGIpO3JldHVybiBhO2Nhc2UgNTphOnt4KGIpO251bGw9PT1hJiZDYihiKTtlPWIudHlwZTtoPWIubWVtb2l6ZWRQcm9wcztkPWIucGVuZGluZ1Byb3BzO2Y9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGw7aWYoIXEoKSYmaD09PWQpe2lmKGg9Yi5tb2RlJjEmJm4oZSxkKSliLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7aWYoIWh8fDEwNzM3NDE4MjMhPT1jKXthPXIoYSxiKTticmVhayBhfX1oPWQuY2hpbGRyZW47UShlLGQpP2g9bnVsbDpmJiZRKGUsZikmJihiLmVmZmVjdFRhZ3w9MTYpO3YoYSxiKTsxMDczNzQxODIzIT09YyYmYi5tb2RlJjEmJm4oZSxkKT8oYi5leHBpcmF0aW9uVGltZT1cbjEwNzM3NDE4MjMsYi5tZW1vaXplZFByb3BzPWQsYT1udWxsKTooZyhhLGIsaCksYi5tZW1vaXplZFByb3BzPWQsYT1iLmNoaWxkKX1yZXR1cm4gYTtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZDYihiKSxiLm1lbW9pemVkUHJvcHM9Yi5wZW5kaW5nUHJvcHMsbnVsbDtjYXNlIDg6Yi50YWc9NztjYXNlIDc6cmV0dXJuIGU9Yi5wZW5kaW5nUHJvcHMscSgpfHxiLm1lbW9pemVkUHJvcHMhPT1lfHwoZT1iLm1lbW9pemVkUHJvcHMpLGQ9ZS5jaGlsZHJlbixiLnN0YXRlTm9kZT1udWxsPT09YT9ZZShiLGIuc3RhdGVOb2RlLGQsYyk6WGUoYixhLnN0YXRlTm9kZSxkLGMpLGIubWVtb2l6ZWRQcm9wcz1lLGIuc3RhdGVOb2RlO2Nhc2UgOTpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIFkoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxlPWIucGVuZGluZ1Byb3BzLHEoKXx8Yi5tZW1vaXplZFByb3BzIT09ZT8obnVsbD09PWE/Yi5jaGlsZD1YZShiLG51bGwsZSxjKTpnKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9XG5lLGE9Yi5jaGlsZCk6YT1yKGEsYiksYTtjYXNlIDE0OnJldHVybiBjPWIudHlwZS5yZW5kZXIsYz1jKGIucGVuZGluZ1Byb3BzLGIucmVmKSxnKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxiLmNoaWxkO2Nhc2UgMTA6cmV0dXJuIGM9Yi5wZW5kaW5nUHJvcHMscSgpfHxiLm1lbW9pemVkUHJvcHMhPT1jPyhnKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9cihhLGIpLGE7Y2FzZSAxMTpyZXR1cm4gYz1iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixxKCl8fG51bGwhPT1jJiZiLm1lbW9pemVkUHJvcHMhPT1jPyhnKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9cihhLGIpLGE7Y2FzZSAxMzpyZXR1cm4gQihhLGIsYyk7Y2FzZSAxMjpkPWIudHlwZTtmPWIucGVuZGluZ1Byb3BzO3ZhciB0PWIubWVtb2l6ZWRQcm9wcztlPWQuX2N1cnJlbnRWYWx1ZTtoPWQuX2NoYW5nZWRCaXRzO2lmKHEoKXx8MCE9PWh8fHQhPT1mKXtiLm1lbW9pemVkUHJvcHM9XG5mO3Q9Zi51bnN0YWJsZV9vYnNlcnZlZEJpdHM7aWYodm9pZCAwPT09dHx8bnVsbD09PXQpdD0xMDczNzQxODIzO2Iuc3RhdGVOb2RlPXQ7MCE9PShoJnQpJiZ6KGIsZCxoLGMpO2M9Zi5jaGlsZHJlbjtjPWMoZSk7ZyhhLGIsYyk7YT1iLmNoaWxkfWVsc2UgYT1yKGEsYik7cmV0dXJuIGE7ZGVmYXVsdDpEKFwiMTU2XCIpfX19fVxuZnVuY3Rpb24gJGUoYSxiLGMsZCxlKXtmdW5jdGlvbiBmKGEpe2EuZWZmZWN0VGFnfD00fXZhciBoPWEuY3JlYXRlSW5zdGFuY2UsZz1hLmNyZWF0ZVRleHRJbnN0YW5jZSxrPWEuYXBwZW5kSW5pdGlhbENoaWxkLHY9YS5maW5hbGl6ZUluaXRpYWxDaGlsZHJlbixsPWEucHJlcGFyZVVwZGF0ZSxwPWEucGVyc2lzdGVuY2Usej1iLmdldFJvb3RIb3N0Q29udGFpbmVyLEI9Yi5wb3BIb3N0Q29udGV4dCxyPWIuZ2V0SG9zdENvbnRleHQsUT1iLnBvcEhvc3RDb250YWluZXIsbj1jLnBvcENvbnRleHRQcm92aWRlcix4PWMucG9wVG9wTGV2ZWxDb250ZXh0T2JqZWN0LFk9ZC5wb3BQcm92aWRlcixHPWUucHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZSxSPWUucHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2UsUz1lLnBvcEh5ZHJhdGlvblN0YXRlLHE9dm9pZCAwLHU9dm9pZCAwLHQ9dm9pZCAwO2EubXV0YXRpb24/KHE9ZnVuY3Rpb24oKXt9LHU9ZnVuY3Rpb24oYSxiLGMpeyhiLnVwZGF0ZVF1ZXVlPVxuYykmJmYoYil9LHQ9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJmYoYil9KTpwP0QoXCIyMzVcIik6RChcIjIzNlwiKTtyZXR1cm57Y29tcGxldGVXb3JrOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gbnVsbDtjYXNlIDI6cmV0dXJuIG4oYiksYT1iLnN0YXRlTm9kZSxkPWIudXBkYXRlUXVldWUsbnVsbCE9PWQmJm51bGwhPT1kLmNhcHR1cmVkVmFsdWVzJiYoYi5lZmZlY3RUYWcmPS02NSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnREaWRDYXRjaD9iLmVmZmVjdFRhZ3w9MjU2OmQuY2FwdHVyZWRWYWx1ZXM9bnVsbCksbnVsbDtjYXNlIDM6UShiKTt4KGIpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKVMoYiksYi5lZmZlY3RUYWcmPS0zO3EoYik7YT1iLnVwZGF0ZVF1ZXVlO1xubnVsbCE9PWEmJm51bGwhPT1hLmNhcHR1cmVkVmFsdWVzJiYoYi5lZmZlY3RUYWd8PTI1Nik7cmV0dXJuIG51bGw7Y2FzZSA1OkIoYik7Yz16KCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIHA9YS5tZW1vaXplZFByb3BzLEg9Yi5zdGF0ZU5vZGUseT1yKCk7SD1sKEgsZSxwLGQsYyx5KTt1KGEsYixILGUscCxkLGMseSk7YS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2V7aWYoIWQpcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT9EKFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9cigpO2lmKFMoYikpRyhiLGMsYSkmJmYoYik7ZWxzZXtwPWgoZSxkLGMsYSxiKTthOmZvcih5PWIuY2hpbGQ7bnVsbCE9PXk7KXtpZig1PT09eS50YWd8fDY9PT15LnRhZylrKHAseS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PXkudGFnJiZudWxsIT09eS5jaGlsZCl7eS5jaGlsZFtcInJldHVyblwiXT15O3k9eS5jaGlsZDtjb250aW51ZX1pZih5PT09YilicmVhaztcbmZvcig7bnVsbD09PXkuc2libGluZzspe2lmKG51bGw9PT15W1wicmV0dXJuXCJdfHx5W1wicmV0dXJuXCJdPT09YilicmVhayBhO3k9eVtcInJldHVyblwiXX15LnNpYmxpbmdbXCJyZXR1cm5cIl09eVtcInJldHVyblwiXTt5PXkuc2libGluZ312KHAsZSxkLGMsYSkmJmYoYik7Yi5zdGF0ZU5vZGU9cH1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpdChhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/RChcIjE2NlwiKTp2b2lkIDAsbnVsbDthPXooKTtjPXIoKTtTKGIpP1IoYikmJmYoYik6Yi5zdGF0ZU5vZGU9ZyhkLGEsYyxiKX1yZXR1cm4gbnVsbDtjYXNlIDc6KGQ9Yi5tZW1vaXplZFByb3BzKT92b2lkIDA6RChcIjE2NVwiKTtiLnRhZz04O2U9W107YTpmb3IoKHA9Yi5zdGF0ZU5vZGUpJiYocFtcInJldHVyblwiXT1iKTtudWxsIT09XG5wOyl7aWYoNT09PXAudGFnfHw2PT09cC50YWd8fDQ9PT1wLnRhZylEKFwiMjQ3XCIpO2Vsc2UgaWYoOT09PXAudGFnKWUucHVzaChwLnBlbmRpbmdQcm9wcy52YWx1ZSk7ZWxzZSBpZihudWxsIT09cC5jaGlsZCl7cC5jaGlsZFtcInJldHVyblwiXT1wO3A9cC5jaGlsZDtjb250aW51ZX1mb3IoO251bGw9PT1wLnNpYmxpbmc7KXtpZihudWxsPT09cFtcInJldHVyblwiXXx8cFtcInJldHVyblwiXT09PWIpYnJlYWsgYTtwPXBbXCJyZXR1cm5cIl19cC5zaWJsaW5nW1wicmV0dXJuXCJdPXBbXCJyZXR1cm5cIl07cD1wLnNpYmxpbmd9cD1kLmhhbmRsZXI7ZD1wKGQucHJvcHMsZSk7Yi5jaGlsZD1YZShiLG51bGwhPT1hP2EuY2hpbGQ6bnVsbCxkLGMpO3JldHVybiBiLmNoaWxkO2Nhc2UgODpyZXR1cm4gYi50YWc9NyxudWxsO2Nhc2UgOTpyZXR1cm4gbnVsbDtjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTA6cmV0dXJuIG51bGw7Y2FzZSAxMTpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIFEoYikscShiKSxudWxsO1xuY2FzZSAxMzpyZXR1cm4gWShiKSxudWxsO2Nhc2UgMTI6cmV0dXJuIG51bGw7Y2FzZSAwOkQoXCIxNjdcIik7ZGVmYXVsdDpEKFwiMTU2XCIpfX19fVxuZnVuY3Rpb24gYWYoYSxiLGMsZCxlKXt2YXIgZj1hLnBvcEhvc3RDb250YWluZXIsaD1hLnBvcEhvc3RDb250ZXh0LGc9Yi5wb3BDb250ZXh0UHJvdmlkZXIsaz1iLnBvcFRvcExldmVsQ29udGV4dE9iamVjdCx2PWMucG9wUHJvdmlkZXI7cmV0dXJue3Rocm93RXhjZXB0aW9uOmZ1bmN0aW9uKGEsYixjKXtiLmVmZmVjdFRhZ3w9NTEyO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7Yj17dmFsdWU6Yyxzb3VyY2U6YixzdGFjazpBYyhiKX07ZG97c3dpdGNoKGEudGFnKXtjYXNlIDM6TmUoYSk7YS51cGRhdGVRdWV1ZS5jYXB0dXJlZFZhbHVlcz1bYl07YS5lZmZlY3RUYWd8PTEwMjQ7cmV0dXJuO2Nhc2UgMjppZihjPWEuc3RhdGVOb2RlLDA9PT0oYS5lZmZlY3RUYWcmNjQpJiZudWxsIT09YyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50RGlkQ2F0Y2gmJiFlKGMpKXtOZShhKTtjPWEudXBkYXRlUXVldWU7dmFyIGQ9Yy5jYXB0dXJlZFZhbHVlcztudWxsPT09ZD9cbmMuY2FwdHVyZWRWYWx1ZXM9W2JdOmQucHVzaChiKTthLmVmZmVjdFRhZ3w9MTAyNDtyZXR1cm59fWE9YVtcInJldHVyblwiXX13aGlsZShudWxsIT09YSl9LHVud2luZFdvcms6ZnVuY3Rpb24oYSl7c3dpdGNoKGEudGFnKXtjYXNlIDI6ZyhhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYxMDI0PyhhLmVmZmVjdFRhZz1iJi0xMDI1fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBmKGEpLGsoYSksYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDU6cmV0dXJuIGgoYSksbnVsbDtjYXNlIDQ6cmV0dXJuIGYoYSksbnVsbDtjYXNlIDEzOnJldHVybiB2KGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19LHVud2luZEludGVycnVwdGVkV29yazpmdW5jdGlvbihhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMjpnKGEpO2JyZWFrO2Nhc2UgMzpmKGEpO2soYSk7YnJlYWs7Y2FzZSA1OmgoYSk7YnJlYWs7Y2FzZSA0OmYoYSk7YnJlYWs7Y2FzZSAxMzp2KGEpfX19fVxuZnVuY3Rpb24gYmYoYSxiKXt2YXIgYz1iLnNvdXJjZTtudWxsPT09Yi5zdGFjayYmQWMoYyk7bnVsbCE9PWMmJnpjKGMpO2I9Yi52YWx1ZTtudWxsIT09YSYmMj09PWEudGFnJiZ6YyhhKTt0cnl7YiYmYi5zdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nfHxjb25zb2xlLmVycm9yKGIpfWNhdGNoKGQpe2QmJmQuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihkKX19XG5mdW5jdGlvbiBjZihhLGIsYyxkLGUpe2Z1bmN0aW9uIGYoYSl7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMpdHJ5e2MobnVsbCl9Y2F0Y2godCl7YihhLHQpfWVsc2UgYy5jdXJyZW50PW51bGx9ZnVuY3Rpb24gaChhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgSWUmJkllKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAyOmYoYSk7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2MucHJvcHM9YS5tZW1vaXplZFByb3BzLGMuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGMuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaCh0KXtiKGEsdCl9YnJlYWs7Y2FzZSA1OmYoYSk7YnJlYWs7Y2FzZSA3OmcoYS5zdGF0ZU5vZGUpO2JyZWFrO2Nhc2UgNDpwJiZ2KGEpfX1mdW5jdGlvbiBnKGEpe2Zvcih2YXIgYj1hOzspaWYoaChiKSxudWxsPT09Yi5jaGlsZHx8cCYmND09PWIudGFnKXtpZihiPT09XG5hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Yj1iW1wicmV0dXJuXCJdfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfWVsc2UgYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZH1mdW5jdGlvbiBrKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfWZ1bmN0aW9uIHYoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iW1wicmV0dXJuXCJdO2E6Zm9yKDs7KXtudWxsPT09Yz9EKFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWNbXCJyZXR1cm5cIl19Yz0hMH1pZig1PT09XG5iLnRhZ3x8Nj09PWIudGFnKWcoYiksZT9TKGQsYi5zdGF0ZU5vZGUpOlIoZCxiLnN0YXRlTm9kZSk7ZWxzZSBpZig0PT09Yi50YWc/ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGRbXCJyZXR1cm5cIl09YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybjtiPWJbXCJyZXR1cm5cIl07ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXZhciBsPWEuZ2V0UHVibGljSW5zdGFuY2UscD1hLm11dGF0aW9uO2E9YS5wZXJzaXN0ZW5jZTtwfHwoYT9EKFwiMjM1XCIpOkQoXCIyMzZcIikpO3ZhciB6PXAuY29tbWl0TW91bnQsQj1wLmNvbW1pdFVwZGF0ZSxyPXAucmVzZXRUZXh0Q29udGVudCxRPXAuY29tbWl0VGV4dFVwZGF0ZSxuPXAuYXBwZW5kQ2hpbGQsXG54PXAuYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcixZPXAuaW5zZXJ0QmVmb3JlLEc9cC5pbnNlcnRJbkNvbnRhaW5lckJlZm9yZSxSPXAucmVtb3ZlQ2hpbGQsUz1wLnJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lcjtyZXR1cm57Y29tbWl0QmVmb3JlTXV0YXRpb25MaWZlQ3ljbGVzOmZ1bmN0aW9uKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6aWYoYi5lZmZlY3RUYWcmMjA0OCYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2EucHJvcHM9Yi5tZW1vaXplZFByb3BzO2Euc3RhdGU9Yi5tZW1vaXplZFN0YXRlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShjLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1icmVhaztjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6YnJlYWs7ZGVmYXVsdDpEKFwiMTYzXCIpfX0sY29tbWl0UmVzZXRUZXh0Q29udGVudDpmdW5jdGlvbihhKXtyKGEuc3RhdGVOb2RlKX0sXG5jb21taXRQbGFjZW1lbnQ6ZnVuY3Rpb24oYSl7YTp7Zm9yKHZhciBiPWFbXCJyZXR1cm5cIl07bnVsbCE9PWI7KXtpZihrKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iW1wicmV0dXJuXCJdfUQoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDpEKFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYocihiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Y1tcInJldHVyblwiXXx8ayhjW1wicmV0dXJuXCJdKSl7Yz1udWxsO2JyZWFrIGF9Yz1jW1wicmV0dXJuXCJdfWMuc2libGluZ1tcInJldHVyblwiXT1jW1wicmV0dXJuXCJdO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1cbmMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO2lmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGRbXCJyZXR1cm5cIl09YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZyljP2Q/RyhiLGUuc3RhdGVOb2RlLGMpOlkoYixlLnN0YXRlTm9kZSxjKTpkP3goYixlLnN0YXRlTm9kZSk6bihiLGUuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGRbXCJyZXR1cm5cIl09ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWVbXCJyZXR1cm5cIl18fGVbXCJyZXR1cm5cIl09PT1hKXJldHVybjtlPWVbXCJyZXR1cm5cIl19ZS5zaWJsaW5nW1wicmV0dXJuXCJdPWVbXCJyZXR1cm5cIl07ZT1lLnNpYmxpbmd9fSxjb21taXREZWxldGlvbjpmdW5jdGlvbihhKXt2KGEpO1xuYVtcInJldHVyblwiXT1udWxsO2EuY2hpbGQ9bnVsbDthLmFsdGVybmF0ZSYmKGEuYWx0ZXJuYXRlLmNoaWxkPW51bGwsYS5hbHRlcm5hdGVbXCJyZXR1cm5cIl09bnVsbCl9LGNvbW1pdFdvcms6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJkIoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/RChcIjE2MlwiKTp2b2lkIDA7Yz1iLm1lbW9pemVkUHJvcHM7UShiLnN0YXRlTm9kZSxudWxsIT09YT9hLm1lbW9pemVkUHJvcHM6YyxjKTticmVhaztjYXNlIDM6YnJlYWs7ZGVmYXVsdDpEKFwiMTYzXCIpfX0sY29tbWl0TGlmZUN5Y2xlczpmdW5jdGlvbihhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDI6YT1cbmMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5wcm9wcz1jLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1jLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2I9Yi5tZW1vaXplZFN0YXRlO2EucHJvcHM9Yy5tZW1vaXplZFByb3BzO2Euc3RhdGU9Yy5tZW1vaXplZFN0YXRlO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYixhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1jPWMudXBkYXRlUXVldWU7bnVsbCE9PWMmJlJlKGMsYSk7YnJlYWs7Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9bChjLmNoaWxkLnN0YXRlTm9kZSk7YnJlYWs7Y2FzZSAyOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9UmUoYixhKX1icmVhaztjYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmXG40JiZ6KGEsYy50eXBlLGMubWVtb2l6ZWRQcm9wcyxjKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2RlZmF1bHQ6RChcIjE2M1wiKX19LGNvbW1pdEVycm9yTG9nZ2luZzpmdW5jdGlvbihhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSAyOnZhciBjPWEudHlwZTtiPWEuc3RhdGVOb2RlO3ZhciBkPWEudXBkYXRlUXVldWU7bnVsbD09PWR8fG51bGw9PT1kLmNhcHR1cmVkVmFsdWVzP0QoXCIyNjRcIik6dm9pZCAwO3ZhciBmPWQuY2FwdHVyZWRWYWx1ZXM7ZC5jYXB0dXJlZFZhbHVlcz1udWxsO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21DYXRjaCYmZShiKTtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcztiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmb3IoYz0wO2M8Zi5sZW5ndGg7YysrKXtkPWZbY107dmFyIGc9ZC52YWx1ZSxoPWQuc3RhY2s7YmYoYSxkKTtiLmNvbXBvbmVudERpZENhdGNoKGcse2NvbXBvbmVudFN0YWNrOm51bGwhPT1oP2g6XCJcIn0pfWJyZWFrO1xuY2FzZSAzOmM9YS51cGRhdGVRdWV1ZTtudWxsPT09Y3x8bnVsbD09PWMuY2FwdHVyZWRWYWx1ZXM/RChcIjI2NFwiKTp2b2lkIDA7Zj1jLmNhcHR1cmVkVmFsdWVzO2MuY2FwdHVyZWRWYWx1ZXM9bnVsbDtmb3IoYz0wO2M8Zi5sZW5ndGg7YysrKWQ9ZltjXSxiZihhLGQpLGIoZC52YWx1ZSk7YnJlYWs7ZGVmYXVsdDpEKFwiMjY1XCIpfX0sY29tbWl0QXR0YWNoUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKXt2YXIgYz1hLnN0YXRlTm9kZTtzd2l0Y2goYS50YWcpe2Nhc2UgNTphPWwoYyk7YnJlYWs7ZGVmYXVsdDphPWN9XCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpiLmN1cnJlbnQ9YX19LGNvbW1pdERldGFjaFJlZjpmdW5jdGlvbihhKXthPWEucmVmO251bGwhPT1hJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YShudWxsKTphLmN1cnJlbnQ9bnVsbCl9fX12YXIgZGY9e307XG5mdW5jdGlvbiBlZihhLGIpe2Z1bmN0aW9uIGMoYSl7YT09PWRmP0QoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfXZhciBkPWEuZ2V0Q2hpbGRIb3N0Q29udGV4dCxlPWEuZ2V0Um9vdEhvc3RDb250ZXh0O2E9Yi5jcmVhdGVDdXJzb3I7dmFyIGY9Yi5wdXNoLGg9Yi5wb3AsZz1hKGRmKSxrPWEoZGYpLHY9YShkZik7cmV0dXJue2dldEhvc3RDb250ZXh0OmZ1bmN0aW9uKCl7cmV0dXJuIGMoZy5jdXJyZW50KX0sZ2V0Um9vdEhvc3RDb250YWluZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYyh2LmN1cnJlbnQpfSxwb3BIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKGEpe2goZyxhKTtoKGssYSk7aCh2LGEpfSxwb3BIb3N0Q29udGV4dDpmdW5jdGlvbihhKXtrLmN1cnJlbnQ9PT1hJiYoaChnLGEpLGgoayxhKSl9LHB1c2hIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKGEsYil7Zih2LGIsYSk7ZihrLGEsYSk7ZihnLGRmLGEpO2I9ZShiKTtoKGcsYSk7ZihnLGIsYSl9LHB1c2hIb3N0Q29udGV4dDpmdW5jdGlvbihhKXt2YXIgYj1cbmModi5jdXJyZW50KSxlPWMoZy5jdXJyZW50KTtiPWQoZSxhLnR5cGUsYik7ZSE9PWImJihmKGssYSxhKSxmKGcsYixhKSl9fX1cbmZ1bmN0aW9uIGZmKGEpe2Z1bmN0aW9uIGIoYSxiKXt2YXIgYz1uZXcgeGUoNSxudWxsLG51bGwsMCk7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Y1tcInJldHVyblwiXT1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBjKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIGI9ZihiLGEudHlwZSxhLnBlbmRpbmdQcm9wcyksbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1oKGIsYS5wZW5kaW5nUHJvcHMpLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBkKGEpe2ZvcihhPWFbXCJyZXR1cm5cIl07bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWFbXCJyZXR1cm5cIl07cD1hfXZhciBlPWEuc2hvdWxkU2V0VGV4dENvbnRlbnQ7XG5hPWEuaHlkcmF0aW9uO2lmKCFhKXJldHVybntlbnRlckh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuITF9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXt9LHRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxwcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlOmZ1bmN0aW9uKCl7RChcIjE3NVwiKX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXtEKFwiMTc2XCIpfSxwb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3JldHVybiExfX07dmFyIGY9YS5jYW5IeWRyYXRlSW5zdGFuY2UsaD1hLmNhbkh5ZHJhdGVUZXh0SW5zdGFuY2UsZz1hLmdldE5leHRIeWRyYXRhYmxlU2libGluZyxrPWEuZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQsdj1hLmh5ZHJhdGVJbnN0YW5jZSxsPWEuaHlkcmF0ZVRleHRJbnN0YW5jZSxwPW51bGwsej1udWxsLEI9ITE7cmV0dXJue2VudGVySHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7ej1cbmsoYS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cD1hO3JldHVybiBCPSEwfSxyZXNldEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7ej1wPW51bGw7Qj0hMX0sdHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oYSl7aWYoQil7dmFyIGQ9ejtpZihkKXtpZighYyhhLGQpKXtkPWcoZCk7aWYoIWR8fCFjKGEsZCkpe2EuZWZmZWN0VGFnfD0yO0I9ITE7cD1hO3JldHVybn1iKHAseil9cD1hO3o9ayhkKX1lbHNlIGEuZWZmZWN0VGFnfD0yLEI9ITEscD1hfX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7Yj12KGEuc3RhdGVOb2RlLGEudHlwZSxhLm1lbW9pemVkUHJvcHMsYixjLGEpO2EudXBkYXRlUXVldWU9YjtyZXR1cm4gbnVsbCE9PWI/ITA6ITF9LHByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBsKGEuc3RhdGVOb2RlLGEubWVtb2l6ZWRQcm9wcyxhKX0scG9wSHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7aWYoYSE9PVxucClyZXR1cm4hMTtpZighQilyZXR1cm4gZChhKSxCPSEwLCExO3ZhciBjPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YyYmXCJib2R5XCIhPT1jJiYhZShjLGEubWVtb2l6ZWRQcm9wcykpZm9yKGM9ejtjOyliKGEsYyksYz1nKGMpO2QoYSk7ej1wP2coYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9fX1cbmZ1bmN0aW9uIGdmKGEpe2Z1bmN0aW9uIGIoYSxiLGMpe2E9YS5zdGF0ZU5vZGU7YS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWI7YS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1jfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIDI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIGQoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6RChcIjEwOFwiLHpjKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gQSh7fSxiLGMpfXZhciBlPWEuY3JlYXRlQ3Vyc29yLGY9YS5wdXNoLGg9YS5wb3AsZz1lKGphKSxrPWUoITEpLHY9amE7cmV0dXJue2dldFVubWFza2VkQ29udGV4dDpmdW5jdGlvbihhKXtyZXR1cm4gYyhhKT9cbnY6Zy5jdXJyZW50fSxjYWNoZUNvbnRleHQ6YixnZXRNYXNrZWRDb250ZXh0OmZ1bmN0aW9uKGEsYyl7dmFyIGQ9YS50eXBlLmNvbnRleHRUeXBlcztpZighZClyZXR1cm4gamE7dmFyIGU9YS5zdGF0ZU5vZGU7aWYoZSYmZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YylyZXR1cm4gZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZj17fSxnO2ZvcihnIGluIGQpZltnXT1jW2ddO2UmJmIoYSxjLGYpO3JldHVybiBmfSxoYXNDb250ZXh0Q2hhbmdlZDpmdW5jdGlvbigpe3JldHVybiBrLmN1cnJlbnR9LGlzQ29udGV4dENvbnN1bWVyOmZ1bmN0aW9uKGEpe3JldHVybiAyPT09YS50YWcmJm51bGwhPWEudHlwZS5jb250ZXh0VHlwZXN9LGlzQ29udGV4dFByb3ZpZGVyOmMscG9wQ29udGV4dFByb3ZpZGVyOmZ1bmN0aW9uKGEpe2MoYSkmJihoKGssYSksaChnLGEpKX0scG9wVG9wTGV2ZWxDb250ZXh0T2JqZWN0OmZ1bmN0aW9uKGEpe2goayxcbmEpO2goZyxhKX0scHVzaFRvcExldmVsQ29udGV4dE9iamVjdDpmdW5jdGlvbihhLGIsYyl7bnVsbCE9Zy5jdXJzb3I/RChcIjE2OFwiKTp2b2lkIDA7ZihnLGIsYSk7ZihrLGMsYSl9LHByb2Nlc3NDaGlsZENvbnRleHQ6ZCxwdXNoQ29udGV4dFByb3ZpZGVyOmZ1bmN0aW9uKGEpe2lmKCFjKGEpKXJldHVybiExO3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8amE7dj1nLmN1cnJlbnQ7ZihnLGIsYSk7ZihrLGsuY3VycmVudCxhKTtyZXR1cm4hMH0saW52YWxpZGF0ZUNvbnRleHRQcm92aWRlcjpmdW5jdGlvbihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOkQoXCIxNjlcIik7aWYoYil7dmFyIGU9ZChhLHYpO2MuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9ZTtoKGssYSk7aChnLGEpO2YoZyxlLGEpfWVsc2UgaChrLGEpO2YoayxiLGEpfSxmaW5kQ3VycmVudFVubWFza2VkQ29udGV4dDpmdW5jdGlvbihhKXtmb3IoMiE9PVxud2QoYSl8fDIhPT1hLnRhZz9EKFwiMTcwXCIpOnZvaWQgMDszIT09YS50YWc7KXtpZihjKGEpKXJldHVybiBhLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDsoYT1hW1wicmV0dXJuXCJdKT92b2lkIDA6RChcIjE3MVwiKX1yZXR1cm4gYS5zdGF0ZU5vZGUuY29udGV4dH19fVxuZnVuY3Rpb24gaGYoYSl7dmFyIGI9YS5jcmVhdGVDdXJzb3IsYz1hLnB1c2gsZD1hLnBvcCxlPWIobnVsbCksZj1iKG51bGwpLGg9YigwKTtyZXR1cm57cHVzaFByb3ZpZGVyOmZ1bmN0aW9uKGEpe3ZhciBiPWEudHlwZS5fY29udGV4dDtjKGgsYi5fY2hhbmdlZEJpdHMsYSk7YyhmLGIuX2N1cnJlbnRWYWx1ZSxhKTtjKGUsYSxhKTtiLl9jdXJyZW50VmFsdWU9YS5wZW5kaW5nUHJvcHMudmFsdWU7Yi5fY2hhbmdlZEJpdHM9YS5zdGF0ZU5vZGV9LHBvcFByb3ZpZGVyOmZ1bmN0aW9uKGEpe3ZhciBiPWguY3VycmVudCxjPWYuY3VycmVudDtkKGUsYSk7ZChmLGEpO2QoaCxhKTthPWEudHlwZS5fY29udGV4dDthLl9jdXJyZW50VmFsdWU9YzthLl9jaGFuZ2VkQml0cz1ifX19XG5mdW5jdGlvbiBqZigpe3ZhciBhPVtdLGI9LTE7cmV0dXJue2NyZWF0ZUN1cnNvcjpmdW5jdGlvbihhKXtyZXR1cm57Y3VycmVudDphfX0saXNFbXB0eTpmdW5jdGlvbigpe3JldHVybi0xPT09Yn0scG9wOmZ1bmN0aW9uKGMpezA+Ynx8KGMuY3VycmVudD1hW2JdLGFbYl09bnVsbCxiLS0pfSxwdXNoOmZ1bmN0aW9uKGMsZCl7YisrO2FbYl09Yy5jdXJyZW50O2MuY3VycmVudD1kfSxjaGVja1RoYXRTdGFja0lzRW1wdHk6ZnVuY3Rpb24oKXt9LHJlc2V0U3RhY2tBZnRlckZhdGFsRXJyb3JJbkRldjpmdW5jdGlvbigpe319fVxuZnVuY3Rpb24ga2YoYSl7ZnVuY3Rpb24gYigpe2lmKG51bGwhPT1JKWZvcih2YXIgYT1JW1wicmV0dXJuXCJdO251bGwhPT1hOylMYyhhKSxhPWFbXCJyZXR1cm5cIl07WWE9bnVsbDtaPTA7ST1udWxsO05jPSExfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIG51bGwhPT15YSYmeWEuaGFzKGEpfWZ1bmN0aW9uIGQoYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWFbXCJyZXR1cm5cIl0sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyY1MTIpKXtiPUNiKGIsYSxaKTt2YXIgZT1hO2lmKDEwNzM3NDE4MjM9PT1afHwxMDczNzQxODIzIT09ZS5leHBpcmF0aW9uVGltZSl7Yjpzd2l0Y2goZS50YWcpe2Nhc2UgMzpjYXNlIDI6dmFyIGY9ZS51cGRhdGVRdWV1ZTtmPW51bGw9PT1mPzA6Zi5leHBpcmF0aW9uVGltZTticmVhayBiO2RlZmF1bHQ6Zj0wfWZvcih2YXIgZz1lLmNoaWxkO251bGwhPT1nOykwIT09Zy5leHBpcmF0aW9uVGltZSYmKDA9PT1mfHxmPmcuZXhwaXJhdGlvblRpbWUpJiYoZj1cbmcuZXhwaXJhdGlvblRpbWUpLGc9Zy5zaWJsaW5nO2UuZXhwaXJhdGlvblRpbWU9Zn1pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyY1MTIpJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZXtOYz0hMDticmVha319ZWxzZXthPUtjKGEpO2lmKG51bGwhPT1hKXJldHVybiBhLmVmZmVjdFRhZyY9MjU1OSxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9XG5udWxsLGMuZWZmZWN0VGFnfD01MTIpO2lmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBlKGEpe3ZhciBiPVdhKGEuYWx0ZXJuYXRlLGEsWik7bnVsbD09PWImJihiPWQoYSkpO21jLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1mdW5jdGlvbiBmKGEsYyxmKXtjYT9EKFwiMjQzXCIpOnZvaWQgMDtjYT0hMDtpZihjIT09Wnx8YSE9PVlhfHxudWxsPT09SSliKCksWWE9YSxaPWMsST15ZShZYS5jdXJyZW50LG51bGwsWiksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZz0hMTtkb3t0cnl7aWYoZilmb3IoO251bGwhPT1JJiYhUygpOylJPWUoSSk7ZWxzZSBmb3IoO251bGwhPT1JOylJPWUoSSl9Y2F0Y2goT2Mpe2lmKG51bGw9PT1JKXtnPSEwO3EoT2MpO2JyZWFrfWY9STt2YXIgaD1mW1wicmV0dXJuXCJdO2lmKG51bGw9PT1oKXtnPSEwO3EoT2MpO2JyZWFrfUpjKGgsZixPYyk7ST1kKGYpfWJyZWFrfXdoaWxlKDEpO1xuY2E9ITE7aWYoZ3x8bnVsbCE9PUkpcmV0dXJuIG51bGw7aWYoTmMpcmV0dXJuIGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5jdXJyZW50LmFsdGVybmF0ZTtEKFwiMjYyXCIpfWZ1bmN0aW9uIGgoYSxiLGMsZCl7YT17dmFsdWU6Yyxzb3VyY2U6YSxzdGFjazpBYyhhKX07T2UoYix7ZXhwaXJhdGlvblRpbWU6ZCxwYXJ0aWFsU3RhdGU6bnVsbCxjYWxsYmFjazpudWxsLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxjYXB0dXJlZFZhbHVlOmEsbmV4dDpudWxsfSk7dihiLGQpfWZ1bmN0aW9uIGcoYSxiKXthOntjYSYmIVphP0QoXCIyNjNcIik6dm9pZCAwO2Zvcih2YXIgZD1hW1wicmV0dXJuXCJdO251bGwhPT1kOyl7c3dpdGNoKGQudGFnKXtjYXNlIDI6dmFyIGU9ZC5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tQ2F0Y2h8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZENhdGNoJiYhYyhlKSl7aChhLGQsYixcbjEpO2E9dm9pZCAwO2JyZWFrIGF9YnJlYWs7Y2FzZSAzOmgoYSxkLGIsMSk7YT12b2lkIDA7YnJlYWsgYX1kPWRbXCJyZXR1cm5cIl19Mz09PWEudGFnJiZoKGEsYSxiLDEpO2E9dm9pZCAwfXJldHVybiBhfWZ1bmN0aW9uIGsoYSl7YT0wIT09aWE/aWE6Y2E/WmE/MTpaOmEubW9kZSYxP3phPzEwKigoKGwoKSs1MCkvMTB8MCkrMSk6MjUqKCgobCgpKzUwMCkvMjV8MCkrMSk6MTt6YSYmKDA9PT1kYXx8YT5kYSkmJihkYT1hKTtyZXR1cm4gYX1mdW5jdGlvbiB2KGEsYyl7YTp7Zm9yKDtudWxsIT09YTspe2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmMpYS5leHBpcmF0aW9uVGltZT1jO251bGwhPT1hLmFsdGVybmF0ZSYmKDA9PT1hLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZXx8YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU+YykmJihhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT1jKTtpZihudWxsPT09YVtcInJldHVyblwiXSlpZigzPT09YS50YWcpe3ZhciBkPVxuYS5zdGF0ZU5vZGU7IWNhJiYwIT09WiYmYzxaJiZiKCk7Y2EmJiFaYSYmWWE9PT1kfHxCKGQsYyk7RmI+d2cmJkQoXCIxODVcIil9ZWxzZXtjPXZvaWQgMDticmVhayBhfWE9YVtcInJldHVyblwiXX1jPXZvaWQgMH1yZXR1cm4gY31mdW5jdGlvbiBsKCl7dmU9SWMoKS1QYztyZXR1cm4geGc9KHZlLzEwfDApKzJ9ZnVuY3Rpb24gcChhLGIsYyxkLGUpe3ZhciBmPWlhO2lhPTE7dHJ5e3JldHVybiBhKGIsYyxkLGUpfWZpbmFsbHl7aWE9Zn19ZnVuY3Rpb24geihhKXtpZigwIT09R2Ipe2lmKGE+R2IpcmV0dXJuO3lnKFFjKX12YXIgYj1JYygpLVBjO0diPWE7UWM9bGcoUSx7dGltZW91dDoxMCooYS0yKS1ifSl9ZnVuY3Rpb24gQihhLGIpe2lmKG51bGw9PT1hLm5leHRTY2hlZHVsZWRSb290KWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YixudWxsPT09Sz8obGE9Sz1hLGEubmV4dFNjaGVkdWxlZFJvb3Q9YSk6KEs9Sy5uZXh0U2NoZWR1bGVkUm9vdD1hLEsubmV4dFNjaGVkdWxlZFJvb3Q9bGEpO1xuZWxzZXt2YXIgYz1hLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1jfHxiPGMpYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1ifVR8fChKP0hiJiYoYWE9YSxQPTEsRyhhLDEsITEpKToxPT09Yj9uKCk6eihiKSl9ZnVuY3Rpb24gcigpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1LKWZvcih2YXIgYz1LLGQ9bGE7bnVsbCE9PWQ7KXt2YXIgZT1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PUs/RChcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe2xhPUs9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PWxhKWxhPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxLLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PUspe0s9YztLLm5leHRTY2hlZHVsZWRSb290PWxhO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9XG5kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtpZigwPT09YXx8ZTxhKWE9ZSxiPWQ7aWYoZD09PUspYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19Yz1hYTtudWxsIT09YyYmYz09PWImJjE9PT1hP0ZiKys6RmI9MDthYT1iO1A9YX1mdW5jdGlvbiBRKGEpe3goMCwhMCxhKX1mdW5jdGlvbiBuKCl7eCgxLCExLG51bGwpfWZ1bmN0aW9uIHgoYSxiLGMpeyRhPWM7cigpO2lmKGIpZm9yKDtudWxsIT09YWEmJjAhPT1QJiYoMD09PWF8fGE+PVApJiYoIUlifHxsKCk+PVApOylHKGFhLFAsIUliKSxyKCk7ZWxzZSBmb3IoO251bGwhPT1hYSYmMCE9PVAmJigwPT09YXx8YT49UCk7KUcoYWEsUCwhMSkscigpO251bGwhPT0kYSYmKEdiPTAsUWM9LTEpOzAhPT1QJiZ6KFApOyRhPW51bGw7SWI9ITE7WSgpfWZ1bmN0aW9uIFkoKXtGYj0wO2lmKG51bGwhPT1BYSl7dmFyIGE9QWE7QWE9bnVsbDtmb3IodmFyIGI9XG4wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2godmcpe0JhfHwoQmE9ITAsSmI9dmcpfX19aWYoQmEpdGhyb3cgYT1KYixKYj1udWxsLEJhPSExLGE7fWZ1bmN0aW9uIEcoYSxiLGMpe1Q/RChcIjI0NVwiKTp2b2lkIDA7VD0hMDtjPyhjPWEuZmluaXNoZWRXb3JrLG51bGwhPT1jP1IoYSxjLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGM9ZihhLGIsITApLG51bGwhPT1jJiYoUygpP2EuZmluaXNoZWRXb3JrPWM6UihhLGMsYikpKSk6KGM9YS5maW5pc2hlZFdvcmssbnVsbCE9PWM/UihhLGMsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsYz1mKGEsYiwhMSksbnVsbCE9PWMmJlIoYSxjLGIpKSk7VD0hMX1mdW5jdGlvbiBSKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPD1jJiYobnVsbD09PUFhP0FhPVtkXTpBYS5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPVxuMDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDtaYT1jYT0hMDtjPWIuc3RhdGVOb2RlO2MuY3VycmVudD09PWI/RChcIjE3N1wiKTp2b2lkIDA7ZD1jLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09ZD9EKFwiMjYxXCIpOnZvaWQgMDtjLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBlPWwoKTttYy5jdXJyZW50PW51bGw7aWYoMTxiLmVmZmVjdFRhZylpZihudWxsIT09Yi5sYXN0RWZmZWN0KXtiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iO3ZhciBmPWIuZmlyc3RFZmZlY3R9ZWxzZSBmPWI7ZWxzZSBmPWIuZmlyc3RFZmZlY3Q7emcoYy5jb250YWluZXJJbmZvKTtmb3Iodz1mO251bGwhPT13Oyl7dmFyIGg9ITEsaz12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PXc7KXcuZWZmZWN0VGFnJjIwNDgmJkRiKHcuYWx0ZXJuYXRlLHcpLHc9dy5uZXh0RWZmZWN0fWNhdGNoKGFiKXtoPSEwLGs9YWJ9aCYmKG51bGw9PT13P0QoXCIxNzhcIik6dm9pZCAwLGcodyxrKSxudWxsIT09XG53JiYodz13Lm5leHRFZmZlY3QpKX1mb3Iodz1mO251bGwhPT13Oyl7aD0hMTtrPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09dzspe3ZhciBwPXcuZWZmZWN0VGFnO3AmMTYmJk1jKHcpO2lmKHAmMTI4KXt2YXIgbj13LmFsdGVybmF0ZTtudWxsIT09biYma2cobil9c3dpdGNoKHAmMTQpe2Nhc2UgMjpFYih3KTt3LmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OkViKHcpO3cuZWZmZWN0VGFnJj0tMzt0ZSh3LmFsdGVybmF0ZSx3KTticmVhaztjYXNlIDQ6dGUody5hbHRlcm5hdGUsdyk7YnJlYWs7Y2FzZSA4OmdnKHcpfXc9dy5uZXh0RWZmZWN0fX1jYXRjaChhYil7aD0hMCxrPWFifWgmJihudWxsPT09dz9EKFwiMTc4XCIpOnZvaWQgMCxnKHcsayksbnVsbCE9PXcmJih3PXcubmV4dEVmZmVjdCkpfUFnKGMuY29udGFpbmVySW5mbyk7Yy5jdXJyZW50PWI7Zm9yKHc9ZjtudWxsIT09dzspe3A9ITE7bj12b2lkIDA7dHJ5e2ZvcihmPWMsaD1lLGs9ZDtudWxsIT09dzspe3ZhciByPXcuZWZmZWN0VGFnO1xuciYzNiYmaGcoZix3LmFsdGVybmF0ZSx3LGgsayk7ciYyNTYmJmlnKHcscSk7ciYxMjgmJmpnKHcpO3ZhciB0PXcubmV4dEVmZmVjdDt3Lm5leHRFZmZlY3Q9bnVsbDt3PXR9fWNhdGNoKGFiKXtwPSEwLG49YWJ9cCYmKG51bGw9PT13P0QoXCIxNzhcIik6dm9pZCAwLGcodyxuKSxudWxsIT09dyYmKHc9dy5uZXh0RWZmZWN0KSl9Y2E9WmE9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIEhlJiZIZShiLnN0YXRlTm9kZSk7Yj1jLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MD09PWImJih5YT1udWxsKTthLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9ZnVuY3Rpb24gUygpe3JldHVybiBudWxsPT09JGF8fCRhLnRpbWVSZW1haW5pbmcoKT5CZz8hMTpJYj0hMH1mdW5jdGlvbiBxKGEpe251bGw9PT1hYT9EKFwiMjQ2XCIpOnZvaWQgMDthYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT0wO0JhfHwoQmE9ITAsSmI9YSl9dmFyIHU9amYoKSx0PWVmKGEsdSkseT1nZih1KTt1PWhmKHUpO3ZhciBIPWZmKGEpLFxuV2E9WmUoYSx0LHksdSxILHYsaykuYmVnaW5Xb3JrLENiPSRlKGEsdCx5LHUsSCkuY29tcGxldGVXb3JrO3Q9YWYodCx5LHUsdixjKTt2YXIgSmM9dC50aHJvd0V4Y2VwdGlvbixLYz10LnVud2luZFdvcmssTGM9dC51bndpbmRJbnRlcnJ1cHRlZFdvcms7dD1jZihhLGcsdixrLGZ1bmN0aW9uKGEpe251bGw9PT15YT95YT1uZXcgU2V0KFthXSk6eWEuYWRkKGEpfSxsKTt2YXIgRGI9dC5jb21taXRCZWZvcmVNdXRhdGlvbkxpZmVDeWNsZXMsTWM9dC5jb21taXRSZXNldFRleHRDb250ZW50LEViPXQuY29tbWl0UGxhY2VtZW50LGdnPXQuY29tbWl0RGVsZXRpb24sdGU9dC5jb21taXRXb3JrLGhnPXQuY29tbWl0TGlmZUN5Y2xlcyxpZz10LmNvbW1pdEVycm9yTG9nZ2luZyxqZz10LmNvbW1pdEF0dGFjaFJlZixrZz10LmNvbW1pdERldGFjaFJlZixJYz1hLm5vdyxsZz1hLnNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjayx5Zz1hLmNhbmNlbERlZmVycmVkQ2FsbGJhY2ssemc9YS5wcmVwYXJlRm9yQ29tbWl0LFxuQWc9YS5yZXNldEFmdGVyQ29tbWl0LFBjPUljKCkseGc9Mix2ZT1QYyxSYz0wLGlhPTAsY2E9ITEsST1udWxsLFlhPW51bGwsWj0wLHc9bnVsbCxaYT0hMSxOYz0hMSx5YT1udWxsLGxhPW51bGwsSz1udWxsLEdiPTAsUWM9LTEsVD0hMSxhYT1udWxsLFA9MCxkYT0wLEliPSExLEJhPSExLEpiPW51bGwsJGE9bnVsbCxKPSExLEhiPSExLHphPSExLEFhPW51bGwsd2c9MUUzLEZiPTAsQmc9MTtyZXR1cm57cmVjYWxjdWxhdGVDdXJyZW50VGltZTpsLGNvbXB1dGVFeHBpcmF0aW9uRm9yRmliZXI6ayxzY2hlZHVsZVdvcms6dixyZXF1ZXN0V29yazpCLGZsdXNoUm9vdDpmdW5jdGlvbihhLGIpe1Q/RChcIjI1M1wiKTp2b2lkIDA7YWE9YTtQPWI7RyhhLGIsITEpO24oKTtZKCl9LGJhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEsYil7dmFyIGM9SjtKPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhKPWMpfHxUfHxuKCl9fSx1bmJhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEsYil7aWYoSiYmIUhiKXtIYj1cbiEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e0hiPSExfX1yZXR1cm4gYShiKX0sZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7VD9EKFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1KO0o9ITA7dHJ5e3JldHVybiBwKGEsYil9ZmluYWxseXtKPWMsbigpfX0sZmx1c2hDb250cm9sbGVkOmZ1bmN0aW9uKGEpe3ZhciBiPUo7Sj0hMDt0cnl7cChhKX1maW5hbGx5eyhKPWIpfHxUfHx4KDEsITEsbnVsbCl9fSxkZWZlcnJlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7dmFyIGI9aWE7aWE9MjUqKCgobCgpKzUwMCkvMjV8MCkrMSk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtpYT1ifX0sc3luY1VwZGF0ZXM6cCxpbnRlcmFjdGl2ZVVwZGF0ZXM6ZnVuY3Rpb24oYSxiLGMpe2lmKHphKXJldHVybiBhKGIsYyk7Snx8VHx8MD09PWRhfHwoeChkYSwhMSxudWxsKSxkYT0wKTt2YXIgZD16YSxlPUo7Sj16YT0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e3phPWQsKEo9ZSl8fFR8fG4oKX19LGZsdXNoSW50ZXJhY3RpdmVVcGRhdGVzOmZ1bmN0aW9uKCl7VHx8XG4wPT09ZGF8fCh4KGRhLCExLG51bGwpLGRhPTApfSxjb21wdXRlVW5pcXVlQXN5bmNFeHBpcmF0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9MjUqKCgobCgpKzUwMCkvMjV8MCkrMSk7YTw9UmMmJihhPVJjKzEpO3JldHVybiBSYz1hfSxsZWdhY3lDb250ZXh0Onl9fVxuZnVuY3Rpb24gbGYoYSl7ZnVuY3Rpb24gYihhLGIsYyxkLGUsZil7ZD1iLmN1cnJlbnQ7aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGc9ayhjKTtjPXYoYyk/bChjLGcpOmd9ZWxzZSBjPWphO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZjtPZShkLHtleHBpcmF0aW9uVGltZTplLHBhcnRpYWxTdGF0ZTp7ZWxlbWVudDphfSxjYWxsYmFjazp2b2lkIDA9PT1iP251bGw6Yixpc1JlcGxhY2U6ITEsaXNGb3JjZWQ6ITEsY2FwdHVyZWRWYWx1ZTpudWxsLG5leHQ6bnVsbH0pO2goZCxlKTtyZXR1cm4gZX1mdW5jdGlvbiBjKGEpe2E9QWQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9dmFyIGQ9YS5nZXRQdWJsaWNJbnN0YW5jZTthPWtmKGEpO3ZhciBlPWEucmVjYWxjdWxhdGVDdXJyZW50VGltZSxmPWEuY29tcHV0ZUV4cGlyYXRpb25Gb3JGaWJlcixoPWEuc2NoZWR1bGVXb3JrLGc9YS5sZWdhY3lDb250ZXh0LFxuaz1nLmZpbmRDdXJyZW50VW5tYXNrZWRDb250ZXh0LHY9Zy5pc0NvbnRleHRQcm92aWRlcixsPWcucHJvY2Vzc0NoaWxkQ29udGV4dDtyZXR1cm57Y3JlYXRlQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjKXtiPW5ldyB4ZSgzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMscmVtYWluaW5nRXhwaXJhdGlvblRpbWU6MCxmaXJzdEJhdGNoOm51bGwsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07cmV0dXJuIGIuc3RhdGVOb2RlPWF9LHVwZGF0ZUNvbnRhaW5lcjpmdW5jdGlvbihhLGMsZCxnKXt2YXIgaD1jLmN1cnJlbnQsaz1lKCk7aD1mKGgpO3JldHVybiBiKGEsYyxkLGssaCxnKX0sdXBkYXRlQ29udGFpbmVyQXRFeHBpcmF0aW9uVGltZTpmdW5jdGlvbihhLFxuYyxkLGYsZyl7dmFyIGg9ZSgpO3JldHVybiBiKGEsYyxkLGgsZixnKX0sZmx1c2hSb290OmEuZmx1c2hSb290LHJlcXVlc3RXb3JrOmEucmVxdWVzdFdvcmssY29tcHV0ZVVuaXF1ZUFzeW5jRXhwaXJhdGlvbjphLmNvbXB1dGVVbmlxdWVBc3luY0V4cGlyYXRpb24sYmF0Y2hlZFVwZGF0ZXM6YS5iYXRjaGVkVXBkYXRlcyx1bmJhdGNoZWRVcGRhdGVzOmEudW5iYXRjaGVkVXBkYXRlcyxkZWZlcnJlZFVwZGF0ZXM6YS5kZWZlcnJlZFVwZGF0ZXMsc3luY1VwZGF0ZXM6YS5zeW5jVXBkYXRlcyxpbnRlcmFjdGl2ZVVwZGF0ZXM6YS5pbnRlcmFjdGl2ZVVwZGF0ZXMsZmx1c2hJbnRlcmFjdGl2ZVVwZGF0ZXM6YS5mbHVzaEludGVyYWN0aXZlVXBkYXRlcyxmbHVzaENvbnRyb2xsZWQ6YS5mbHVzaENvbnRyb2xsZWQsZmx1c2hTeW5jOmEuZmx1c2hTeW5jLGdldFB1YmxpY1Jvb3RJbnN0YW5jZTpmdW5jdGlvbihhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gZChhLmNoaWxkLnN0YXRlTm9kZSk7XG5kZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19LGZpbmRIb3N0SW5zdGFuY2U6YyxmaW5kSG9zdEluc3RhbmNlV2l0aE5vUG9ydGFsczpmdW5jdGlvbihhKXthPUJkKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxpbmplY3RJbnRvRGV2VG9vbHM6ZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gR2UoQSh7fSxhLHtmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXtyZXR1cm4gYyhhKX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX19fXZhciBtZj1PYmplY3QuZnJlZXplKHtkZWZhdWx0OmxmfSksbmY9bWYmJmxmfHxtZixvZj1uZltcImRlZmF1bHRcIl0/bmZbXCJkZWZhdWx0XCJdOm5mO1xuZnVuY3Rpb24gcGYoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpxYyxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX12YXIgcWY9XCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyxyZj12b2lkIDA7cmY9cWY/ZnVuY3Rpb24oKXtyZXR1cm4gcGVyZm9ybWFuY2Uubm93KCl9OmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCl9O3ZhciBzZj12b2lkIDAsdGY9dm9pZCAwO1xuaWYobS5jYW5Vc2VET00paWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHJlcXVlc3RJZGxlQ2FsbGJhY2t8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjYW5jZWxJZGxlQ2FsbGJhY2spe3ZhciB1Zj1udWxsLHZmPSExLHdmPS0xLHhmPSExLHlmPTAsemY9MzMsQWY9MzMsQmY9dm9pZCAwO0JmPXFmP3tkaWRUaW1lb3V0OiExLHRpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXt2YXIgYT15Zi1wZXJmb3JtYW5jZS5ub3coKTtyZXR1cm4gMDxhP2E6MH19OntkaWRUaW1lb3V0OiExLHRpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXt2YXIgYT15Zi1EYXRlLm5vdygpO3JldHVybiAwPGE/YTowfX07dmFyIENmPVwiX19yZWFjdElkbGVDYWxsYmFjayRcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixmdW5jdGlvbihhKXtpZihhLnNvdXJjZT09PXdpbmRvdyYmYS5kYXRhPT09Q2Ype3ZmPSExO2E9cmYoKTtpZigwPj15Zi1hKWlmKC0xIT09XG53ZiYmd2Y8PWEpQmYuZGlkVGltZW91dD0hMDtlbHNle3hmfHwoeGY9ITAscmVxdWVzdEFuaW1hdGlvbkZyYW1lKERmKSk7cmV0dXJufWVsc2UgQmYuZGlkVGltZW91dD0hMTt3Zj0tMTthPXVmO3VmPW51bGw7bnVsbCE9PWEmJmEoQmYpfX0sITEpO3ZhciBEZj1mdW5jdGlvbihhKXt4Zj0hMTt2YXIgYj1hLXlmK0FmO2I8QWYmJnpmPEFmPyg4PmImJihiPTgpLEFmPWI8emY/emY6Yik6emY9Yjt5Zj1hK0FmO3ZmfHwodmY9ITAsd2luZG93LnBvc3RNZXNzYWdlKENmLFwiKlwiKSl9O3NmPWZ1bmN0aW9uKGEsYil7dWY9YTtudWxsIT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCYmKHdmPXJmKCkrYi50aW1lb3V0KTt4Znx8KHhmPSEwLHJlcXVlc3RBbmltYXRpb25GcmFtZShEZikpO3JldHVybiAwfTt0Zj1mdW5jdGlvbigpe3VmPW51bGw7dmY9ITE7d2Y9LTF9fWVsc2Ugc2Y9d2luZG93LnJlcXVlc3RJZGxlQ2FsbGJhY2ssdGY9d2luZG93LmNhbmNlbElkbGVDYWxsYmFjaztlbHNlIHNmPVxuZnVuY3Rpb24oYSl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXthKHt0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIEluZmluaXR5fSxkaWRUaW1lb3V0OiExfSl9KX0sdGY9ZnVuY3Rpb24oYSl7Y2xlYXJUaW1lb3V0KGEpfTtmdW5jdGlvbiBFZihhKXt2YXIgYj1cIlwiO2JhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsPT1hfHxcInN0cmluZ1wiIT09dHlwZW9mIGEmJlwibnVtYmVyXCIhPT10eXBlb2YgYXx8KGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gRmYoYSxiKXthPUEoe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1FZihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBHZihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrYztiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSGYoYSxiKXt2YXIgYz1iLnZhbHVlO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOm51bGwhPWM/YzpiLmRlZmF1bHRWYWx1ZSx3YXNNdWx0aXBsZTohIWIubXVsdGlwbGV9fWZ1bmN0aW9uIElmKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9EKFwiOTFcIik6dm9pZCAwO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpmKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/RChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOkQoXCI5M1wiKSxiPWJbMF0pLGM9XCJcIitiKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6XCJcIitjfX1cbmZ1bmN0aW9uIEtmKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9Yi5kZWZhdWx0VmFsdWUpfWZ1bmN0aW9uIExmKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBNZj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOZihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9mKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OZihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQZj12b2lkIDAsUWY9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWYuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGY9UGZ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGYuaW5uZXJIVE1MPVwiXFx4M2NzdmdcXHgzZVwiK2IrXCJcXHgzYy9zdmdcXHgzZVwiO2ZvcihiPVBmLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJmKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgU2Y9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxcbnN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sVGY9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKFNmKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe1RmLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7U2ZbYl09U2ZbYV19KX0pO1xuZnVuY3Rpb24gVWYoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpO3ZhciBlPWM7dmFyIGY9YltjXTtlPW51bGw9PWZ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGZ8fFwiXCI9PT1mP1wiXCI6ZHx8XCJudW1iZXJcIiE9PXR5cGVvZiBmfHwwPT09Znx8U2YuaGFzT3duUHJvcGVydHkoZSkmJlNmW2VdPyhcIlwiK2YpLnRyaW0oKTpmK1wicHhcIjtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIFZmPUEoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBXZihhLGIsYyl7YiYmKFZmW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9EKFwiMTM3XCIsYSxjKCkpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/RChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDpEKFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT9EKFwiNjJcIixjKCkpOnZvaWQgMCl9XG5mdW5jdGlvbiBYZihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIFlmPU1mLmh0bWwsWmY9Qy50aGF0UmV0dXJucyhcIlwiKTtcbmZ1bmN0aW9uICRmKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWplKGEpO2I9dWFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07Yy5oYXNPd25Qcm9wZXJ0eShlKSYmY1tlXXx8KFwidG9wU2Nyb2xsXCI9PT1lP1lkKFwidG9wU2Nyb2xsXCIsXCJzY3JvbGxcIixhKTpcInRvcEZvY3VzXCI9PT1lfHxcInRvcEJsdXJcIj09PWU/KFlkKFwidG9wRm9jdXNcIixcImZvY3VzXCIsYSksWWQoXCJ0b3BCbHVyXCIsXCJibHVyXCIsYSksYy50b3BCbHVyPSEwLGMudG9wRm9jdXM9ITApOlwidG9wQ2FuY2VsXCI9PT1lPyhoYyhcImNhbmNlbFwiLCEwKSYmWWQoXCJ0b3BDYW5jZWxcIixcImNhbmNlbFwiLGEpLGMudG9wQ2FuY2VsPSEwKTpcInRvcENsb3NlXCI9PT1lPyhoYyhcImNsb3NlXCIsITApJiZZZChcInRvcENsb3NlXCIsXCJjbG9zZVwiLGEpLGMudG9wQ2xvc2U9ITApOmVlLmhhc093blByb3BlcnR5KGUpJiZXKGUsZWVbZV0sYSksY1tlXT0hMCl9fVxuZnVuY3Rpb24gYWcoYSxiLGMsZCl7Yz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtkPT09WWYmJihkPU5mKGEpKTtkPT09WWY/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiXFx4M2NzY3JpcHRcXHgzZVxceDNjL3NjcmlwdFxceDNlXCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX1mdW5jdGlvbiBiZyhhLGIpe3JldHVybig5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoYSl9XG5mdW5jdGlvbiBjZyhhLGIsYyxkKXt2YXIgZT1YZihiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOlcoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7dmFyIGY9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZiBpbiBmZSlmZS5oYXNPd25Qcm9wZXJ0eShmKSYmVyhmLGZlW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6VyhcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpXKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7VyhcInRvcExvYWRcIixcImxvYWRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImZvcm1cIjpXKFwidG9wUmVzZXRcIixcInJlc2V0XCIsYSk7VyhcInRvcFN1Ym1pdFwiLFwic3VibWl0XCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6VyhcInRvcFRvZ2dsZVwiLFwidG9nZ2xlXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlZjKGEsYyk7Zj1VYyhhLGMpO1coXCJ0b3BJbnZhbGlkXCIsXG5cImludmFsaWRcIixhKTskZihkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9RmYoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6SGYoYSxjKTtmPUEoe30sYyx7dmFsdWU6dm9pZCAwfSk7VyhcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTskZihkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmYoYSxjKTtmPUlmKGEsYyk7VyhcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTskZihkLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpmPWN9V2YoYixmLFpmKTt2YXIgaD1mLGc7Zm9yKGcgaW4gaClpZihoLmhhc093blByb3BlcnR5KGcpKXt2YXIgaz1oW2ddO1wic3R5bGVcIj09PWc/VWYoYSxrLFpmKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJlFmKGEsaykpOlwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1ifHxcIlwiIT09aykmJlJmKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZcblJmKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWcmJlwiYXV0b0ZvY3VzXCIhPT1nJiYodGEuaGFzT3duUHJvcGVydHkoZyk/bnVsbCE9ayYmJGYoZCxnKTpudWxsIT1rJiZUYyhhLGcsayxlKSl9c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmtjKGEpOyRjKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6a2MoYSk7TGYoYSxjKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9Yy52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGMudmFsdWUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhYy5tdWx0aXBsZTtiPWMudmFsdWU7bnVsbCE9Yj9HZihhLCEhYy5tdWx0aXBsZSxiLCExKTpudWxsIT1jLmRlZmF1bHRWYWx1ZSYmR2YoYSwhIWMubXVsdGlwbGUsYy5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGEub25jbGljaz1DKX19XG5mdW5jdGlvbiBkZyhhLGIsYyxkLGUpe3ZhciBmPW51bGw7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmM9VWMoYSxjKTtkPVVjKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Yz1GZihhLGMpO2Q9RmYoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjPUEoe30sYyx7dmFsdWU6dm9pZCAwfSk7ZD1BKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Yz1JZihhLGMpO2Q9SWYoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGMub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1DKX1XZihiLGQsWmYpO2I9YT12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYSBpbiBjKWlmKCFkLmhhc093blByb3BlcnR5KGEpJiZjLmhhc093blByb3BlcnR5KGEpJiZudWxsIT1jW2FdKWlmKFwic3R5bGVcIj09PWEpe3ZhciBnPWNbYV07Zm9yKGIgaW4gZylnLmhhc093blByb3BlcnR5KGIpJiYoaHx8XG4oaD17fSksaFtiXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YSYmXCJjaGlsZHJlblwiIT09YSYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWEmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1hJiZcImF1dG9Gb2N1c1wiIT09YSYmKHRhLmhhc093blByb3BlcnR5KGEpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChhLG51bGwpKTtmb3IoYSBpbiBkKXt2YXIgaz1kW2FdO2c9bnVsbCE9Yz9jW2FdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGEpJiZrIT09ZyYmKG51bGwhPWt8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWEpaWYoZyl7Zm9yKGIgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShiKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShiKXx8KGh8fChoPXt9KSxoW2JdPVwiXCIpO2ZvcihiIGluIGspay5oYXNPd25Qcm9wZXJ0eShiKSYmZ1tiXSE9PWtbYl0mJihofHwoaD17fSksaFtiXT1rW2JdKX1lbHNlIGh8fChmfHwoZj1bXSksZi5wdXNoKGEsaCkpLFxuaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1hPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmZyE9PWsmJihmPWZ8fFtdKS5wdXNoKGEsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09YT9nPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YSYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWEmJih0YS5oYXNPd25Qcm9wZXJ0eShhKT8obnVsbCE9ayYmJGYoZSxhKSxmfHxnPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChhLGspKX1oJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsaCk7cmV0dXJuIGZ9XG5mdW5jdGlvbiBlZyhhLGIsYyxkLGUpe1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZYYyhhLGUpO1hmKGMsZCk7ZD1YZihjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGg9YltmXSxnPWJbZisxXTtcInN0eWxlXCI9PT1oP1VmKGEsZyxaZik6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD9RZihhLGcpOlwiY2hpbGRyZW5cIj09PWg/UmYoYSxnKTpUYyhhLGgsZyxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6WWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpLZihhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlPXZvaWQgMCxiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP0dmKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9cbkdmKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLCEwKTpHZihhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19XG5mdW5jdGlvbiBmZyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOlcoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKHZhciBmIGluIGZlKWZlLmhhc093blByb3BlcnR5KGYpJiZXKGYsZmVbZl0sYSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOlcoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpXKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7VyhcInRvcExvYWRcIixcImxvYWRcIixhKTticmVhaztjYXNlIFwiZm9ybVwiOlcoXCJ0b3BSZXNldFwiLFwicmVzZXRcIixhKTtXKFwidG9wU3VibWl0XCIsXCJzdWJtaXRcIixhKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOlcoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlZjKGEsYyk7VyhcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTskZihlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOkhmKGEsXG5jKTtXKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpOyRmKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKZihhLGMpLFcoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSksJGYoZSxcIm9uQ2hhbmdlXCIpfVdmKGIsYyxaZik7ZD1udWxsO2Zvcih2YXIgaCBpbiBjKWMuaGFzT3duUHJvcGVydHkoaCkmJihmPWNbaF0sXCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGY/YS50ZXh0Q29udGVudCE9PWYmJihkPVtcImNoaWxkcmVuXCIsZl0pOlwibnVtYmVyXCI9PT10eXBlb2YgZiYmYS50ZXh0Q29udGVudCE9PVwiXCIrZiYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ZdKTp0YS5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZiYmJGYoZSxoKSk7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmtjKGEpOyRjKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6a2MoYSk7TGYoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGMub25DbGljayYmXG4oYS5vbmNsaWNrPUMpfXJldHVybiBkfWZ1bmN0aW9uIG1nKGEsYil7cmV0dXJuIGEubm9kZVZhbHVlIT09Yn1cbnZhciBuZz1PYmplY3QuZnJlZXplKHtjcmVhdGVFbGVtZW50OmFnLGNyZWF0ZVRleHROb2RlOmJnLHNldEluaXRpYWxQcm9wZXJ0aWVzOmNnLGRpZmZQcm9wZXJ0aWVzOmRnLHVwZGF0ZVByb3BlcnRpZXM6ZWcsZGlmZkh5ZHJhdGVkUHJvcGVydGllczpmZyxkaWZmSHlkcmF0ZWRUZXh0Om1nLHdhcm5Gb3JVbm1hdGNoZWRUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dDpmdW5jdGlvbigpe30scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOlljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1cbmMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWVcXHgzZFwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZVxceDNkXCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9VmEoZCk7ZT92b2lkIDA6RChcIjkwXCIpO2xjKGQpO1ljKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLZihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmR2YoYSwhIWMubXVsdGlwbGUsYiwhMSl9fX0pO1ZiLmluamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQobmcpO3ZhciBvZz1udWxsLHBnPW51bGw7XG5mdW5jdGlvbiBxZyhhKXt0aGlzLl9leHBpcmF0aW9uVGltZT1YLmNvbXB1dGVVbmlxdWVBc3luY0V4cGlyYXRpb24oKTt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfXFnLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOkQoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyByZztYLnVwZGF0ZUNvbnRhaW5lckF0RXhwaXJhdGlvblRpbWUoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xucWcucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xucWcucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOkQoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/RChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtYLmZsdXNoUm9vdChhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTtxZy5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gcmcoKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1yZy5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xucmcucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/RChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07ZnVuY3Rpb24gc2coYSxiLGMpe3RoaXMuX2ludGVybmFsUm9vdD1YLmNyZWF0ZUNvbnRhaW5lcihhLGIsYyl9c2cucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyByZztiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7WC51cGRhdGVDb250YWluZXIoYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtcbnNnLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyByZzthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7WC51cGRhdGVDb250YWluZXIobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtzZy5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcgcmc7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO1gudXBkYXRlQ29udGFpbmVyKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XG5zZy5wcm90b3R5cGUuY3JlYXRlQmF0Y2g9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgcWcodGhpcyksYj1hLl9leHBpcmF0aW9uVGltZSxjPXRoaXMuX2ludGVybmFsUm9vdCxkPWMuZmlyc3RCYXRjaDtpZihudWxsPT09ZCljLmZpcnN0QmF0Y2g9YSxhLl9uZXh0PW51bGw7ZWxzZXtmb3IoYz1udWxsO251bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZTw9YjspYz1kLGQ9ZC5fbmV4dDthLl9uZXh0PWQ7bnVsbCE9PWMmJihjLl9uZXh0PWEpfXJldHVybiBhfTtmdW5jdGlvbiB0ZyhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiB1ZyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG52YXIgWD1vZih7Z2V0Um9vdEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZVR5cGU7c3dpdGNoKGIpe2Nhc2UgOTpjYXNlIDExOmE9KGE9YS5kb2N1bWVudEVsZW1lbnQpP2EubmFtZXNwYWNlVVJJOk9mKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpiPTg9PT1iP2EucGFyZW50Tm9kZTphLGE9Yi5uYW1lc3BhY2VVUkl8fG51bGwsYj1iLnRhZ05hbWUsYT1PZihhLGIpfXJldHVybiBhfSxnZXRDaGlsZEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIE9mKGEsYil9LGdldFB1YmxpY0luc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxwcmVwYXJlRm9yQ29tbWl0OmZ1bmN0aW9uKCl7b2c9VWQ7dmFyIGE9ZWEoKTtpZihtZShhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYj17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7dmFyIGM9d2luZG93LmdldFNlbGVjdGlvbiYmd2luZG93LmdldFNlbGVjdGlvbigpO1xuaWYoYyYmMCE9PWMucmFuZ2VDb3VudCl7Yj1jLmFuY2hvck5vZGU7dmFyIGQ9Yy5hbmNob3JPZmZzZXQsZT1jLmZvY3VzTm9kZTtjPWMuZm9jdXNPZmZzZXQ7dHJ5e2Iubm9kZVR5cGUsZS5ub2RlVHlwZX1jYXRjaChCKXtiPW51bGw7YnJlYWsgYX12YXIgZj0wLGg9LTEsZz0tMSxrPTAsdj0wLGw9YSxwPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgejs7KXtsIT09Ynx8MCE9PWQmJjMhPT1sLm5vZGVUeXBlfHwoaD1mK2QpO2whPT1lfHwwIT09YyYmMyE9PWwubm9kZVR5cGV8fChnPWYrYyk7Mz09PWwubm9kZVR5cGUmJihmKz1sLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oej1sLmZpcnN0Q2hpbGQpKWJyZWFrO3A9bDtsPXp9Zm9yKDs7KXtpZihsPT09YSlicmVhayBiO3A9PT1iJiYrK2s9PT1kJiYoaD1mKTtwPT09ZSYmKyt2PT09YyYmKGc9Zik7aWYobnVsbCE9PSh6PWwubmV4dFNpYmxpbmcpKWJyZWFrO2w9cDtwPWwucGFyZW50Tm9kZX1sPXp9Yj0tMT09PWh8fC0xPT09Zz9udWxsOlxue3N0YXJ0OmgsZW5kOmd9fWVsc2UgYj1udWxsfWI9Ynx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYj1udWxsO3BnPXtmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmJ9O1ZkKCExKX0scmVzZXRBZnRlckNvbW1pdDpmdW5jdGlvbigpe3ZhciBhPXBnLGI9ZWEoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZoYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG1lKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYod2luZG93LmdldFNlbGVjdGlvbil7Yj13aW5kb3cuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Y1tsYigpXS5sZW5ndGg7YT1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/YTpNYXRoLm1pbihkLmVuZCxlKTshYi5leHRlbmQmJmE+XG5kJiYoZT1kLGQ9YSxhPWUpO2U9bGUoYyxhKTt2YXIgZj1sZShjLGQpO2lmKGUmJmYmJigxIT09Yi5yYW5nZUNvdW50fHxiLmFuY2hvck5vZGUhPT1lLm5vZGV8fGIuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGIuZm9jdXNOb2RlIT09Zi5ub2RlfHxiLmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpKXt2YXIgaD1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO2guc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KTtiLnJlbW92ZUFsbFJhbmdlcygpO2E+ZD8oYi5hZGRSYW5nZShoKSxiLmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKTooaC5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSxiLmFkZFJhbmdlKGgpKX19Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7Yy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxcbmEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9cGc9bnVsbDtWZChvZyk7b2c9bnVsbH0sY3JlYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCxlKXthPWFnKGEsYixjLGQpO2FbRl09ZTthW1NhXT1iO3JldHVybiBhfSxhcHBlbmRJbml0aWFsQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLmFwcGVuZENoaWxkKGIpfSxmaW5hbGl6ZUluaXRpYWxDaGlsZHJlbjpmdW5jdGlvbihhLGIsYyxkKXtjZyhhLGIsYyxkKTtyZXR1cm4gdWcoYixjKX0scHJlcGFyZVVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBkZyhhLGIsYyxkLGUpfSxzaG91bGRTZXRUZXh0Q29udGVudDpmdW5jdGlvbihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcInN0cmluZ1wiPT09XG50eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9LHNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4hIWIuaGlkZGVufSxjcmVhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCl7YT1iZyhhLGIpO2FbRl09ZDtyZXR1cm4gYX0sbm93OnJmLG11dGF0aW9uOntjb21taXRNb3VudDpmdW5jdGlvbihhLGIsYyl7dWcoYixjKSYmYS5mb2N1cygpfSxjb21taXRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXthW1NhXT1lO2VnKGEsYixjLGQsZSl9LHJlc2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSl7UmYoYSxcIlwiKX0sY29tbWl0VGV4dFVwZGF0ZTpmdW5jdGlvbihhLGIsYyl7YS5ub2RlVmFsdWU9Y30sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLmFwcGVuZENoaWxkKGIpfSxhcHBlbmRDaGlsZFRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYil7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShiLGEpOmEuYXBwZW5kQ2hpbGQoYil9LFxuaW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKGEsYixjKXthLmluc2VydEJlZm9yZShiLGMpfSxpbnNlcnRJbkNvbnRhaW5lckJlZm9yZTpmdW5jdGlvbihhLGIsYyl7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShiLGMpOmEuaW5zZXJ0QmVmb3JlKGIsYyl9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKGEsYil7YS5yZW1vdmVDaGlsZChiKX0scmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyOmZ1bmN0aW9uKGEsYil7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpOmEucmVtb3ZlQ2hpbGQoYil9fSxoeWRyYXRpb246e2Nhbkh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3JldHVybiAxIT09YS5ub2RlVHlwZXx8Yi50b0xvd2VyQ2FzZSgpIT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YX0sY2FuSHlkcmF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3JldHVyblwiXCI9PT1ifHwzIT09YS5ub2RlVHlwZT9udWxsOmF9LGdldE5leHRIeWRyYXRhYmxlU2libGluZzpmdW5jdGlvbihhKXtmb3IoYT1cbmEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9LGdldEZpcnN0SHlkcmF0YWJsZUNoaWxkOmZ1bmN0aW9uKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX0saHlkcmF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXthW0ZdPWY7YVtTYV09YztyZXR1cm4gZmcoYSxiLGMsZSxkKX0saHlkcmF0ZVRleHRJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7YVtGXT1jO3JldHVybiBtZyhhLGIpfSxkaWROb3RNYXRjaEh5ZHJhdGVkQ29udGFpbmVyVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RNYXRjaEh5ZHJhdGVkVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RIeWRyYXRlQ29udGFpbmVySW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbigpe30sXG5kaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lckluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lclRleHRJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9fSxzY2hlZHVsZURlZmVycmVkQ2FsbGJhY2s6c2YsY2FuY2VsRGVmZXJyZWRDYWxsYmFjazp0Zn0pLENnPVg7JGI9Q2cuYmF0Y2hlZFVwZGF0ZXM7YWM9Q2cuaW50ZXJhY3RpdmVVcGRhdGVzO2JjPUNnLmZsdXNoSW50ZXJhY3RpdmVVcGRhdGVzO1xuZnVuY3Rpb24gRGcoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBzZyhhLCExLGIpfVxuZnVuY3Rpb24gRWcoYSxiLGMsZCxlKXt0ZyhjKT92b2lkIDA6RChcIjIwMFwiKTt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVguZ2V0UHVibGljUm9vdEluc3RhbmNlKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9RGcoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9WC5nZXRQdWJsaWNSb290SW5zdGFuY2UoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fVgudW5iYXRjaGVkVXBkYXRlcyhmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gWC5nZXRQdWJsaWNSb290SW5zdGFuY2UoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIEZnKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7dGcoYik/dm9pZCAwOkQoXCIyMDBcIik7cmV0dXJuIHBmKGEsYixudWxsLGMpfVxudmFyIEdnPXtjcmVhdGVQb3J0YWw6RmcsZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYoYilyZXR1cm4gWC5maW5kSG9zdEluc3RhbmNlKGIpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9EKFwiMTg4XCIpOkQoXCIyMTNcIixPYmplY3Qua2V5cyhhKSl9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBFZyhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gRWcobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9EKFwiMzhcIik6dm9pZCAwO3JldHVybiBFZyhhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXt0ZyhhKT92b2lkIDA6XG5EKFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWC51bmJhdGNoZWRVcGRhdGVzKGZ1bmN0aW9uKCl7RWcobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gRmcuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOlguYmF0Y2hlZFVwZGF0ZXMsdW5zdGFibGVfZGVmZXJyZWRVcGRhdGVzOlguZGVmZXJyZWRVcGRhdGVzLGZsdXNoU3luYzpYLmZsdXNoU3luYyx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6WC5mbHVzaENvbnRyb2xsZWQsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50UGx1Z2luSHViOlFhLEV2ZW50UGx1Z2luUmVnaXN0cnk6eGEsRXZlbnRQcm9wYWdhdG9yczpqYixSZWFjdENvbnRyb2xsZWRDb21wb25lbnQ6WmIsUmVhY3RET01Db21wb25lbnRUcmVlOlhhLFxuUmVhY3RET01FdmVudExpc3RlbmVyOlpkfSx1bnN0YWJsZV9jcmVhdGVSb290OmZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBzZyhhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX19O1guaW5qZWN0SW50b0RldlRvb2xzKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpUYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjMuMVwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBIZz1PYmplY3QuZnJlZXplKHtkZWZhdWx0OkdnfSksSWc9SGcmJkdnfHxIZzttb2R1bGUuZXhwb3J0cz1JZ1tcImRlZmF1bHRcIl0/SWdbXCJkZWZhdWx0XCJdOklnO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4zLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpLHA9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIikscT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0scj1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsdD1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnBvcnRhbFwiKTo2MDEwNix1PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdj1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHc9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx4PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx5PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSx6PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsQT1cImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudFxceDNkXCIrYSxjPTA7YzxiO2MrKyllKz1cIlxceDI2YXJnc1tdXFx4M2RcIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2I9RXJyb3IoZStcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2IubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIjtiLmZyYW1lc1RvUG9wPTE7dGhyb3cgYjt9XG52YXIgQz17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX07ZnVuY3Rpb24gRChhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHxDfUQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307RC5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP0IoXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtELnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBFKCl7fVxuRS5wcm90b3R5cGU9RC5wcm90b3R5cGU7ZnVuY3Rpb24gRihhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHxDfXZhciBHPUYucHJvdG90eXBlPW5ldyBFO0cuY29uc3RydWN0b3I9RjttKEcsRC5wcm90b3R5cGUpO0cuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEg9e2N1cnJlbnQ6bnVsbH0sST1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEo9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEsoYSxiLGUpe3ZhciBjPXZvaWQgMCxkPXt9LGc9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUkuY2FsbChiLGMpJiYhSi5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zm9yKHZhciBrPUFycmF5KGYpLGw9MDtsPGY7bCsrKWtbbF09YXJndW1lbnRzW2wrMl07ZC5jaGlsZHJlbj1rfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2NdJiYoZFtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cix0eXBlOmEsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6SC5jdXJyZW50fX1cbmZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXJ9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIlxceDNkXCI6XCJcXHgzZDBcIixcIjpcIjpcIlxceDNkMlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nLE49W107ZnVuY3Rpb24gTyhhLGIsZSxjKXtpZihOLmxlbmd0aCl7dmFyIGQ9Ti5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWU7ZC5jb250ZXh0PWM7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmUsY29udGV4dDpjLGNvdW50OjB9fWZ1bmN0aW9uIFAoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5OLmxlbmd0aCYmTi5wdXNoKGEpfVxuZnVuY3Rpb24gUShhLGIsZSxjKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcjpjYXNlIHQ6Zz0hMH19aWYoZylyZXR1cm4gZShjLGEsXCJcIj09PWI/XCIuXCIrUihhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtkPWFbaF07dmFyIGY9YitSKGQsaCk7Zys9UShkLGYsZSxjKX1lbHNlIGlmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksXG5oPTA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1IoZCxoKyspLGcrPVEoZCxmLGUsYyk7ZWxzZVwib2JqZWN0XCI9PT1kJiYoZT1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWU/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZSxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gUihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gUyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBUKGEsYixlKXt2YXIgYz1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1UoYSxjLGUscC50aGF0UmV0dXJuc0FyZ3VtZW50KTpudWxsIT1hJiYoTChhKSYmKGI9ZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTSxcIiRcXHgyNi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6cix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFUoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTSxcIiRcXHgyNi9cIikrXCIvXCIpO2I9TyhiLGcsYyxkKTtudWxsPT1hfHxRKGEsXCJcIixULGIpO1AoYil9XG52YXIgVj17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtVKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1PKG51bGwsbnVsbCxiLGUpO251bGw9PWF8fFEoYSxcIlwiLFMsYik7UChiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/MDpRKGEsXCJcIixwLnRoYXRSZXR1cm5zTnVsbCxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtVKGEsYixudWxsLHAudGhhdFJldHVybnNBcmd1bWVudCk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TChhKT92b2lkIDA6QihcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RCxQdXJlQ29tcG9uZW50OkYsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOngsXG5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfZGVmYXVsdFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTphLF9jaGFuZ2VkQml0czowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dyxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp6LHJlbmRlcjphfX0sRnJhZ21lbnQ6dSxTdHJpY3RNb2RlOnYsdW5zdGFibGVfQXN5bmNNb2RlOnksY3JlYXRlRWxlbWVudDpLLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7dmFyIGM9dm9pZCAwLGQ9bSh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1ILmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgaz12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYoaz1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUkuY2FsbChiLFxuYykmJiFKLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1rP2tbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxjKXtrPUFycmF5KGMpO2Zvcih2YXIgbD0wO2w8YztsKyspa1tsXT1hcmd1bWVudHNbbCsyXTtkLmNoaWxkcmVuPWt9cmV0dXJueyQkdHlwZW9mOnIsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZCxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9Sy5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50OkwsdmVyc2lvbjpcIjE2LjMuMVwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpILGFzc2lnbjptfX0sVz1PYmplY3QuZnJlZXplKHtkZWZhdWx0OlZ9KSxYPVcmJlZ8fFc7XG5tb2R1bGUuZXhwb3J0cz1YW1wiZGVmYXVsdFwiXT9YW1wiZGVmYXVsdFwiXTpYO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgTXVpVGhlbWVQcm92aWRlciBmcm9tICdtYXRlcmlhbC11aS9zdHlsZXMvTXVpVGhlbWVQcm92aWRlcic7XG4vKiBlc2xpbnQtZGlzYWJsZSBzb3J0LWltcG9ydHMgKi9cbmltcG9ydCBCb29rIGZyb20gJy4vY29tcG9uZW50cy9Cb29rLmpzeCc7XG5pbXBvcnQgJy4vYXNzZXRzL21haW4uc2Nzcyc7XG5cbmNvbnN0IEFwcCA9ICgpID0+IChcbiAgPE11aVRoZW1lUHJvdmlkZXI+XG4gICAgPEJvb2sgLz5cbiAgPC9NdWlUaGVtZVByb3ZpZGVyPlxuKTtcblxucmVuZGVyKDxBcHAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Jvb2snKSk7XG4iXSwic291cmNlUm9vdCI6IiJ9